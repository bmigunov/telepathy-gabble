From cad5cc81187e290f62fb62abc6553c0570058416 Mon Sep 17 00:00:00 2001
From: Pekka Vuorela <pekka.vuorela@jolla.com>
Date: Mon, 22 Mar 2021 15:51:58 +0200
Subject: [PATCH 6/6] Port tests to python3

---
 tests/twisted/addressing.py                   | 22 ++++----
 tests/twisted/bytestream.py                   |  4 +-
 tests/twisted/caps/advertise-contact-caps.py  |  2 +-
 tests/twisted/caps/advertise-legacy.py        |  8 +--
 tests/twisted/caps/caps-cache.py              |  2 +-
 tests/twisted/caps/caps-persistent-cache.py   |  4 +-
 tests/twisted/caps/compat-bundles.py          |  2 +-
 tests/twisted/caps/from-bare-jid.py           |  2 +-
 tests/twisted/caps/hashed-caps.py             | 18 +++---
 tests/twisted/caps/jingle-caps.py             |  2 +-
 tests/twisted/caps/receive-jingle.py          | 30 +++++-----
 tests/twisted/caps/trust-thyself.py           |  8 +--
 tests/twisted/caps_helper.py                  | 30 +++++-----
 tests/twisted/client-types.py                 |  2 +-
 tests/twisted/cm/protocol.py                  |  6 +-
 .../connect/disco-error-from-bare-jid.py      |  2 +-
 tests/twisted/connect/test-nonblocking-tls.py |  6 +-
 tests/twisted/connect/test-success.py         |  2 +-
 tests/twisted/connect/test-twice.py           |  4 +-
 tests/twisted/connect/torture.py              |  6 +-
 tests/twisted/console.py                      |  2 +-
 tests/twisted/dataforms.py                    |  2 +-
 .../file-transfer/file_transfer_helper.py     | 10 ++--
 tests/twisted/file-transfer/ft-client-caps.py |  4 +-
 tests/twisted/file-transfer/metadata.py       |  2 +-
 .../file-transfer/test-caps-file-transfer.py  |  4 +-
 .../file-transfer/test-ibb-too-early.py       |  2 +-
 ...e-file-and-close-socket-while-receiving.py |  2 +-
 .../test-receive-file-and-disconnect.py       |  2 +-
 ...ile-and-sender-disconnect-while-pending.py |  4 +-
 ...and-sender-disconnect-while-transfering.py |  2 +-
 .../test-receive-file-decline.py              |  2 +-
 .../file-transfer/test-receive-file.py        |  2 +-
 .../test-send-file-and-cancel-immediately.py  |  2 +-
 .../file-transfer/test-send-file-declined.py  |  4 +-
 .../test-send-file-provide-immediately.py     |  4 +-
 .../test-send-file-send-before-accept.py      |  2 +-
 .../test-send-file-to-unknown-contact.py      |  4 +-
 .../test-send-file-wait-to-provide.py         |  2 +-
 tests/twisted/file-transfer/test-uri.py       |  2 +-
 tests/twisted/gabbletest.py                   | 56 +++++++++----------
 tests/twisted/gateways.py                     |  2 +-
 .../jingle-share/file_transfer_helper.py      |  2 +-
 .../jingle-share/test-caps-file-transfer.py   |  4 +-
 tests/twisted/jingle-share/test-multift.py    |  8 +--
 ...e-file-and-close-socket-while-receiving.py |  2 +-
 .../test-receive-file-and-disconnect.py       |  2 +-
 ...ile-and-sender-disconnect-while-pending.py |  4 +-
 ...and-sender-disconnect-while-transfering.py |  2 +-
 .../jingle-share/test-receive-file-decline.py |  4 +-
 .../test-send-file-and-cancel-immediately.py  |  4 +-
 .../test-send-file-send-before-accept.py      |  6 +-
 .../test-send-file-wait-to-provide.py         |  2 +-
 tests/twisted/jingle-share/test-send-file.py  |  2 +-
 tests/twisted/jingle/accept-extra-stream.py   |  6 +-
 tests/twisted/jingle/call-basics.py           | 24 ++++----
 tests/twisted/jingle/call-codecoffer.py       | 18 +++---
 .../jingle/call-content-adding-removal.py     |  6 +-
 tests/twisted/jingle/call-dtmf-no-audio.py    |  6 +-
 tests/twisted/jingle/call-dtmf.py             |  6 +-
 tests/twisted/jingle/call-google-relay.py     |  8 +--
 tests/twisted/jingle/call-hold-audio.py       | 10 ++--
 tests/twisted/jingle/call-hold-av.py          | 14 ++---
 tests/twisted/jingle/call-muc-cancel.py       |  2 +-
 .../twisted/jingle/call-muc-re-re-request.py  |  8 +--
 tests/twisted/jingle/call-muc.py              | 12 ++--
 tests/twisted/jingle/call-state.py            |  4 +-
 tests/twisted/jingle/call_helper.py           | 20 +++----
 tests/twisted/jingle/callutils.py             |  2 +-
 tests/twisted/jingle/decloak-peer.py          |  4 +-
 tests/twisted/jingle/dtmf-no-audio.py         |  4 +-
 tests/twisted/jingle/dtmf.py                  |  4 +-
 tests/twisted/jingle/google-relay.py          | 14 ++---
 tests/twisted/jingle/hold-audio.py            |  4 +-
 tests/twisted/jingle/hold-av.py               |  4 +-
 tests/twisted/jingle/incoming-basics.py       |  6 +-
 .../jingle/incoming-call-stream-error.py      |  6 +-
 .../jingle/incoming-gmail-modern-jingle.py    |  4 +-
 tests/twisted/jingle/initial-audio-video.py   | 25 +++++----
 tests/twisted/jingle/jingletest2.py           |  8 +--
 tests/twisted/jingle/misuse.py                |  8 +--
 tests/twisted/jingle/outgoing-basics.py       |  6 +-
 tests/twisted/jingle/outgoing-ensure.py       | 10 ++--
 tests/twisted/jingle/outgoing-many-streams.py | 10 ++--
 tests/twisted/jingle/payload-types.py         |  4 +-
 tests/twisted/jingle/preload-caps-crash.py    |  2 +-
 tests/twisted/jingle/session-id-collision.py  |  4 +-
 .../jingle/stream-errors-on-content-reject.py | 10 ++--
 .../jingle/stream-errors-on-terminate.py      |  6 +-
 tests/twisted/jingle/stream-handler-error.py  |  8 +--
 tests/twisted/jingle/stun-server.py           | 14 ++---
 .../jingle/test-content-adding-removal.py     |  4 +-
 tests/twisted/jingle/test-content-complex.py  | 10 ++--
 tests/twisted/jingle/test-description-info.py | 10 ++--
 .../jingle/test-incoming-call-reject.py       |  8 +--
 tests/twisted/jingle/test-incoming-iceudp.py  |  4 +-
 .../jingle/test-outgoing-call-rejected.py     |  6 +-
 tests/twisted/jingle/test-outgoing-iceudp.py  |  8 +--
 .../jingle/test-wait-for-caps-incomplete.py   |  2 +-
 tests/twisted/jingle/test-wait-for-caps.py    |  4 +-
 .../twisted/jingle/transport-info-parsing.py  |  4 +-
 tests/twisted/jingle/unknown-session.py       |  4 +-
 tests/twisted/mail-notification.py            | 16 +++---
 tests/twisted/muc/banned.py                   |  2 +-
 tests/twisted/muc/chat-states.py              |  2 +-
 tests/twisted/muc/kicked.py                   |  2 +-
 tests/twisted/muc/only-text-when-needed.py    |  4 +-
 tests/twisted/muc/password.py                 |  2 +-
 tests/twisted/muc/room-config.py              |  4 +-
 tests/twisted/muc/scrollback.py               |  6 +-
 tests/twisted/muc/send-error.py               |  4 +-
 tests/twisted/muc/test-muc-alias.py           |  6 +-
 tests/twisted/muc/test-muc-invitation.py      |  2 +-
 tests/twisted/muc/test-muc-ownership.py       | 14 ++---
 tests/twisted/muc/test-muc.py                 | 20 +++----
 tests/twisted/olpc/util.py                    |  2 +-
 tests/twisted/plugin-channel-managers.py      |  2 +-
 tests/twisted/power-save.py                   |  6 +-
 tests/twisted/presence/error.py               |  2 +-
 .../presence/initial-contact-presence.py      |  8 +--
 tests/twisted/presence/initial-presence.py    |  2 +-
 tests/twisted/presence/invisible_helper.py    | 20 +++----
 tests/twisted/presence/invisible_xep_0126.py  |  6 +-
 tests/twisted/presence/invisible_xep_0186.py  |  2 +-
 tests/twisted/presence/plugins.py             |  6 +-
 tests/twisted/presence/set-idempotence.py     | 24 ++++----
 tests/twisted/presence/shared-status.py       |  6 +-
 tests/twisted/pubsub.py                       | 12 ++--
 tests/twisted/roster/test-google-roster.py    |  2 +-
 .../roster/test-save-alias-to-roster.py       |  4 +-
 tests/twisted/search/extended.py              | 20 +++----
 tests/twisted/search/search_helper.py         |  2 +-
 tests/twisted/search/unextended.py            | 10 ++--
 tests/twisted/servicetest.py                  | 30 +++++-----
 tests/twisted/sidecar-own-caps.py             |  2 +-
 tests/twisted/sidecars.py                     |  4 +-
 tests/twisted/test-helper.py                  |  8 +--
 tests/twisted/test-location.py                | 26 ++++-----
 tests/twisted/text/destroy.py                 |  2 +-
 tests/twisted/text/facebook-own-message.py    |  4 +-
 tests/twisted/text/initiate.py                |  2 +-
 tests/twisted/text/receipts.py                | 10 ++--
 tests/twisted/text/respawn.py                 |  2 +-
 tests/twisted/text/test-chat-state.py         |  2 +-
 tests/twisted/text/test-text.py               | 20 +++----
 tests/twisted/tubes/accept-muc-stream-tube.py |  6 +-
 .../twisted/tubes/accept-private-dbus-tube.py |  2 +-
 .../tubes/accept-private-stream-tube.py       |  2 +-
 .../tubes/close-muc-with-closed-tube.py       |  4 +-
 .../tubes/create-invalid-tube-channels.py     |  2 +-
 tests/twisted/tubes/offer-muc-dbus-tube.py    | 10 ++--
 .../twisted/tubes/offer-private-dbus-tube.py  |  2 +-
 .../tubes/offer-private-stream-tube.py        |  4 +-
 .../tubes/request-invalid-dbus-tube.py        |  2 +-
 .../twisted/tubes/test-get-available-tubes.py |  2 +-
 tests/twisted/tubes/tubetestutil.py           |  2 +-
 tests/twisted/vcard/get-contact-info.py       | 12 ++--
 tests/twisted/vcard/overlapping-sets.py       |  6 +-
 tests/twisted/vcard/refresh-contact-info.py   | 12 ++--
 tests/twisted/vcard/set-contact-info.py       | 50 ++++++++---------
 tests/twisted/vcard/supported-fields.py       |  2 +-
 tests/twisted/vcard/test-alias-empty-vcard.py |  2 +-
 tests/twisted/vcard/test-alias-message.py     |  8 +--
 tests/twisted/vcard/test-alias-pep.py         |  2 +-
 tests/twisted/vcard/test-alias.py             |  2 +-
 tests/twisted/vcard/test-avatar-async.py      |  2 +-
 tests/twisted/vcard/test-avatar-tokens.py     |  2 +-
 tests/twisted/vcard/test-set-alias.py         | 12 ++--
 tests/twisted/vcard/update-get-failed.py      |  2 +-
 169 files changed, 591 insertions(+), 590 deletions(-)

diff --git a/tests/twisted/addressing.py b/tests/twisted/addressing.py
index 9528e12cb..a0d50b55f 100644
--- a/tests/twisted/addressing.py
+++ b/tests/twisted/addressing.py
@@ -147,13 +147,13 @@ def test_connection(q, bus, conn, stream):
     assertEquals(3, len(attributes))
     assertEquals(3, len(requested))
 
-    for attr in attributes.values():
-        assertContains(cs.CONN_IFACE_ADDRESSING + '/addresses', attr.keys())
-        assertContains('x-jabber', attr[cs.CONN_IFACE_ADDRESSING + '/addresses'].keys())
+    for attr in list(attributes.values()):
+        assertContains(cs.CONN_IFACE_ADDRESSING + '/addresses', list(attr.keys()))
+        assertContains('x-jabber', list(attr[cs.CONN_IFACE_ADDRESSING + '/addresses'].keys()))
         addresses.append(attr[cs.CONN_IFACE_ADDRESSING + '/addresses']['x-jabber'])
 
     assertSameSets(normalized_buddies, addresses)
-    assertSameSets(buddies, requested.keys());
+    assertSameSets(buddies, list(requested.keys()));
 
     normalized_buddies = ['12345', '54321']
     buddies = ['12345', '54321']
@@ -171,15 +171,15 @@ def test_connection(q, bus, conn, stream):
 
     addresses = []
 
-    for attr in attributes.values():
-        assertContains(cs.CONN_IFACE_ADDRESSING + '/addresses', attr.keys())
-        assertContains('x-facebook-id', attr[cs.CONN_IFACE_ADDRESSING + '/addresses'].keys())
+    for attr in list(attributes.values()):
+        assertContains(cs.CONN_IFACE_ADDRESSING + '/addresses', list(attr.keys()))
+        assertContains('x-facebook-id', list(attr[cs.CONN_IFACE_ADDRESSING + '/addresses'].keys()))
         addr = attr[cs.CONN_IFACE_ADDRESSING + '/addresses']['x-facebook-id']
         addresses.append(addr)
         assertEquals(attr[cs.CONN + '/contact-id'], "-" + addr + "@chat.facebook.com")
 
     assertSameSets(normalized_buddies, addresses)
-    assertSameSets(buddies, requested.keys());
+    assertSameSets(buddies, list(requested.keys()));
 
     normalized_buddies = ['amy%3F@foo.com', 'bob@foo.com', 'che@foo.com']
     buddies = ['AMY?@foo.com', 'bob@FOO.com', 'che@foo.com/resource']
@@ -197,11 +197,11 @@ def test_connection(q, bus, conn, stream):
     assertEquals(2, len(attributes))
     assertEquals(2, len(requested))
 
-    for attr in attributes.values():
+    for attr in list(attributes.values()):
         assertContains(attr[cs.CONN_IFACE_ADDRESSING + '/uris'][0], normalized_request_uris)
-        assertContains(cs.CONN_IFACE_ADDRESSING + '/uris', attr.keys())
+        assertContains(cs.CONN_IFACE_ADDRESSING + '/uris', list(attr.keys()))
 
-    assertSameSets(valid_request_uris, requested.keys())
+    assertSameSets(valid_request_uris, list(requested.keys()))
 
 if __name__ == '__main__':
     exec_test(test_protocol)
diff --git a/tests/twisted/bytestream.py b/tests/twisted/bytestream.py
index e88c67763..434a576fa 100644
--- a/tests/twisted/bytestream.py
+++ b/tests/twisted/bytestream.py
@@ -717,11 +717,11 @@ class BytestreamIBBMsg(BytestreamIBB):
 
 class BytestreamIBBIQ(BytestreamIBB):
     def _send(self, from_, to, data):
-        id = random.randint(0, sys.maxint)
+        id = random.randint(0, sys.maxsize)
 
         iq = elem_iq(self.stream, 'set', from_=from_, to=to, id=str(id))(
             elem('data', xmlns=ns.IBB, sid=self.stream_id, seq=str(self.seq))(
-                (unicode(base64.b64encode(data)))))
+                (str(base64.b64encode(data)))))
 
         self.stream.send(iq)
 
diff --git a/tests/twisted/caps/advertise-contact-caps.py b/tests/twisted/caps/advertise-contact-caps.py
index 138cb2627..f28afa7be 100644
--- a/tests/twisted/caps/advertise-contact-caps.py
+++ b/tests/twisted/caps/advertise-contact-caps.py
@@ -17,7 +17,7 @@ import ns
 from config import FILE_TRANSFER_ENABLED, VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def noop_presence_update(q, stream):
diff --git a/tests/twisted/caps/advertise-legacy.py b/tests/twisted/caps/advertise-legacy.py
index 95b16245a..f4f7c4430 100644
--- a/tests/twisted/caps/advertise-legacy.py
+++ b/tests/twisted/caps/advertise-legacy.py
@@ -16,7 +16,7 @@ import ns
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def run_test(q, bus, conn, stream):
@@ -28,9 +28,9 @@ def run_test(q, bus, conn, stream):
     #
     # Also, MC sometimes puts the same channel type in the list twice, so
     # make sure Gabble copes.
-    add = [(cs.CHANNEL_TYPE_STREAMED_MEDIA, 2L**32-1),
-            (cs.CHANNEL_TYPE_STREAM_TUBE, 2L**32-1),
-            (cs.CHANNEL_TYPE_STREAM_TUBE, 2L**32-1)]
+    add = [(cs.CHANNEL_TYPE_STREAMED_MEDIA, 2**32-1),
+            (cs.CHANNEL_TYPE_STREAM_TUBE, 2**32-1),
+            (cs.CHANNEL_TYPE_STREAM_TUBE, 2**32-1)]
     remove = []
     caps = conn.Capabilities.AdvertiseCapabilities(add, remove)
     (disco_response, namespaces, _, _) = receive_presence_and_ask_caps(q, stream,
diff --git a/tests/twisted/caps/caps-cache.py b/tests/twisted/caps/caps-cache.py
index 9c63e03b6..4f2e4db99 100644
--- a/tests/twisted/caps/caps-cache.py
+++ b/tests/twisted/caps/caps-cache.py
@@ -17,7 +17,7 @@ from caps_helper import (
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 client = 'http://telepathy.freedesktop.org/fake-client/caps-cache'
diff --git a/tests/twisted/caps/caps-persistent-cache.py b/tests/twisted/caps/caps-persistent-cache.py
index 2b1318396..8b4140835 100644
--- a/tests/twisted/caps/caps-persistent-cache.py
+++ b/tests/twisted/caps/caps-persistent-cache.py
@@ -12,7 +12,7 @@ import ns
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 contact_bare_jid = 'macbeth@glamis'
@@ -28,7 +28,7 @@ features = [
 xiangqi_tube_cap = (
     {cs.CHANNEL_TYPE: cs.CHANNEL_TYPE_DBUS_TUBE,
       cs.TARGET_HANDLE_TYPE: cs.HT_CONTACT,
-      cs.DBUS_TUBE_SERVICE_NAME: u'com.example.Xiangqi'},
+      cs.DBUS_TUBE_SERVICE_NAME: 'com.example.Xiangqi'},
     [cs.TARGET_HANDLE, cs.TARGET_ID])
 
 def send_presence(q, stream, contact_jid, identity):
diff --git a/tests/twisted/caps/compat-bundles.py b/tests/twisted/caps/compat-bundles.py
index 68904db3c..e1423f911 100644
--- a/tests/twisted/caps/compat-bundles.py
+++ b/tests/twisted/caps/compat-bundles.py
@@ -19,7 +19,7 @@ import ns
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def disco_bundle(q, bus, conn, stream, node, features):
diff --git a/tests/twisted/caps/from-bare-jid.py b/tests/twisted/caps/from-bare-jid.py
index 0460fd61b..418ade2f1 100644
--- a/tests/twisted/caps/from-bare-jid.py
+++ b/tests/twisted/caps/from-bare-jid.py
@@ -15,7 +15,7 @@ import ns
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/caps/hashed-caps.py b/tests/twisted/caps/hashed-caps.py
index 5c4562c7e..2ce42221d 100644
--- a/tests/twisted/caps/hashed-caps.py
+++ b/tests/twisted/caps/hashed-caps.py
@@ -37,7 +37,7 @@ from caps_helper import (
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 caps_changed_flag = False
@@ -67,7 +67,7 @@ def test_hash(q, bus, conn, stream, contact, contact_handle, client):
 
     q.expect('dbus-signal', signal='PresencesChanged',
             args=[{contact_handle:
-                (2, u'available', 'hello')}])
+                (2, 'available', 'hello')}])
 
     # no special capabilities
     basic_caps = [(contact_handle, cs.CHANNEL_TYPE_TEXT, 3, 0)]
@@ -104,7 +104,7 @@ def test_hash(q, bus, conn, stream, contact, contact_handle, client):
     # be media-capable afterwards.
     stream.send(make_presence(contact, status='very capable'))
     q.expect('dbus-signal', signal='PresencesChanged',
-        args=[{contact_handle: (2, u'available', 'very capable')}])
+        args=[{contact_handle: (2, 'available', 'very capable')}])
     ye_olde_caps = conn.Capabilities.GetCapabilities([contact_handle])
     assertLength(1, [c for c in ye_olde_caps
                        if c[1] == cs.CHANNEL_TYPE_STREAMED_MEDIA and
@@ -205,14 +205,14 @@ def test_two_clients(q, bus, conn, stream, contact1, contact2,
 
     q.expect('dbus-signal', signal='PresencesChanged',
             args=[{contact_handle1:
-                (2, u'available', 'hello')}])
+                (2, 'available', 'hello')}])
 
     presence = make_presence(contact2, status='hello')
     stream.send(presence)
 
     q.expect('dbus-signal', signal='PresencesChanged',
             args=[{contact_handle2:
-                (2, u'available', 'hello')}])
+                (2, 'available', 'hello')}])
 
     # no special capabilities
     basic_caps = [(contact_handle1, cs.CHANNEL_TYPE_TEXT, 3, 0)]
@@ -322,14 +322,14 @@ def test(q, bus, conn, stream):
     conn_caps_iface = dbus.Interface(conn, cs.CONN_IFACE_CAPS)
     conn_caps_iface.connect_to_signal('CapabilitiesChanged', caps_changed_cb)
 
-    test_hash(q, bus, conn, stream, 'bob@foo.com/Foo', 2L, 'http://telepathy.freedesktop.org/fake-client')
-    test_hash(q, bus, conn, stream, 'bob2@foo.com/Foo', 3L, 'http://telepathy.freedesktop.org/fake-client2')
+    test_hash(q, bus, conn, stream, 'bob@foo.com/Foo', 2, 'http://telepathy.freedesktop.org/fake-client')
+    test_hash(q, bus, conn, stream, 'bob2@foo.com/Foo', 3, 'http://telepathy.freedesktop.org/fake-client2')
 
     test_two_clients(q, bus, conn, stream, 'user1@example.com/Res',
-            'user2@example.com/Res', 4L, 5L,
+            'user2@example.com/Res', 4, 5,
             'http://telepathy.freedesktop.org/fake-client3', 0)
     test_two_clients(q, bus, conn, stream, 'user3@example.com/Res',
-            'user4@example.com/Res', 6L, 7L,
+            'user4@example.com/Res', 6, 7,
             'http://telepathy.freedesktop.org/fake-client4', 1)
 
     test_39464(q, bus, conn, stream)
diff --git a/tests/twisted/caps/jingle-caps.py b/tests/twisted/caps/jingle-caps.py
index 42f69cf1d..6283b967e 100644
--- a/tests/twisted/caps/jingle-caps.py
+++ b/tests/twisted/caps/jingle-caps.py
@@ -19,7 +19,7 @@ from jingle.jingletest2 import JingleTest2, JingleProtocol031
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 client = 'http://telepathy.freedesktop.org/fake-client'
diff --git a/tests/twisted/caps/receive-jingle.py b/tests/twisted/caps/receive-jingle.py
index 7ea84f535..5180c0362 100644
--- a/tests/twisted/caps/receive-jingle.py
+++ b/tests/twisted/caps/receive-jingle.py
@@ -11,7 +11,7 @@ import constants as cs
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 icaps_attr  = cs.CONN_IFACE_CAPS + "/caps"
@@ -22,7 +22,7 @@ def test(q, bus, conn, stream):
     stream.send(presence)
 
     q.expect('dbus-signal', signal='PresencesChanged',
-           args=[{2L: (2, u'available', 'hello')}])
+           args=[{2: (2, 'available', 'hello')}])
 
     # FIXME: throughout this test, Bob's handle is assumed to be 2.
 
@@ -32,7 +32,7 @@ def test(q, bus, conn, stream):
     # holding the handle here: see below
     assert conn.Contacts.GetContactAttributes(
         [2], [cs.CONN_IFACE_CAPS], True) == \
-        { 2L: { icaps_attr: basic_caps,
+        { 2: { icaps_attr: basic_caps,
                 cs.CONN + '/contact-id': 'bob@foo.com'}}
 
     # send updated presence with Jingle audio/video caps info. we turn on both
@@ -81,11 +81,11 @@ def test(q, bus, conn, stream):
             0, cs.MEDIA_CAP_AUDIO | cs.MEDIA_CAP_VIDEO)]])
 
     caps = conn.Contacts.GetContactAttributes([2], [cs.CONN_IFACE_CAPS], False)
-    assert caps.keys() == [2L]
-    assert icaps_attr in caps[2L]
-    assert len(caps[2L][icaps_attr]) == 2
-    assert basic_caps[0] in caps[2L][icaps_attr]
-    assert (2, cs.CHANNEL_TYPE_STREAMED_MEDIA, 3, 3) in caps[2L][icaps_attr]
+    assert list(caps.keys()) == [2]
+    assert icaps_attr in caps[2]
+    assert len(caps[2][icaps_attr]) == 2
+    assert basic_caps[0] in caps[2][icaps_attr]
+    assert (2, cs.CHANNEL_TYPE_STREAMED_MEDIA, 3, 3) in caps[2][icaps_attr]
 
     # send updated presence without video support
     presence = make_presence('bob@foo.com/Foo', status='hello',
@@ -103,13 +103,13 @@ def test(q, bus, conn, stream):
             cs.MEDIA_CAP_AUDIO | cs.MEDIA_CAP_IMMUTABLE_STREAMS)]])
 
     caps = conn.Contacts.GetContactAttributes([2], [cs.CONN_IFACE_CAPS], False)
-    assert caps.keys() == [2L]
-    assert icaps_attr in caps[2L]
-    assert len(caps[2L][icaps_attr]) == 2
-    assert basic_caps[0] in caps[2L][icaps_attr]
+    assert list(caps.keys()) == [2]
+    assert icaps_attr in caps[2]
+    assert len(caps[2][icaps_attr]) == 2
+    assert basic_caps[0] in caps[2][icaps_attr]
     assert (2, cs.CHANNEL_TYPE_STREAMED_MEDIA, 3,
         cs.MEDIA_CAP_AUDIO | cs.MEDIA_CAP_IMMUTABLE_STREAMS) \
-        in caps[2L][icaps_attr]
+        in caps[2][icaps_attr]
 
     # go offline
     presence = make_presence('bob@foo.com/Foo', type='unavailable')
@@ -132,7 +132,7 @@ def test(q, bus, conn, stream):
     # invalid.
     assert conn.Contacts.GetContactAttributes(
         [2], [cs.CONN_IFACE_CAPS], False) == \
-        { 2L: { icaps_attr: basic_caps,
+        { 2: { icaps_attr: basic_caps,
                 cs.CONN + '/contact-id': 'bob@foo.com'}}
 
     # What about a handle that's not valid?
@@ -142,7 +142,7 @@ def test(q, bus, conn, stream):
     # regression test for fd.o #15198: getting caps of invalid handle crashed
     try:
         conn.Capabilities.GetCapabilities([31337])
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         pass
     else:
         assert False, "Should have had an error!"
diff --git a/tests/twisted/caps/trust-thyself.py b/tests/twisted/caps/trust-thyself.py
index 34a145b62..12f7b2ac7 100644
--- a/tests/twisted/caps/trust-thyself.py
+++ b/tests/twisted/caps/trust-thyself.py
@@ -13,7 +13,7 @@ import constants as cs
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
@@ -50,9 +50,9 @@ def test(q, bus, conn, stream):
     sync_stream(q, stream)
 
     # Advertise some different capabilities, to change our own caps hash.
-    add = [(cs.CHANNEL_TYPE_STREAMED_MEDIA, 2L**32-1),
-           (cs.CHANNEL_TYPE_STREAM_TUBE, 2L**32-1),
-           (cs.CHANNEL_TYPE_STREAM_TUBE, 2L**32-1)]
+    add = [(cs.CHANNEL_TYPE_STREAMED_MEDIA, 2**32-1),
+           (cs.CHANNEL_TYPE_STREAM_TUBE, 2**32-1),
+           (cs.CHANNEL_TYPE_STREAM_TUBE, 2**32-1)]
     remove = []
     caps = conn.Capabilities.AdvertiseCapabilities(add, remove)
 
diff --git a/tests/twisted/caps_helper.py b/tests/twisted/caps_helper.py
index 11b05d9d8..e55b217a6 100644
--- a/tests/twisted/caps_helper.py
+++ b/tests/twisted/caps_helper.py
@@ -161,12 +161,12 @@ def compute_caps_hash(identities, features, dataforms):
     components.append('')
 
     m = hashlib.sha1()
-    S = u'<'.join(components)
+    S = '<'.join(components)
     m.update(S.encode('utf-8'))
     return base64.b64encode(m.digest())
 
 def add_data_forms(root, dataforms):
-    for type, fields in dataforms.iteritems():
+    for type, fields in dataforms.items():
         x = root.addElement((ns.X_DATA, 'x'))
         x['type'] = 'result'
 
@@ -175,7 +175,7 @@ def add_data_forms(root, dataforms):
         field['type'] = 'hidden'
         field.addElement('value', content=type)
 
-        for var, values in fields.iteritems():
+        for var, values in fields.items():
             field = x.addElement('field')
             field['var'] = var
 
@@ -323,7 +323,7 @@ def send_presence(q, conn, stream, contact, caps, initial=True, show=None):
 
         q.expect('dbus-signal', signal='PresencesChanged',
                 args=[{h:
-                   (2, u'available', 'hello')}])
+                   (2, 'available', 'hello')}])
 
         # no special capabilities
         assertEquals([(h, cs.CHANNEL_TYPE_TEXT, 3, 0)],
@@ -356,20 +356,20 @@ if __name__ == '__main__':
             {}))
 
     # another example from XEP-0115
-    identities = [u'client/pc/en/Psi 0.11', u'client/pc/el/Ψ 0.11']
+    identities = ['client/pc/en/Psi 0.11', 'client/pc/el/Ψ 0.11']
     features = [
-        u'http://jabber.org/protocol/caps',
-        u'http://jabber.org/protocol/disco#info',
-        u'http://jabber.org/protocol/disco#items',
-        u'http://jabber.org/protocol/muc',
+        'http://jabber.org/protocol/caps',
+        'http://jabber.org/protocol/disco#info',
+        'http://jabber.org/protocol/disco#items',
+        'http://jabber.org/protocol/muc',
         ]
     dataforms = {
-        u'urn:xmpp:dataforms:softwareinfo':
-            { u'ip_version': [u'ipv4', u'ipv6'],
-              u'os': [u'Mac'],
-              u'os_version': [u'10.5.1'],
-              u'software': [u'Psi'],
-              u'software_version': [u'0.11'],
+        'urn:xmpp:dataforms:softwareinfo':
+            { 'ip_version': ['ipv4', 'ipv6'],
+              'os': ['Mac'],
+              'os_version': ['10.5.1'],
+              'software': ['Psi'],
+              'software_version': ['0.11'],
             },
         }
     assertEquals('q07IKJEyjvHSyhy//CH0CxmKi8w=',
diff --git a/tests/twisted/client-types.py b/tests/twisted/client-types.py
index 2eaeebedb..c4ad5170f 100644
--- a/tests/twisted/client-types.py
+++ b/tests/twisted/client-types.py
@@ -37,7 +37,7 @@ TRANSIENT_PHONE = ['client/phone/en/fleeting visit']
 BANANAPHONE = ['client/phone/en/banana milk is pretty disgusting']
 
 def build_stuff(identities):
-    types = map(lambda x: x.split('/')[1], identities)
+    types = [x.split('/')[1] for x in identities]
 
     # add something to the end of the client string so that the caps
     # hashes aren't all the same and so stop discoing
diff --git a/tests/twisted/cm/protocol.py b/tests/twisted/cm/protocol.py
index e9c0b1c3b..7fc08c9c5 100644
--- a/tests/twisted/cm/protocol.py
+++ b/tests/twisted/cm/protocol.py
@@ -31,7 +31,7 @@ def test(q, bus, conn, stream):
     proto_props = unwrap(proto_prop_iface.GetAll(cs.PROTOCOL))
 
     for key in ['Parameters', 'Interfaces', 'ConnectionInterfaces',
-      'RequestableChannelClasses', u'VCardField', u'EnglishName', u'Icon']:
+      'RequestableChannelClasses', 'VCardField', 'EnglishName', 'Icon']:
         a = jabber_props[cs.PROTOCOL + '.' + key]
         b = proto_props[key]
         assertEquals(a, b)
@@ -55,7 +55,7 @@ def test(q, bus, conn, stream):
     presences = proto_prop_iface.Get(cs.PROTOCOL_IFACE_PRESENCES, 'Statuses');
     # Plugins could add additional statuses, so we check if expected_status is
     # included in presences rather than equality.
-    for k, v in expected_status.iteritems():
+    for k, v in expected_status.items():
         assertEquals(expected_status[k], unwrap(presences[k]))
 
     # (Only) 'account' is mandatory for IdentifyAccount()
@@ -70,7 +70,7 @@ def test(q, bus, conn, stream):
     q.expect('dbus-signal', signal='StatusChanged', args=[cs.CONN_STATUS_CONNECTING, cs.CSR_REQUESTED])
     q.expect('stream-authenticated')
     q.expect('dbus-signal', signal='PresencesChanged',
-        args=[{1L: (cs.PRESENCE_AVAILABLE, 'available', '')}])
+        args=[{1: (cs.PRESENCE_AVAILABLE, 'available', '')}])
     q.expect('dbus-signal', signal='StatusChanged', args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED])
     return
 
diff --git a/tests/twisted/connect/disco-error-from-bare-jid.py b/tests/twisted/connect/disco-error-from-bare-jid.py
index f9fd9bb6d..beb71f3d3 100644
--- a/tests/twisted/connect/disco-error-from-bare-jid.py
+++ b/tests/twisted/connect/disco-error-from-bare-jid.py
@@ -32,7 +32,7 @@ class BareJidDiscoErrorXmlStream(XmppXmlStream):
             error_stanza=elem('error')(
                 elem(ns.STANZA, 'feature-not-implemented'),
                 elem(ns.STANZA, 'text')(
-                    u'No, officer! This is certainly not an illegal party.')
+                    'No, officer! This is certainly not an illegal party.')
                 ))
 
 if __name__ == '__main__':
diff --git a/tests/twisted/connect/test-nonblocking-tls.py b/tests/twisted/connect/test-nonblocking-tls.py
index 1ca64a33b..513ac38c0 100644
--- a/tests/twisted/connect/test-nonblocking-tls.py
+++ b/tests/twisted/connect/test-nonblocking-tls.py
@@ -76,7 +76,7 @@ def test(q, bus, conn1, conn2, stream1, stream2):
             args=[cs.CONN_STATUS_CONNECTING, cs.CSR_REQUESTED])
     q.expect('stream-authenticated')
     q.expect('dbus-signal', signal='PresencesChanged',
-        args=[{1L: (cs.PRESENCE_AVAILABLE, 'available', '')}])
+        args=[{1: (cs.PRESENCE_AVAILABLE, 'available', '')}])
     q.expect('dbus-signal', signal='StatusChanged',
             args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED])
 
@@ -126,7 +126,7 @@ if __name__ == '__main__':
         lambda *args, **kw:
             queue.append(Event('dbus-signal',
                                path=unwrap(kw['path']),
-                               signal=kw['member'], args=map(unwrap, args),
+                               signal=kw['member'], args=list(map(unwrap, args)),
                                interface=kw['interface'])),
         None,       # signal name
         None,       # interface
@@ -143,6 +143,6 @@ if __name__ == '__main__':
         try:
             conn1.Disconnect()
             conn2.Disconnect()
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             pass
 
diff --git a/tests/twisted/connect/test-success.py b/tests/twisted/connect/test-success.py
index 5e3eb2f5f..50b655f88 100644
--- a/tests/twisted/connect/test-success.py
+++ b/tests/twisted/connect/test-success.py
@@ -11,7 +11,7 @@ def test(q, bus, conn, stream):
     q.expect('dbus-signal', signal='StatusChanged', args=[cs.CONN_STATUS_CONNECTING, cs.CSR_REQUESTED])
     q.expect('stream-authenticated')
     q.expect('dbus-signal', signal='PresencesChanged',
-        args=[{1L: (cs.PRESENCE_AVAILABLE, 'available', '')}])
+        args=[{1: (cs.PRESENCE_AVAILABLE, 'available', '')}])
     q.expect('dbus-signal', signal='StatusChanged', args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED])
 
 if __name__ == '__main__':
diff --git a/tests/twisted/connect/test-twice.py b/tests/twisted/connect/test-twice.py
index 437ecec61..4cdb65a6a 100644
--- a/tests/twisted/connect/test-twice.py
+++ b/tests/twisted/connect/test-twice.py
@@ -24,7 +24,7 @@ def test(q, bus, conns, streams):
              path=conn1.object.object_path)
     q.expect('stream-authenticated')
     q.expect('dbus-signal', signal='PresencesChanged',
-             args=[{1L: (cs.PRESENCE_AVAILABLE, 'available', '')}],
+             args=[{1: (cs.PRESENCE_AVAILABLE, 'available', '')}],
              path=conn1.object.object_path)
     q.expect('dbus-signal', signal='StatusChanged',
              args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED],
@@ -48,7 +48,7 @@ def test(q, bus, conns, streams):
              path=conn2.object.object_path)
     q.expect('stream-authenticated')
     q.expect('dbus-signal', signal='PresencesChanged',
-             args=[{1L: (cs.PRESENCE_AVAILABLE, 'available', '')}],
+             args=[{1: (cs.PRESENCE_AVAILABLE, 'available', '')}],
              path=conn2.object.object_path)
     q.expect('dbus-signal', signal='StatusChanged',
              args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED],
diff --git a/tests/twisted/connect/torture.py b/tests/twisted/connect/torture.py
index 332b8a20d..d3e1c5257 100644
--- a/tests/twisted/connect/torture.py
+++ b/tests/twisted/connect/torture.py
@@ -15,10 +15,10 @@ def test(q, bus, conn, stream):
     pass
 
 def main():
-    for i in xrange(0, 2000):
-        print i
+    for i in range(0, 2000):
+        print(i)
         exec_test(test)
-    print "we partied like it's %i" % i
+    print("we partied like it's %i" % i)
 
 if __name__ == '__main__':
     main()
diff --git a/tests/twisted/console.py b/tests/twisted/console.py
index 95c76a30e..2609d1a6d 100644
--- a/tests/twisted/console.py
+++ b/tests/twisted/console.py
@@ -15,7 +15,7 @@ CONSOLE_PLUGIN_IFACE = "org.freedesktop.Telepathy.Gabble.Plugin.Console"
 STACY = 'stacy@pilgrim.lit'
 
 if not PLUGINS_ENABLED:
-    print "NOTE: built without --enable-plugins, not testing XMPP console"
+    print("NOTE: built without --enable-plugins, not testing XMPP console")
     raise SystemExit(77)
 
 def send_unrecognised_get(q, stream):
diff --git a/tests/twisted/dataforms.py b/tests/twisted/dataforms.py
index 6004c1516..e55c4cf6a 100644
--- a/tests/twisted/dataforms.py
+++ b/tests/twisted/dataforms.py
@@ -14,7 +14,7 @@ from config import VOIP_ENABLED
 # to UpdateCapabilities or AdvertiseCapabilities. These caps are all related
 # to VoIP, so disabling VoIP breaks the assumptions this test is based on.
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/file-transfer/file_transfer_helper.py b/tests/twisted/file-transfer/file_transfer_helper.py
index 79b3acf92..ca865ee35 100644
--- a/tests/twisted/file-transfer/file_transfer_helper.py
+++ b/tests/twisted/file-transfer/file_transfer_helper.py
@@ -109,7 +109,7 @@ class FileTransferTest(object):
             EventPattern('stream-iq', iq_type='get',
                 query_ns='http://jabber.org/protocol/disco#info', to=self.contact_full_jid),
             EventPattern('dbus-signal', signal='PresencesChanged', args=[
-                {self.handle: (cs.PRESENCE_AVAILABLE, u'available', u'')}]))
+                {self.handle: (cs.PRESENCE_AVAILABLE, 'available', '')}]))
 
         assert disco_event.query['node'] == \
             'http://example.com/ISupportFT#1.0'
@@ -279,11 +279,11 @@ class ReceiveFileTest(FileTransferTest):
                 self.access_control, self.access_control_param,
                 self.file.offset,
                 byte_arrays=True)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             if self.address_type == cs.SOCKET_ADDRESS_TYPE_IPV6 and \
                 e.get_dbus_name() == cs.NOT_AVAILABLE and \
                 e.get_dbus_message() == "Could not set up local socket":
-                print "Ignoring error for ipv6 address space"
+                print("Ignoring error for ipv6 address space")
                 return True
             else:
                 raise e
@@ -491,11 +491,11 @@ class SendFileTest(FileTransferTest):
             self.address = self.ft_channel.ProvideFile(self.address_type,
                 self.access_control, self.access_control_param,
                 byte_arrays=True)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             if self.address_type == cs.SOCKET_ADDRESS_TYPE_IPV6 and \
               e.get_dbus_name() == cs.NOT_AVAILABLE and \
               e.get_dbus_message() == "Could not set up local socket":
-                print "Ignoring error for ipv6 address space"
+                print("Ignoring error for ipv6 address space")
                 return True
             else:
                 raise e
diff --git a/tests/twisted/file-transfer/ft-client-caps.py b/tests/twisted/file-transfer/ft-client-caps.py
index 336d7a070..8bf8fdb7c 100644
--- a/tests/twisted/file-transfer/ft-client-caps.py
+++ b/tests/twisted/file-transfer/ft-client-caps.py
@@ -53,11 +53,11 @@ import ns
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 def dict_union(a, b):
-    return dbus.Dictionary(a.items() + b.items(), signature='sv')
+    return dbus.Dictionary(list(a.items()) + list(b.items()), signature='sv')
 
 no_service_fixed_properties = {
     cs.TARGET_HANDLE_TYPE: cs.HT_CONTACT,
diff --git a/tests/twisted/file-transfer/metadata.py b/tests/twisted/file-transfer/metadata.py
index 8667a9caa..96580fff9 100644
--- a/tests/twisted/file-transfer/metadata.py
+++ b/tests/twisted/file-transfer/metadata.py
@@ -10,7 +10,7 @@ import constants as cs
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class SendFileNoMetadata(SendFileTest):
diff --git a/tests/twisted/file-transfer/test-caps-file-transfer.py b/tests/twisted/file-transfer/test-caps-file-transfer.py
index 743906af0..8aaaa10f5 100644
--- a/tests/twisted/file-transfer/test-caps-file-transfer.py
+++ b/tests/twisted/file-transfer/test-caps-file-transfer.py
@@ -16,7 +16,7 @@ import ns
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 def test_ft_caps_from_contact(q, bus, conn, stream, contact, contact_handle, client):
@@ -108,7 +108,7 @@ def test(q, bus, conn, stream):
     client = 'http://telepathy.freedesktop.org/fake-ft-client'
 
     test_ft_caps_from_contact(q, bus, conn, stream, 'bilbo1@foo.com/Foo',
-        2L, client)
+        2, client)
 
     # our own capabilities, formerly tested here, are now in
     # tests/twisted/caps/advertise-contact-capabilities.py
diff --git a/tests/twisted/file-transfer/test-ibb-too-early.py b/tests/twisted/file-transfer/test-ibb-too-early.py
index a5a8d97b8..dfe579882 100644
--- a/tests/twisted/file-transfer/test-ibb-too-early.py
+++ b/tests/twisted/file-transfer/test-ibb-too-early.py
@@ -9,7 +9,7 @@ import constants as cs
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class IbbTooEarlyTest (ReceiveFileTest):
diff --git a/tests/twisted/file-transfer/test-receive-file-and-close-socket-while-receiving.py b/tests/twisted/file-transfer/test-receive-file-and-close-socket-while-receiving.py
index 2f496004c..66faf658c 100644
--- a/tests/twisted/file-transfer/test-receive-file-and-close-socket-while-receiving.py
+++ b/tests/twisted/file-transfer/test-receive-file-and-close-socket-while-receiving.py
@@ -5,7 +5,7 @@ from file_transfer_helper import exec_file_transfer_test, ReceiveFileTest
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class ReceiveFileAndCancelWhileReceiving(ReceiveFileTest):
diff --git a/tests/twisted/file-transfer/test-receive-file-and-disconnect.py b/tests/twisted/file-transfer/test-receive-file-and-disconnect.py
index b95c67bc1..7c500dfa3 100644
--- a/tests/twisted/file-transfer/test-receive-file-and-disconnect.py
+++ b/tests/twisted/file-transfer/test-receive-file-and-disconnect.py
@@ -4,7 +4,7 @@ from file_transfer_helper import exec_file_transfer_test, ReceiveFileTest
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class ReceiveFileAndDisconnectTest(ReceiveFileTest):
diff --git a/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-pending.py b/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-pending.py
index 906a2a50f..71ae6fcce 100644
--- a/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-pending.py
+++ b/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-pending.py
@@ -8,7 +8,7 @@ from file_transfer_helper import exec_file_transfer_test, ReceiveFileTest
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class ReceiveFileAndSenderDisconnectWhilePendingTest(ReceiveFileTest):
@@ -30,7 +30,7 @@ class ReceiveFileAndSenderDisconnectWhilePendingTest(ReceiveFileTest):
             # IPv4 is always guaranteed to be available
             self.ft_channel.AcceptFile(cs.SOCKET_ADDRESS_TYPE_IPV4,
                 cs.SOCKET_ACCESS_CONTROL_LOCALHOST, "", 0)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.NOT_AVAILABLE
         else:
             assert False
diff --git a/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-transfering.py b/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-transfering.py
index 223640c54..b31921e69 100644
--- a/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-transfering.py
+++ b/tests/twisted/file-transfer/test-receive-file-and-sender-disconnect-while-transfering.py
@@ -6,7 +6,7 @@ from file_transfer_helper import exec_file_transfer_test, ReceiveFileTest
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class ReceiveFileAndSenderDisconnectWhileTransfering(ReceiveFileTest):
diff --git a/tests/twisted/file-transfer/test-receive-file-decline.py b/tests/twisted/file-transfer/test-receive-file-decline.py
index 15bd7bb18..0c0dfdaca 100644
--- a/tests/twisted/file-transfer/test-receive-file-decline.py
+++ b/tests/twisted/file-transfer/test-receive-file-decline.py
@@ -7,7 +7,7 @@ from file_transfer_helper import ReceiveFileTest, exec_file_transfer_test
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class ReceiveFileDeclineTest(ReceiveFileTest):
diff --git a/tests/twisted/file-transfer/test-receive-file.py b/tests/twisted/file-transfer/test-receive-file.py
index cb3c504c1..44d5f0c62 100644
--- a/tests/twisted/file-transfer/test-receive-file.py
+++ b/tests/twisted/file-transfer/test-receive-file.py
@@ -3,7 +3,7 @@ from file_transfer_helper import exec_file_transfer_test, ReceiveFileTest
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 if __name__ == '__main__':
diff --git a/tests/twisted/file-transfer/test-send-file-and-cancel-immediately.py b/tests/twisted/file-transfer/test-send-file-and-cancel-immediately.py
index 593b7248f..6829f4fe6 100644
--- a/tests/twisted/file-transfer/test-send-file-and-cancel-immediately.py
+++ b/tests/twisted/file-transfer/test-send-file-and-cancel-immediately.py
@@ -4,7 +4,7 @@ from file_transfer_helper import SendFileTest, exec_file_transfer_test
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class SendFileAndCancelImmediatelyTest(SendFileTest):
diff --git a/tests/twisted/file-transfer/test-send-file-declined.py b/tests/twisted/file-transfer/test-send-file-declined.py
index f2e79ab9c..ede972933 100644
--- a/tests/twisted/file-transfer/test-send-file-declined.py
+++ b/tests/twisted/file-transfer/test-send-file-declined.py
@@ -8,7 +8,7 @@ import ns
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class SendFileDeclinedTest(SendFileTest):
@@ -42,7 +42,7 @@ class SendFileDeclinedTest(SendFileTest):
         # cs.NOT_AVAILABLE
         try:
             assert self.provide_file()
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.NOT_AVAILABLE
 
         # stop test
diff --git a/tests/twisted/file-transfer/test-send-file-provide-immediately.py b/tests/twisted/file-transfer/test-send-file-provide-immediately.py
index d7465816d..def2b4e29 100644
--- a/tests/twisted/file-transfer/test-send-file-provide-immediately.py
+++ b/tests/twisted/file-transfer/test-send-file-provide-immediately.py
@@ -5,7 +5,7 @@ from file_transfer_helper import SendFileTest, exec_file_transfer_test
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class SendFileTransferProvideImmediately(SendFileTest):
@@ -16,7 +16,7 @@ class SendFileTransferProvideImmediately(SendFileTest):
             self.ft_channel.AcceptFile(self.address_type,
                 self.access_control, self.access_control_param, self.file.offset,
                 byte_arrays=True)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.NOT_AVAILABLE
         else:
             assert False
diff --git a/tests/twisted/file-transfer/test-send-file-send-before-accept.py b/tests/twisted/file-transfer/test-send-file-send-before-accept.py
index bb1389477..25d788ec0 100644
--- a/tests/twisted/file-transfer/test-send-file-send-before-accept.py
+++ b/tests/twisted/file-transfer/test-send-file-send-before-accept.py
@@ -9,7 +9,7 @@ import ns
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class SendFileSendBeforeAccept(SendFileTest):
diff --git a/tests/twisted/file-transfer/test-send-file-to-unknown-contact.py b/tests/twisted/file-transfer/test-send-file-to-unknown-contact.py
index 17d0799ed..b563d34cf 100644
--- a/tests/twisted/file-transfer/test-send-file-to-unknown-contact.py
+++ b/tests/twisted/file-transfer/test-send-file-to-unknown-contact.py
@@ -6,7 +6,7 @@ from file_transfer_helper import SendFileTest, exec_file_transfer_test
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class SendFileTransferToUnknownContactTest(SendFileTest):
@@ -21,7 +21,7 @@ class SendFileTransferToUnknownContactTest(SendFileTest):
 
         try:
             self.request_ft_channel()
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.OFFLINE
         else:
             assert False
diff --git a/tests/twisted/file-transfer/test-send-file-wait-to-provide.py b/tests/twisted/file-transfer/test-send-file-wait-to-provide.py
index f8b01a89f..7db5f6c79 100644
--- a/tests/twisted/file-transfer/test-send-file-wait-to-provide.py
+++ b/tests/twisted/file-transfer/test-send-file-wait-to-provide.py
@@ -4,7 +4,7 @@ from file_transfer_helper import SendFileTest, exec_file_transfer_test
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 class SendFileTransferWaitToProvideTest(SendFileTest):
diff --git a/tests/twisted/file-transfer/test-uri.py b/tests/twisted/file-transfer/test-uri.py
index b8b6dee0d..d6960c1b7 100644
--- a/tests/twisted/file-transfer/test-uri.py
+++ b/tests/twisted/file-transfer/test-uri.py
@@ -10,7 +10,7 @@ import constants as cs
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 def assertNoURI(ft_channel):
diff --git a/tests/twisted/gabbletest.py b/tests/twisted/gabbletest.py
index e6b8baa0e..01474ca5f 100644
--- a/tests/twisted/gabbletest.py
+++ b/tests/twisted/gabbletest.py
@@ -75,7 +75,7 @@ def make_muc_presence(affiliation, role, muc_jid, alias, jid=None, photo=None):
     if photo is not None:
         presence.addChild(
             elem(ns.VCARD_TEMP_UPDATE, 'x')(
-              elem('photo')(unicode(photo))
+              elem('photo')(str(photo))
             ))
 
     return presence
@@ -129,7 +129,7 @@ class JabberAuthenticator(GabbleAuthenticator):
 
     def streamStarted(self, root=None):
         if root:
-            self.xmlstream.sid = '%x' % random.randint(1, sys.maxint)
+            self.xmlstream.sid = '%x' % random.randint(1, sys.maxsize)
             self.xmlstream.domain = root.getAttribute('to')
 
         self.xmlstream.sendHeader()
@@ -165,11 +165,11 @@ class JabberAuthenticator(GabbleAuthenticator):
 
     def respondToSecondIq(self, iq):
         username = xpath.queryForNodes('/iq/query/username', iq)
-        assert map(str, username) == [self.username]
+        assert list(map(str, username)) == [self.username]
 
         digest = xpath.queryForNodes('/iq/query/digest', iq)
         expect = hashlib.sha1(self.xmlstream.sid + self.password).hexdigest()
-        assert map(str, digest) == [expect]
+        assert list(map(str, digest)) == [expect]
 
         resource = xpath.queryForNodes('/iq/query/resource', iq)
         assertLength(1, resource)
@@ -197,7 +197,7 @@ class XmppAuthenticator(GabbleAuthenticator):
             self.xmlstream.domain = root.getAttribute('to')
 
         if self.xmlstream.sid is None:
-            self.xmlstream.sid = '%x' % random.randint(1, sys.maxint)
+            self.xmlstream.sid = '%x' % random.randint(1, sys.maxsize)
 
         self.xmlstream.sendHeader()
 
@@ -304,8 +304,8 @@ class StreamFactory(twisted.internet.protocol.Factory):
         self.streams = streams
         self.jids = jids
         self.presences = {}
-        self.mappings = dict(map (lambda jid, stream: (jid, stream),
-                                  jids, streams))
+        self.mappings = dict(list(map (lambda jid, stream: (jid, stream),
+                                  jids, streams)))
 
         # Make a copy of the streams
         self.factory_streams = list(streams)
@@ -323,7 +323,7 @@ class StreamFactory(twisted.internet.protocol.Factory):
                 stream.addObserver('/presence', lambda x: \
                                        self.got_presence(stream, jid, x))
 
-            for (jid, stream) in self.mappings.items():
+            for (jid, stream) in list(self.mappings.items()):
                 addObservers(stream, jid)
 
     def protocol(self, *args):
@@ -334,7 +334,7 @@ class StreamFactory(twisted.internet.protocol.Factory):
         stanza.attributes['from'] = jid
         self.presences[jid] = stanza
 
-        for dest_jid  in self.presences.keys():
+        for dest_jid  in list(self.presences.keys()):
             # Dispatch the new presence to other clients
             stanza.attributes['to'] = dest_jid
             self.mappings[dest_jid].send(stanza)
@@ -347,9 +347,9 @@ class StreamFactory(twisted.internet.protocol.Factory):
                 stream.send(presence)
 
     def lost_presence(self, stream, jid):
-        if self.presences.has_key(jid):
+        if jid in self.presences:
             del self.presences[jid]
-            for dest_jid  in self.presences.keys():
+            for dest_jid  in list(self.presences.keys()):
                 presence = domish.Element(('jabber:client', 'presence'))
                 presence['from'] = jid
                 presence['to'] = dest_jid
@@ -365,7 +365,7 @@ class StreamFactory(twisted.internet.protocol.Factory):
         if query and query.uri == ns.ROSTER:
             roster = make_result_iq(stream, stanza)
             query = roster.firstChildElement()
-            for roster_jid in self.mappings.keys():
+            for roster_jid in list(self.mappings.keys()):
                 if jid != roster_jid:
                     item = query.addElement('item')
                     item['jid'] = roster_jid
@@ -558,7 +558,7 @@ def disconnect_conn(q, conn, stream, expected_before=[], expected_after=[]):
 def element_repr(element):
     """__repr__ cannot safely return non-ASCII: see
     <http://bugs.python.org/issue5876>. So we print non-ASCII characters as
-    \uXXXX escapes in debug output
+    \\uXXXX escapes in debug output
 
     """
     return element.toXml().encode('unicode-escape')
@@ -568,7 +568,7 @@ def expect_connected(queue):
         args=[cs.CONN_STATUS_CONNECTING, cs.CSR_REQUESTED])
     queue.expect('stream-authenticated')
     queue.expect('dbus-signal', signal='PresencesChanged',
-        args=[{1L: (cs.PRESENCE_AVAILABLE, u'available', '')}])
+        args=[{1: (cs.PRESENCE_AVAILABLE, 'available', '')}])
     queue.expect('dbus-signal', signal='StatusChanged',
         args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED])
 
@@ -587,7 +587,7 @@ def exec_test_deferred(fun, params, protocol=None, timeout=None,
     try:
         bus = dbus.SessionBus()
     except dbus.exceptions.DBusException as e:
-        print e
+        print(e)
         os._exit(1)
 
     queue = servicetest.IteratingEventQueue(timeout)
@@ -607,11 +607,11 @@ def exec_test_deferred(fun, params, protocol=None, timeout=None,
 
         try:
             (conn, jid) = make_connection_func(bus, queue.append, params, suffix)
-        except Exception, e:
+        except Exception as e:
             # Crap. This is normally because the connection's still kicking
             # around on the bus. Let's bin any connections we *did* manage to
             # get going and then bail out unceremoniously.
-            print e
+            print(e)
 
             for conn in conns:
                 conn.Disconnect()
@@ -640,7 +640,7 @@ def exec_test_deferred(fun, params, protocol=None, timeout=None,
                         break
         queue.append(Event('dbus-signal',
                            path=unwrap(kw['path']),
-                           signal=kw['member'], args=map(unwrap, args),
+                           signal=kw['member'], args=list(map(unwrap, args)),
                            interface=kw['interface']))
 
     match_all_signals = bus.add_signal_receiver(
@@ -666,7 +666,7 @@ def exec_test_deferred(fun, params, protocol=None, timeout=None,
             fun(queue, bus, conns[0], streams[0])
         else:
             fun(queue, bus, conns, streams)
-    except Exception, e:
+    except Exception as e:
         traceback.print_exc()
         error = e
         queue.verbose = False
@@ -688,9 +688,9 @@ def exec_test_deferred(fun, params, protocol=None, timeout=None,
             else:
                 # Connection is not connected, call Disconnect() to destroy it
                 conn.Disconnect()
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             pass
-        except Exception, e:
+        except Exception as e:
             traceback.print_exc()
             error = e
 
@@ -698,9 +698,9 @@ def exec_test_deferred(fun, params, protocol=None, timeout=None,
             conn.Disconnect()
             raise AssertionError("Connection didn't disappear; "
                 "all subsequent tests will probably fail")
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             pass
-        except Exception, e:
+        except Exception as e:
             traceback.print_exc()
             error = e
 
@@ -756,7 +756,7 @@ def _elem_add(elem, *children):
     for child in children:
         if isinstance(child, domish.Element):
             elem.addChild(child)
-        elif isinstance(child, unicode):
+        elif isinstance(child, str):
             elem.addContent(child)
         else:
             raise ValueError(
@@ -797,14 +797,14 @@ def elem(a, b=None, attrs={}, **kw):
 
     # First, let's pull namespaces out
     realattrs = {}
-    for k, v in allattrs.iteritems():
+    for k, v in allattrs.items():
         if k.startswith('xmlns:'):
             abbr = k[len('xmlns:'):]
             elem.localPrefixes[abbr] = v
         else:
             realattrs[k] = v
 
-    for k, v in realattrs.iteritems():
+    for k, v in realattrs.items():
         if k == 'from_':
             elem['from'] = v
         else:
@@ -820,7 +820,7 @@ def elem_iq(server, type, **kw):
 
     iq = _iq(server, type)
 
-    for k, v in kw.iteritems():
+    for k, v in kw.items():
         if k == 'from_':
             iq['from'] = v
         else:
@@ -845,7 +845,7 @@ def make_presence(_from, to='test@localhost', type=None, show=None,
 
     if caps is not None:
         cel = presence.addElement(('http://jabber.org/protocol/caps', 'c'))
-        for key,value in caps.items():
+        for key,value in list(caps.items()):
             cel[key] = value
 
     # <x xmlns="vcard-temp:x:update"><photo>4a1...</photo></x>
diff --git a/tests/twisted/gateways.py b/tests/twisted/gateways.py
index d4073dd25..34bdf1d7d 100644
--- a/tests/twisted/gateways.py
+++ b/tests/twisted/gateways.py
@@ -19,7 +19,7 @@ from config import PLUGINS_ENABLED
 PLUGIN_IFACE = "org.freedesktop.Telepathy.Gabble.Plugin.Gateways"
 
 if not PLUGINS_ENABLED:
-    print "NOTE: built without --enable-plugins, not testing plugins"
+    print("NOTE: built without --enable-plugins, not testing plugins")
     raise SystemExit(77)
 
 def test_success(q, gateways_iface, stream):
diff --git a/tests/twisted/jingle-share/file_transfer_helper.py b/tests/twisted/jingle-share/file_transfer_helper.py
index 19a45ca57..77a06684f 100644
--- a/tests/twisted/jingle-share/file_transfer_helper.py
+++ b/tests/twisted/jingle-share/file_transfer_helper.py
@@ -484,7 +484,7 @@ class SendFileTest(FileTransferTest):
             self.ft_channel.AcceptFile(self.address_type,
                 self.access_control, self.access_control_param, self.file.offset,
                 byte_arrays=True)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.NOT_AVAILABLE
         else:
             assert False
diff --git a/tests/twisted/jingle-share/test-caps-file-transfer.py b/tests/twisted/jingle-share/test-caps-file-transfer.py
index 0bf869a1a..12ac8d847 100644
--- a/tests/twisted/jingle-share/test-caps-file-transfer.py
+++ b/tests/twisted/jingle-share/test-caps-file-transfer.py
@@ -18,14 +18,14 @@ from jingleshareutils import test_ft_caps_from_contact
 from config import FILE_TRANSFER_ENABLED
 
 if not FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer"
+    print("NOTE: built with --disable-file-transfer")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
     client = 'http://telepathy.freedesktop.org/fake-client'
 
     test_ft_caps_from_contact(q, bus, conn, stream, 'bilbo1@foo.com/Foo',
-        2L, client)
+        2, client)
 
     # our own capabilities, formerly tested here, are now in
     # tests/twisted/caps/advertise-contact-capabilities.py
diff --git a/tests/twisted/jingle-share/test-multift.py b/tests/twisted/jingle-share/test-multift.py
index d318e427d..b031b704d 100644
--- a/tests/twisted/jingle-share/test-multift.py
+++ b/tests/twisted/jingle-share/test-multift.py
@@ -11,7 +11,7 @@ from jingleshareutils import test_ft_caps_from_contact
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
@@ -23,7 +23,7 @@ def test(q, bus, conn, stream):
              ("folder", "Folder no size", None, True)]
 
     test_ft_caps_from_contact(q, bus, conn, stream, contact,
-        2L, client)
+        2, client)
 
     self_handle = conn.GetSelfHandle()
     jid =  conn.InspectHandles(cs.HT_CONTACT, [self_handle])[0]
@@ -97,11 +97,11 @@ def test(q, bus, conn, stream):
             [ cs.CHANNEL_IFACE_FILE_TRANSFER_METADATA,
               cs.CHANNEL_TYPE_FILE_TRANSFER + '.FUTURE',
             ], props[cs.INTERFACES])
-        assert props[cs.TARGET_HANDLE] == 2L, props
+        assert props[cs.TARGET_HANDLE] == 2, props
         assert props[cs.TARGET_ID] == contact.replace("/Resource", ""), props
         assert props[cs.TARGET_HANDLE_TYPE] == cs.HT_CONTACT, props
         assert props[cs.REQUESTED] == False, props
-        assert props[cs.INITIATOR_HANDLE] == 2L, props
+        assert props[cs.INITIATOR_HANDLE] == 2, props
         assert props[cs.INITIATOR_ID] == contact.replace("/Resource", ""), props
         assert props[cs.FT_STATE] == cs.FT_STATE_PENDING, props
         assert props[cs.FT_CONTENT_TYPE] == '', props
diff --git a/tests/twisted/jingle-share/test-receive-file-and-close-socket-while-receiving.py b/tests/twisted/jingle-share/test-receive-file-and-close-socket-while-receiving.py
index 992fd66a1..bbad6b31b 100644
--- a/tests/twisted/jingle-share/test-receive-file-and-close-socket-while-receiving.py
+++ b/tests/twisted/jingle-share/test-receive-file-and-close-socket-while-receiving.py
@@ -6,7 +6,7 @@ from file_transfer_helper import  SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 class ReceiveFileAndCancelWhileReceiving(ReceiveFileTest):
diff --git a/tests/twisted/jingle-share/test-receive-file-and-disconnect.py b/tests/twisted/jingle-share/test-receive-file-and-disconnect.py
index d8c058747..0fab5fa47 100644
--- a/tests/twisted/jingle-share/test-receive-file-and-disconnect.py
+++ b/tests/twisted/jingle-share/test-receive-file-and-disconnect.py
@@ -5,7 +5,7 @@ from file_transfer_helper import  SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 class ReceiveFileAndDisconnectTest(ReceiveFileTest):
diff --git a/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-pending.py b/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-pending.py
index bdb71bfe2..a41c5a3c0 100644
--- a/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-pending.py
+++ b/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-pending.py
@@ -7,7 +7,7 @@ from file_transfer_helper import SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 class ReceiveFileAndSenderDisconnectWhilePendingTest(ReceiveFileTest):
@@ -22,7 +22,7 @@ class ReceiveFileAndSenderDisconnectWhilePendingTest(ReceiveFileTest):
         try:
             self.ft_channel.AcceptFile(cs.SOCKET_ADDRESS_TYPE_UNIX,
                 cs.SOCKET_ACCESS_CONTROL_LOCALHOST, "", 0)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.NOT_AVAILABLE
         else:
             assert False
diff --git a/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-transfering.py b/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-transfering.py
index 769afc162..e3946b895 100644
--- a/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-transfering.py
+++ b/tests/twisted/jingle-share/test-receive-file-and-sender-disconnect-while-transfering.py
@@ -7,7 +7,7 @@ from file_transfer_helper import SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 class ReceiveFileAndSenderDisconnectWhileTransfering(ReceiveFileTest):
diff --git a/tests/twisted/jingle-share/test-receive-file-decline.py b/tests/twisted/jingle-share/test-receive-file-decline.py
index 7a8547790..ce5ca3054 100644
--- a/tests/twisted/jingle-share/test-receive-file-decline.py
+++ b/tests/twisted/jingle-share/test-receive-file-decline.py
@@ -8,7 +8,7 @@ from file_transfer_helper import SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 class ReceiveFileDecline(ReceiveFileTest):
@@ -75,7 +75,7 @@ class SendFileDeclined (SendFileTest):
         # try to provide the file
         try:
             self.provide_file()
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.NOT_AVAILABLE
         else:
             assert False
diff --git a/tests/twisted/jingle-share/test-send-file-and-cancel-immediately.py b/tests/twisted/jingle-share/test-send-file-and-cancel-immediately.py
index 1c1447fe5..537ca887b 100644
--- a/tests/twisted/jingle-share/test-send-file-and-cancel-immediately.py
+++ b/tests/twisted/jingle-share/test-send-file-and-cancel-immediately.py
@@ -8,7 +8,7 @@ from file_transfer_helper import SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 class ReceiveFileStopped(ReceiveFileTest):
@@ -38,7 +38,7 @@ class ReceiveFileStopped(ReceiveFileTest):
         # try to provide the file
         try:
             self.accept_file()
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.NOT_AVAILABLE
         else:
             assert False
diff --git a/tests/twisted/jingle-share/test-send-file-send-before-accept.py b/tests/twisted/jingle-share/test-send-file-send-before-accept.py
index 76b0c37ed..081bd33c3 100644
--- a/tests/twisted/jingle-share/test-send-file-send-before-accept.py
+++ b/tests/twisted/jingle-share/test-send-file-send-before-accept.py
@@ -4,11 +4,11 @@ from file_transfer_helper import SendFileTest, FileTransferTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
-print("FIXME: test is not stable enough.\n" +
-      "    https://bugs.freedesktop.org/show_bug.cgi?id=49595")
+print(("FIXME: test is not stable enough.\n" +
+      "    https://bugs.freedesktop.org/show_bug.cgi?id=49595"))
 raise SystemExit(77)
 
 class SendFileBeforeAccept(SendFileTest):
diff --git a/tests/twisted/jingle-share/test-send-file-wait-to-provide.py b/tests/twisted/jingle-share/test-send-file-wait-to-provide.py
index 890f5ed80..cf0acae90 100644
--- a/tests/twisted/jingle-share/test-send-file-wait-to-provide.py
+++ b/tests/twisted/jingle-share/test-send-file-wait-to-provide.py
@@ -8,7 +8,7 @@ from file_transfer_helper import SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 class SendFileAndWaitToProvide (SendFileTest):
diff --git a/tests/twisted/jingle-share/test-send-file.py b/tests/twisted/jingle-share/test-send-file.py
index 763eaa839..6e4c0c318 100644
--- a/tests/twisted/jingle-share/test-send-file.py
+++ b/tests/twisted/jingle-share/test-send-file.py
@@ -5,7 +5,7 @@ from file_transfer_helper import SendFileTest, ReceiveFileTest, \
 from config import JINGLE_FILE_TRANSFER_ENABLED
 
 if not JINGLE_FILE_TRANSFER_ENABLED:
-    print "NOTE: built with --disable-file-transfer or --disable-voip"
+    print("NOTE: built with --disable-file-transfer or --disable-voip")
     raise SystemExit(77)
 
 if __name__ == '__main__':
diff --git a/tests/twisted/jingle/accept-extra-stream.py b/tests/twisted/jingle/accept-extra-stream.py
index 95e46377c..a8dfc6312 100644
--- a/tests/twisted/jingle/accept-extra-stream.py
+++ b/tests/twisted/jingle/accept-extra-stream.py
@@ -9,12 +9,12 @@ from servicetest import (
 from gabbletest import exec_test, make_result_iq, sync_stream
 import constants as cs
 
-from jingletest2 import JingleProtocol031, JingleTest2
+from .jingletest2 import JingleProtocol031, JingleTest2
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
@@ -101,7 +101,7 @@ def worker(q, bus, conn, stream, remote_jid):
     # local send is now sending.
     memb, acc, _, _, _,  = q.expect_many(
         EventPattern('dbus-signal', signal='MembersChanged',
-            args=[u'', [self_handle], [], [], [],
+            args=['', [self_handle], [], [], [],
                         self_handle,
                         cs.GC_REASON_NONE]),
         EventPattern('stream-iq',
diff --git a/tests/twisted/jingle/call-basics.py b/tests/twisted/jingle/call-basics.py
index a044f83bc..c81e37f22 100644
--- a/tests/twisted/jingle/call-basics.py
+++ b/tests/twisted/jingle/call-basics.py
@@ -5,7 +5,7 @@ Test basic outgoing and incoming call handling
 import config
 
 if not config.CHANNEL_TYPE_CALL_ENABLED:
-    print "NOTE: built with --disable-channel-type-call"
+    print("NOTE: built with --disable-channel-type-call")
     raise SystemExit(77)
 
 import dbus
@@ -13,15 +13,15 @@ from dbus.exceptions import DBusException
 
 from functools import partial
 from servicetest import EventPattern, assertEquals, assertContains, assertLength
-from call_helper import CallTest, run_call_test
-from jingletest2 import test_all_dialects
+from .call_helper import CallTest, run_call_test
+from .jingletest2 import test_all_dialects
 import constants as cs
 import ns
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class CallBasicsTest(CallTest):
@@ -239,7 +239,7 @@ class CallBasicsTest(CallTest):
             cstream.RequestReceiving(remote_handle, False,
                     dbus_interface = cs.CALL_STREAM)
             assert can_change_direction
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals(cs.NOT_CAPABLE, e.get_dbus_name())
             assert not can_change_direction
 
@@ -250,7 +250,7 @@ class CallBasicsTest(CallTest):
                     EventPattern('stream-iq',
                         predicate=jp.action_predicate('content-modify')))
             assertEquals(cs.CALL_STREAM_FLOW_STATE_PENDING_STOP, ret[0].args[0])
-            assert ret[1].args[0].has_key(remote_handle)
+            assert remote_handle in ret[1].args[0]
 
             cstream.CompleteReceivingStateChange(
                     cs.CALL_STREAM_FLOW_STATE_STOPPED,
@@ -277,7 +277,7 @@ class CallBasicsTest(CallTest):
             cstream.RequestReceiving(remote_handle, True,
                     dbus_interface = cs.CALL_STREAM)
             assert can_change_direction
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals(cs.NOT_CAPABLE, e.get_dbus_name())
             assert not can_change_direction
 
@@ -289,7 +289,7 @@ class CallBasicsTest(CallTest):
                         predicate=jp.action_predicate('content-modify')))
             assertEquals(cs.CALL_STREAM_FLOW_STATE_PENDING_START,
                     ret[0].args[0])
-            assert ret[1].args[0].has_key(remote_handle)
+            assert remote_handle in ret[1].args[0]
             assertEquals(cs.CALL_SENDING_STATE_PENDING_SEND,
                     ret[1].args[0][remote_handle])
 
@@ -300,7 +300,7 @@ class CallBasicsTest(CallTest):
                     EventPattern('dbus-signal', signal='ReceivingStateChanged'),
                     EventPattern('dbus-signal', signal='RemoteMembersChanged'))
             assertEquals(cs.CALL_STREAM_FLOW_STATE_STARTED, ret[0].args[0])
-            assert ret[1].args[0].has_key(remote_handle)
+            assert remote_handle in ret[1].args[0]
             assertEquals(cs.CALL_SENDING_STATE_SENDING,
                     ret[1].args[0][remote_handle])
 
@@ -321,7 +321,7 @@ class CallBasicsTest(CallTest):
                     EventPattern('dbus-signal', signal='ReceivingStateChanged'),
                     EventPattern('dbus-signal', signal='RemoteMembersChanged'))
             assertEquals(cs.CALL_STREAM_FLOW_STATE_PENDING_STOP, ret[0].args[0])
-            assert ret[1].args[0].has_key(remote_handle)
+            assert remote_handle in ret[1].args[0]
             assertEquals(cs.CALL_SENDING_STATE_NONE,
                     ret[1].args[0][remote_handle])
 
@@ -337,7 +337,7 @@ class CallBasicsTest(CallTest):
                     EventPattern('dbus-signal', signal='RemoteMembersChanged'))
             assertEquals(cs.CALL_STREAM_FLOW_STATE_PENDING_START,
                     ret[0].args[0])
-            assert ret[1].args[0].has_key(remote_handle)
+            assert remote_handle in ret[1].args[0]
             assertEquals(cs.CALL_SENDING_STATE_SENDING,
                     ret[1].args[0][remote_handle])
 
@@ -349,7 +349,7 @@ class CallBasicsTest(CallTest):
 
         try:
             self.test_content_addition()
-        except DBusException, e:
+        except DBusException as e:
             assertEquals(cs.NOT_AVAILABLE, e.get_dbus_name())
             assert not jp.can_do_video()
 
diff --git a/tests/twisted/jingle/call-codecoffer.py b/tests/twisted/jingle/call-codecoffer.py
index 91821721e..212d5a979 100644
--- a/tests/twisted/jingle/call-codecoffer.py
+++ b/tests/twisted/jingle/call-codecoffer.py
@@ -11,16 +11,16 @@ from servicetest import (EventPattern,
 import ns
 import constants as cs
 
-from jingletest2 import JingleTest2, test_dialects, JingleProtocol031
+from .jingletest2 import JingleTest2, test_dialects, JingleProtocol031
 
 from config import CHANNEL_TYPE_CALL_ENABLED, VOIP_ENABLED
 
 if not CHANNEL_TYPE_CALL_ENABLED:
-    print "NOTE: built with --disable-channel-type-call"
+    print("NOTE: built with --disable-channel-type-call")
     raise SystemExit(77)
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def check_offer (bus, conn, content):
@@ -104,7 +104,7 @@ def try_to_access_old_offer(conn, path):
         offer = bus.get_object (conn.bus_name, path)
         ret = offer.GetAll (cs.CALL_CONTENT_MEDIADESCRIPTION,
             dbus_interface=dbus.PROPERTIES_IFACE)
-    except Exception, e:
+    except Exception as e:
         pass
     else:
         assert False, 'Offer still exists'
@@ -116,7 +116,7 @@ def test_incoming(jp, q, bus, conn, stream):
 
     ret = q.expect_many(EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CALL in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CALL in list(e.args[0][0][1].values())),
         EventPattern('dbus-signal', signal='NewMediaDescriptionOffer'))
 
     chan = bus.get_object(conn.bus_name, ret[0].args[0][0][0])
@@ -156,8 +156,8 @@ def test_incoming(jp, q, bus, conn, stream):
 
     try:
         ret = conn.GetAll (cs.CONN, dbus_interface=dbus.PROPERTIES_IFACE)
-    except Exception, e:
-        print 'Gabble probably crashed'
+    except Exception as e:
+        print('Gabble probably crashed')
         raise e
     else:
         # depending on the age of our telepathy-glib, we have at least
@@ -178,7 +178,7 @@ def test_outgoing(jp, q, bus, conn, stream):
 
     ret = q.expect_many(EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CALL in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CALL in list(e.args[0][0][1].values())),
         # a codec offer appears already!
         EventPattern('dbus-signal', signal='NewMediaDescriptionOffer'))
 
@@ -199,7 +199,7 @@ def test_outgoing(jp, q, bus, conn, stream):
 
     try:
         content.UpdateLocalMediaDescription(md, dbus_interface=cs.CALL_CONTENT_IFACE_MEDIA)
-    except DBusException, e:
+    except DBusException as e:
         # this should fail now that there is a codec offer around
         if e.get_dbus_name() != cs.NOT_AVAILABLE:
             raise e
diff --git a/tests/twisted/jingle/call-content-adding-removal.py b/tests/twisted/jingle/call-content-adding-removal.py
index 074968043..3bae0bddf 100644
--- a/tests/twisted/jingle/call-content-adding-removal.py
+++ b/tests/twisted/jingle/call-content-adding-removal.py
@@ -8,15 +8,15 @@ closes the session.
 from functools import partial
 from servicetest import call_async, assertEquals, assertLength, EventPattern
 from gabbletest import make_result_iq, sync_stream
-from jingletest2 import test_dialects, JingleProtocol015, JingleProtocol031
-from call_helper import CallTest, run_call_test
+from .jingletest2 import test_dialects, JingleProtocol015, JingleProtocol031
+from .call_helper import CallTest, run_call_test
 import constants as cs
 import dbus
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class CallContentAddingRemovalTest(CallTest):
diff --git a/tests/twisted/jingle/call-dtmf-no-audio.py b/tests/twisted/jingle/call-dtmf-no-audio.py
index f87ba6492..0e543e341 100644
--- a/tests/twisted/jingle/call-dtmf-no-audio.py
+++ b/tests/twisted/jingle/call-dtmf-no-audio.py
@@ -4,13 +4,13 @@ Test DMTF events in a Call channel
 
 from functools import partial
 from servicetest import call_async
-from jingletest2 import test_all_dialects
-from call_helper import CallTest, run_call_test
+from .jingletest2 import test_all_dialects
+from .call_helper import CallTest, run_call_test
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class CallDtmfNoAudioTest(CallTest):
diff --git a/tests/twisted/jingle/call-dtmf.py b/tests/twisted/jingle/call-dtmf.py
index 5b19fc7fb..e28103352 100644
--- a/tests/twisted/jingle/call-dtmf.py
+++ b/tests/twisted/jingle/call-dtmf.py
@@ -6,14 +6,14 @@ import dbus
 from dbus.exceptions import DBusException
 from functools import partial
 from servicetest import call_async, EventPattern, assertEquals
-from jingletest2 import test_all_dialects
-from call_helper import CallTest, run_call_test
+from .jingletest2 import test_all_dialects
+from .call_helper import CallTest, run_call_test
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class CallDtmfTest(CallTest):
diff --git a/tests/twisted/jingle/call-google-relay.py b/tests/twisted/jingle/call-google-relay.py
index 85168f5d9..0b71b69bd 100644
--- a/tests/twisted/jingle/call-google-relay.py
+++ b/tests/twisted/jingle/call-google-relay.py
@@ -5,17 +5,17 @@ Test getting relay from Google jingleinfo
 import config
 
 if not config.GOOGLE_RELAY_ENABLED:
-    print "NOTE: built with --disable-google-relay"
+    print("NOTE: built with --disable-google-relay")
     raise SystemExit(77)
 
 import dbus
 from dbus.exceptions import DBusException
 from functools import partial
 from servicetest import call_async, EventPattern, assertEquals
-from jingletest2 import GtalkProtocol04
+from .jingletest2 import GtalkProtocol04
 from gabbletest import (exec_test, disconnect_conn, GoogleXmlStream,
      make_result_iq, sync_stream)
-from call_helper import CallTest, run_call_test
+from .call_helper import CallTest, run_call_test
 import constants as cs
 import ns
 
@@ -256,7 +256,7 @@ class CallGoogleRelayTest(CallTest):
     
             try:
                 chan.GetMembers()
-            except dbus.DBusException, e:
+            except dbus.DBusException as e:
                 # This should fail because the object's gone away, not because
                 # Gabble's crashed.
                 assert cs.UNKNOWN_METHOD == e.get_dbus_name(), \
diff --git a/tests/twisted/jingle/call-hold-audio.py b/tests/twisted/jingle/call-hold-audio.py
index 5362bd890..4f5305dbe 100644
--- a/tests/twisted/jingle/call-hold-audio.py
+++ b/tests/twisted/jingle/call-hold-audio.py
@@ -6,15 +6,15 @@ import dbus
 from dbus.exceptions import DBusException
 from functools import partial
 from servicetest import call_async, EventPattern, assertEquals, assertLength
-from jingletest2 import test_all_dialects
+from .jingletest2 import test_all_dialects
 from gabbletest import sync_stream
-from call_helper import CallTest, run_call_test
+from .call_helper import CallTest, run_call_test
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class CallHoldAudioTest(CallTest):
@@ -373,14 +373,14 @@ class CallHoldAudioTest(CallTest):
             cstream.CompleteReceivingStateChange(
                     cs.CALL_STREAM_FLOW_STATE_STOPPED,
                     dbus_interface = cs.CALL_STREAM_IFACE_MEDIA)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals (cs.INVALID_ARGUMENT, e.get_dbus_name ())
     
         try:
             cstream.CompleteSendingStateChange(
                     cs.CALL_STREAM_FLOW_STATE_STOPPED,
                     dbus_interface = cs.CALL_STREAM_IFACE_MEDIA)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals (cs.INVALID_ARGUMENT, e.get_dbus_name ())
     
     
diff --git a/tests/twisted/jingle/call-hold-av.py b/tests/twisted/jingle/call-hold-av.py
index 441a453cf..319c1fb0b 100644
--- a/tests/twisted/jingle/call-hold-av.py
+++ b/tests/twisted/jingle/call-hold-av.py
@@ -7,15 +7,15 @@ from dbus.exceptions import DBusException
 from functools import partial
 from servicetest import (call_async, EventPattern, assertEquals, assertLength,
      sync_dbus)
-from jingletest2 import test_all_dialects
+from .jingletest2 import test_all_dialects
 from gabbletest import sync_stream
-from call_helper import CallTest, run_call_test
+from .call_helper import CallTest, run_call_test
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class CallHoldAVTest(CallTest):
@@ -580,28 +580,28 @@ class CallHoldAVTest(CallTest):
             audio_cstream.CompleteReceivingStateChange(
                     cs.CALL_STREAM_FLOW_STATE_STOPPED,
                     dbus_interface = cs.CALL_STREAM_IFACE_MEDIA)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals (cs.INVALID_ARGUMENT, e.get_dbus_name ())
     
         try:
             audio_cstream.CompleteSendingStateChange(
                     cs.CALL_STREAM_FLOW_STATE_STOPPED,
                     dbus_interface = cs.CALL_STREAM_IFACE_MEDIA)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals (cs.INVALID_ARGUMENT, e.get_dbus_name ())
     
         try:
             video_cstream.CompleteReceivingStateChange(
                     cs.CALL_STREAM_FLOW_STATE_STOPPED,
                     dbus_interface = cs.CALL_STREAM_IFACE_MEDIA)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals (cs.INVALID_ARGUMENT, e.get_dbus_name ())
     
         try:
             video_cstream.CompleteSendingStateChange(
                     cs.CALL_STREAM_FLOW_STATE_STOPPED,
                     dbus_interface = cs.CALL_STREAM_IFACE_MEDIA)
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assertEquals (cs.INVALID_ARGUMENT, e.get_dbus_name ())
     
         audio_cstream.CompleteReceivingStateChange(
diff --git a/tests/twisted/jingle/call-muc-cancel.py b/tests/twisted/jingle/call-muc-cancel.py
index 36fb23891..5d9104f26 100644
--- a/tests/twisted/jingle/call-muc-cancel.py
+++ b/tests/twisted/jingle/call-muc-cancel.py
@@ -10,7 +10,7 @@ import constants as cs
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 muc = "muji@test"
diff --git a/tests/twisted/jingle/call-muc-re-re-request.py b/tests/twisted/jingle/call-muc-re-re-request.py
index 1f72db4c8..1a66b5e89 100644
--- a/tests/twisted/jingle/call-muc-re-re-request.py
+++ b/tests/twisted/jingle/call-muc-re-re-request.py
@@ -3,15 +3,15 @@ Test basic outgoing and incoming call handling
 """
 from gabbletest import exec_test
 from servicetest import call_async, assertEquals, assertNotEquals
-from jingletest2 import JingleProtocol031
+from .jingletest2 import JingleProtocol031
 
 import constants as cs
-from callutils import *
+from .callutils import *
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 muc = "muji@test"
@@ -21,7 +21,7 @@ def run_cancel_test(q, bus, conn, stream):
     jt = JingleTest2(jp, conn, q, stream, 'test@localhost', muc + '/bob')
     jt.prepare()
 
-    for x in xrange (0, 10):
+    for x in range (0, 10):
         (path, props) = create_muji_channel (q, conn, stream, muc, x > 0)
         channel = bus.get_object (conn.bus_name, path)
 
diff --git a/tests/twisted/jingle/call-muc.py b/tests/twisted/jingle/call-muc.py
index 715a3e248..67e0af704 100644
--- a/tests/twisted/jingle/call-muc.py
+++ b/tests/twisted/jingle/call-muc.py
@@ -13,18 +13,18 @@ from servicetest import (
     assertEquals, assertContains, assertLength
     )
 import constants as cs
-from jingletest2 import JingleTest2, test_all_dialects, JingleProtocol031
+from .jingletest2 import JingleTest2, test_all_dialects, JingleProtocol031
 import ns
 
 from gabbletest import make_muc_presence
 from mucutil import *
 
-from callutils import *
+from .callutils import *
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 muc = "muji@test"
@@ -57,9 +57,9 @@ def run_incoming_test(q, bus, conn, stream, bob_leaves_room = False):
     (path, props) = e.args[0][0]
 
     assertContains((cs.CHANNEL_TYPE_CALL + '.InitialAudio', True),
-        props.items())
+        list(props.items()))
     assertContains((cs.CHANNEL_TYPE_CALL + '.InitialVideo', False),
-        props.items())
+        list(props.items()))
 
     general_tests (jp, q, bus, conn, stream, path, props)
 
@@ -354,7 +354,7 @@ def general_tests (jp, q, bus, conn, stream, path, props):
     assertLength(1, contents)
 
 if __name__ == '__main__':
-    print "FIXME: needs to be ported to Call1"
+    print("FIXME: needs to be ported to Call1")
     raise SystemExit(77)
 
     exec_test (run_outgoing_test)
diff --git a/tests/twisted/jingle/call-state.py b/tests/twisted/jingle/call-state.py
index b4d749b83..3d72c9450 100644
--- a/tests/twisted/jingle/call-state.py
+++ b/tests/twisted/jingle/call-state.py
@@ -11,12 +11,12 @@ from servicetest import (
 import ns
 import constants as cs
 
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(jp, q, bus, conn, stream):
diff --git a/tests/twisted/jingle/call_helper.py b/tests/twisted/jingle/call_helper.py
index 024ddaad1..34ec9d93e 100644
--- a/tests/twisted/jingle/call_helper.py
+++ b/tests/twisted/jingle/call_helper.py
@@ -5,7 +5,7 @@ Base classes for Call tests
 import config
 
 if not config.CHANNEL_TYPE_CALL_ENABLED:
-    print "NOTE: built with --disable-channel-type-call"
+    print("NOTE: built with --disable-channel-type-call")
     raise SystemExit(77)
 
 import dbus
@@ -17,14 +17,14 @@ from servicetest import (
     assertEquals, assertDoesNotContain, assertContains, assertLength,
     assertNotEquals, DictionarySupersetOf)
 from gabbletest import sync_stream, make_result_iq
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 import constants as cs
 import ns
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class CallTest(object):
@@ -156,7 +156,7 @@ class CallTest(object):
             assertContains(cs.CALL_CONTENT_IFACE_DTMF,
                     content_props["Interfaces"])
 
-        assertContains("Name", content_props.keys())
+        assertContains("Name", list(content_props.keys()))
         content_name = content_props["Name"]
 
         stream = self.bus.get_object(self.conn.bus_name,
@@ -166,8 +166,8 @@ class CallTest(object):
                 dbus_interface = dbus.PROPERTIES_IFACE)
 
         assertDoesNotContain(self.self_handle,
-                stream_props["RemoteMembers"].keys())
-        assertContains(self.peer_handle, stream_props["RemoteMembers"].keys())
+                list(stream_props["RemoteMembers"].keys()))
+        assertContains(self.peer_handle, list(stream_props["RemoteMembers"].keys()))
         assertEquals([cs.CALL_STREAM_IFACE_MEDIA], stream_props["Interfaces"])
         assertEquals(self.can_change_direction,
                 stream_props["CanRequestReceiving"])
@@ -293,7 +293,7 @@ class CallTest(object):
 
         signal = self.q.expect('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values())
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values()))
 
         assertLength(1, signal.args)
         assertLength(1, signal.args[0])       # one channel
@@ -336,7 +336,7 @@ class CallTest(object):
             sorted(properties.keys()))
 
         # Remote member is the target
-        assertEquals([self.peer_handle], properties["CallMembers"].keys())
+        assertEquals([self.peer_handle], list(properties["CallMembers"].keys()))
         assertEquals(0, properties["CallMembers"][self.peer_handle])
 
         # No Hardware Streaming for you
@@ -416,7 +416,7 @@ class CallTest(object):
         try:
             contents[0].UpdateLocalMediaDescription(mds[0],
                     dbus_interface=cs.CALL_CONTENT_IFACE_MEDIA)
-        except DBusException, e:
+        except DBusException as e:
             if e.get_dbus_name() != cs.NOT_AVAILABLE:
                 raise e
         else:
@@ -562,7 +562,7 @@ class CallTest(object):
             try:
                 endpoint.SetSelectedCandidatePair(candidate1, candidate1,
                     dbus_interface=cs.CALL_STREAM_ENDPOINT)
-            except DBusException, e:
+            except DBusException as e:
                 if e.get_dbus_name() != cs.INVALID_ARGUMENT:
                     raise e
             else:
diff --git a/tests/twisted/jingle/callutils.py b/tests/twisted/jingle/callutils.py
index 8688c9b71..e623fa9ad 100644
--- a/tests/twisted/jingle/callutils.py
+++ b/tests/twisted/jingle/callutils.py
@@ -14,7 +14,7 @@ from servicetest import (
     assertEquals, assertContains, assertLength, assertNotEquals
     )
 import constants as cs
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 import ns
 
 from mucutil import echo_muc_presence
diff --git a/tests/twisted/jingle/decloak-peer.py b/tests/twisted/jingle/decloak-peer.py
index fa8f1ee50..764f4c87f 100644
--- a/tests/twisted/jingle/decloak-peer.py
+++ b/tests/twisted/jingle/decloak-peer.py
@@ -6,7 +6,7 @@ should ask them to "de-cloak".
 from gabbletest import exec_test
 from servicetest import (make_channel_proxy, call_async, sync_dbus,
         assertEquals, assertLength)
-from jingletest2 import JingleProtocol031, JingleTest2
+from .jingletest2 import JingleProtocol031, JingleTest2
 
 import dbus
 
@@ -16,7 +16,7 @@ import ns
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/jingle/dtmf-no-audio.py b/tests/twisted/jingle/dtmf-no-audio.py
index fd5f568cf..8d85a048c 100644
--- a/tests/twisted/jingle/dtmf-no-audio.py
+++ b/tests/twisted/jingle/dtmf-no-audio.py
@@ -9,12 +9,12 @@ from servicetest import (call_async,
     wrap_channel, make_channel_proxy, EventPattern, sync_dbus)
 import constants as cs
 
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(jp, q, bus, conn, stream):
diff --git a/tests/twisted/jingle/dtmf.py b/tests/twisted/jingle/dtmf.py
index 4116e9d10..8fe75f381 100644
--- a/tests/twisted/jingle/dtmf.py
+++ b/tests/twisted/jingle/dtmf.py
@@ -9,12 +9,12 @@ from servicetest import (call_async,
     wrap_channel, make_channel_proxy, EventPattern, sync_dbus, assertEquals)
 import constants as cs
 
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(jp, q, bus, conn, stream):
diff --git a/tests/twisted/jingle/google-relay.py b/tests/twisted/jingle/google-relay.py
index 24b2cf493..e42334e0f 100644
--- a/tests/twisted/jingle/google-relay.py
+++ b/tests/twisted/jingle/google-relay.py
@@ -5,7 +5,7 @@ Test getting relay from Google jingleinfo
 import config
 
 if not config.GOOGLE_RELAY_ENABLED:
-    print "NOTE: built with --disable-google-relay"
+    print("NOTE: built with --disable-google-relay")
     raise SystemExit(77)
 
 from functools import partial
@@ -14,7 +14,7 @@ from gabbletest import exec_test, make_result_iq, sync_stream, \
         GoogleXmlStream, disconnect_conn
 from servicetest import make_channel_proxy, \
         EventPattern, call_async, sync_dbus, assertEquals, assertLength
-import jingletest2
+from . import jingletest2
 import gabbletest
 import constants as cs
 import dbus
@@ -29,7 +29,7 @@ from httptest import listen_http
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 # A real request/response looks like this:
@@ -210,9 +210,9 @@ def test(q, bus, conn, stream, incoming=True, too_slow=None, use_call=False):
             # We're pending because of remote_handle
             mc, _, e = q.expect_many(
                 EventPattern('dbus-signal', signal='MembersChanged',
-                     args=[u'', [remote_handle], [], [], [], 0, 0]),
+                     args=['', [remote_handle], [], [], [], 0, 0]),
                 EventPattern('dbus-signal', signal='MembersChanged',
-                     args=[u'', [], [], [self_handle], [], remote_handle,
+                     args=['', [], [], [self_handle], [], remote_handle,
                            cs.GC_REASON_INVITED]),
                 EventPattern('dbus-signal', signal='NewSessionHandler'))
 
@@ -234,7 +234,7 @@ def test(q, bus, conn, stream, incoming=True, too_slow=None, use_call=False):
             EventPattern('dbus-signal', signal='NewChannels',
                 predicate=lambda e:
                     cs.CHANNEL_TYPE_CONTACT_LIST not in
-                    e.args[0][0][1].values()),
+                    list(e.args[0][0][1].values())),
             )
         path = ret.value[0]
         media_chan = make_channel_proxy(conn, path, 'Channel.Interface.Group')
@@ -379,7 +379,7 @@ def test_too_slow(q, bus, conn, stream, req1, req2, media_chan, too_slow):
 
         try:
             media_chan.GetMembers()
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             # This should fail because the object's gone away, not because
             # Gabble's crashed.
             assert cs.UNKNOWN_METHOD == e.get_dbus_name(), \
diff --git a/tests/twisted/jingle/hold-audio.py b/tests/twisted/jingle/hold-audio.py
index d7656889a..bb5713ffb 100644
--- a/tests/twisted/jingle/hold-audio.py
+++ b/tests/twisted/jingle/hold-audio.py
@@ -9,12 +9,12 @@ from servicetest import (
     )
 import constants as cs
 
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(jp, q, bus, conn, stream):
diff --git a/tests/twisted/jingle/hold-av.py b/tests/twisted/jingle/hold-av.py
index 1e150c01a..adae1f2f4 100644
--- a/tests/twisted/jingle/hold-av.py
+++ b/tests/twisted/jingle/hold-av.py
@@ -9,12 +9,12 @@ from servicetest import (
 
 import constants as cs
 
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def mutable_stream_tests(jp, jt, q, bus, conn, stream, chan, handle):
diff --git a/tests/twisted/jingle/incoming-basics.py b/tests/twisted/jingle/incoming-basics.py
index 28c0598fb..c09381806 100644
--- a/tests/twisted/jingle/incoming-basics.py
+++ b/tests/twisted/jingle/incoming-basics.py
@@ -7,7 +7,7 @@ import dbus
 from gabbletest import make_result_iq
 from servicetest import (
     make_channel_proxy, unwrap, EventPattern, assertEquals, assertLength)
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 import constants as cs
 
 from twisted.words.xish import xpath
@@ -15,7 +15,7 @@ from twisted.words.xish import xpath
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(jp, q, bus, conn, stream, peer='foo@bar.com/Foo'):
@@ -156,7 +156,7 @@ def test(jp, q, bus, conn, stream, peer='foo@bar.com/Foo'):
     # local send is now sending.
     memb, acc, _, _, _ = q.expect_many(
         EventPattern('dbus-signal', signal='MembersChanged',
-            args=[u'', [self_handle], [], [], [], self_handle,
+            args=['', [self_handle], [], [], [], self_handle,
                   cs.GC_REASON_NONE]),
         EventPattern('stream-iq',
             predicate=jp.action_predicate('session-accept')),
diff --git a/tests/twisted/jingle/incoming-call-stream-error.py b/tests/twisted/jingle/incoming-call-stream-error.py
index b6a9e25b7..1f0f98f72 100644
--- a/tests/twisted/jingle/incoming-call-stream-error.py
+++ b/tests/twisted/jingle/incoming-call-stream-error.py
@@ -7,7 +7,7 @@ than GC_REASON_ERROR.
 """
 
 from servicetest import EventPattern, assertEquals, make_channel_proxy
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 import constants as cs
 
 from twisted.words.xish import xpath
@@ -15,7 +15,7 @@ from twisted.words.xish import xpath
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def _session_terminate_predicate(event, reason, msg, jp):
@@ -68,7 +68,7 @@ def _test(jp, q, bus, conn, stream,
 
     q.expect('dbus-signal', signal='SetRemoteCodecs')
 
-    msg = u"o noes"
+    msg = "o noes"
 
     # ...but something goes wrong.
     stream_handler.Error(stream_error, msg)
diff --git a/tests/twisted/jingle/incoming-gmail-modern-jingle.py b/tests/twisted/jingle/incoming-gmail-modern-jingle.py
index 033a9975d..4380913a5 100644
--- a/tests/twisted/jingle/incoming-gmail-modern-jingle.py
+++ b/tests/twisted/jingle/incoming-gmail-modern-jingle.py
@@ -5,7 +5,7 @@ quirky) variation on the theme of modern Jingle.
 
 from servicetest import EventPattern, wrap_channel, make_channel_proxy, assertEquals
 from gabbletest import elem, elem_iq, exec_test
-from jingletest2 import JingleTest2, JingleProtocol031
+from .jingletest2 import JingleTest2, JingleProtocol031
 import ns
 import constants as cs
 from twisted.words.xish import xpath
@@ -13,7 +13,7 @@ from twisted.words.xish import xpath
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 class GMail(JingleTest2):
diff --git a/tests/twisted/jingle/initial-audio-video.py b/tests/twisted/jingle/initial-audio-video.py
index 49bb285aa..1bde33c31 100644
--- a/tests/twisted/jingle/initial-audio-video.py
+++ b/tests/twisted/jingle/initial-audio-video.py
@@ -10,14 +10,15 @@ from servicetest import (
     assertContains, assertEquals, assertLength,
     wrap_channel, EventPattern, call_async, make_channel_proxy)
 
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 import constants as cs
 
 from config import VOIP_ENABLED
+from functools import reduce
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def outgoing(jp, q, bus, conn, stream):
@@ -54,14 +55,14 @@ def check_neither(q, conn, bus, stream, remote_handle):
         cs.TARGET_HANDLE_TYPE: cs.HT_CONTACT,
         cs.TARGET_HANDLE: remote_handle})
 
-    assertContains((cs.INITIAL_AUDIO, False), props.items())
-    assertContains((cs.INITIAL_VIDEO, False), props.items())
+    assertContains((cs.INITIAL_AUDIO, False), list(props.items()))
+    assertContains((cs.INITIAL_VIDEO, False), list(props.items()))
 
     chan = wrap_channel(bus.get_object(conn.bus_name, path),
         cs.CHANNEL_TYPE_STREAMED_MEDIA, ['MediaSignalling'])
     props = chan.Properties.GetAll(cs.CHANNEL_TYPE_STREAMED_MEDIA)
-    assertContains(('InitialAudio', False), props.items())
-    assertContains(('InitialVideo', False), props.items())
+    assertContains(('InitialAudio', False), list(props.items()))
+    assertContains(('InitialVideo', False), list(props.items()))
 
     # We shouldn't have started a session yet, so there shouldn't be any
     # session handlers. Strictly speaking, there could be a session handler
@@ -91,14 +92,14 @@ def check_iav(jt, q, conn, bus, stream, remote_handle, initial_audio,
     else:
         path, props = q.expect('dbus-return', method='CreateChannel').value
 
-        assertContains((cs.INITIAL_AUDIO, initial_audio), props.items())
-        assertContains((cs.INITIAL_VIDEO, initial_video), props.items())
+        assertContains((cs.INITIAL_AUDIO, initial_audio), list(props.items()))
+        assertContains((cs.INITIAL_VIDEO, initial_video), list(props.items()))
 
         chan = wrap_channel(bus.get_object(conn.bus_name, path),
             cs.CHANNEL_TYPE_STREAMED_MEDIA, ['MediaSignalling'])
         props = chan.Properties.GetAll(cs.CHANNEL_TYPE_STREAMED_MEDIA)
-        assertContains(('InitialAudio', initial_audio), props.items())
-        assertContains(('InitialVideo', initial_video), props.items())
+        assertContains(('InitialAudio', initial_audio), list(props.items()))
+        assertContains(('InitialVideo', initial_video), list(props.items()))
 
         session_handlers = chan.MediaSignalling.GetSessionHandlers()
 
@@ -123,7 +124,7 @@ def check_iav(jt, q, conn, bus, stream, remote_handle, initial_audio,
         if initial_video:
             assertContains(cs.MEDIA_STREAM_TYPE_VIDEO, stream_handler_types)
 
-        for x in xrange (0, len(stream_handler_paths)):
+        for x in range (0, len(stream_handler_paths)):
             p = stream_handler_paths[x]
             t = stream_handler_types[x]
             sh = make_channel_proxy(conn, p, 'Media.StreamHandler')
@@ -166,7 +167,7 @@ def incoming(jp, q, bus, conn, stream):
         jt.incoming_call(audio=a, video=v)
         e = q.expect('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values())
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values()))
         chans = e.args[0]
         assertLength(1, chans)
 
diff --git a/tests/twisted/jingle/jingletest2.py b/tests/twisted/jingle/jingletest2.py
index 64eaa40e8..7e34aa1a3 100644
--- a/tests/twisted/jingle/jingletest2.py
+++ b/tests/twisted/jingle/jingletest2.py
@@ -27,12 +27,12 @@ class JingleProtocol(object):
         "Construct domish.Element tree from tree of tuples"
         name, namespace, attribs, children = node
         el = domish.Element((namespace, name))
-        for key, val in attribs.items():
+        for key, val in list(attribs.items()):
             el[key] = val
         for c in children:
             if isinstance(c, tuple):
                 el.addChild(self._simple_xml(c))
-            elif isinstance(c, unicode):
+            elif isinstance(c, str):
                 el.addContent(c)
             else:
                 raise ValueError("invalid child object %r of type %r" % (c, type(c)))
@@ -74,7 +74,7 @@ class JingleProtocol(object):
         kw['rate'] = rate
         kw['id'] = id
         children = [self.Parameter(name, value)
-                    for name, value in parameters.iteritems()]
+                    for name, value in parameters.items()]
         return ('payload-type', None, kw, children)
 
     def Parameter(self, name, value):
@@ -865,7 +865,7 @@ def test_all_dialects(f, params=None, protocol=None):
 
     jd = os.getenv("JINGLE_DIALECTS")
     if jd == None:
-        dialects = dialectmap.values()
+        dialects = list(dialectmap.values())
     else:
         for d in jd.split (','):
             dialects.append(dialectmap[d])
diff --git a/tests/twisted/jingle/misuse.py b/tests/twisted/jingle/misuse.py
index 51283b4c0..7d207a6fa 100644
--- a/tests/twisted/jingle/misuse.py
+++ b/tests/twisted/jingle/misuse.py
@@ -7,14 +7,14 @@ from dbus import DBusException
 
 from servicetest import make_channel_proxy, wrap_channel, assertEquals
 from gabbletest import exec_test
-from jingletest2 import JingleTest2, JingleProtocol031
+from .jingletest2 import JingleTest2, JingleProtocol031
 
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
@@ -40,12 +40,12 @@ def test(q, bus, conn, stream):
 
     try:
         session_handler.Ready()
-    except DBusException, e:
+    except DBusException as e:
         assertEquals(cs.NOT_AVAILABLE, e.get_dbus_name())
 
     try:
         session_handler.Error(0, "slowing down but with a sense of speeding up")
-    except DBusException, e:
+    except DBusException as e:
         assertEquals(cs.NOT_AVAILABLE, e.get_dbus_name())
 
 if __name__ == '__main__':
diff --git a/tests/twisted/jingle/outgoing-basics.py b/tests/twisted/jingle/outgoing-basics.py
index 0e9a5f269..0d73ccea7 100644
--- a/tests/twisted/jingle/outgoing-basics.py
+++ b/tests/twisted/jingle/outgoing-basics.py
@@ -13,12 +13,12 @@ from servicetest import (
     assertEquals, assertContains, assertLength,
     )
 import constants as cs
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 # There are various deprecated APIs for requesting calls, documented at
@@ -70,7 +70,7 @@ def worker(jp, q, bus, conn, stream, variant, peer):
             predicate=lambda e: cs.CHANNEL_TYPE_CONTACT_LIST not in e.args),
         EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values())),
         )
 
     if variant == REQUEST_NONYMOUS or variant == CREATE:
diff --git a/tests/twisted/jingle/outgoing-ensure.py b/tests/twisted/jingle/outgoing-ensure.py
index a5bab23c7..a0617a14a 100644
--- a/tests/twisted/jingle/outgoing-ensure.py
+++ b/tests/twisted/jingle/outgoing-ensure.py
@@ -14,12 +14,12 @@ from servicetest import (
     assertEquals, assertLength,
     )
 import constants as cs
-from jingletest2 import JingleProtocol031, JingleTest2
+from .jingletest2 import JingleProtocol031, JingleTest2
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream, channel_type):
@@ -46,7 +46,7 @@ def test(q, bus, conn, stream, channel_type):
             predicate=lambda e: cs.CHANNEL_TYPE_CONTACT_LIST not in e.args),
         EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values())),
         )
 
     yours, path, props = ret.value
@@ -108,7 +108,7 @@ def test(q, bus, conn, stream, channel_type):
             predicate=lambda e: cs.CHANNEL_TYPE_CONTACT_LIST not in e.args),
         EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values())),
         )
 
     yours, path, props = ret.value
@@ -168,7 +168,7 @@ def test(q, bus, conn, stream, channel_type):
             predicate=lambda e: cs.CHANNEL_TYPE_CONTACT_LIST not in e.args),
         EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values())),
         )
 
     path = ret.value[0]
diff --git a/tests/twisted/jingle/outgoing-many-streams.py b/tests/twisted/jingle/outgoing-many-streams.py
index b93ce616c..c9c03c4d5 100644
--- a/tests/twisted/jingle/outgoing-many-streams.py
+++ b/tests/twisted/jingle/outgoing-many-streams.py
@@ -9,7 +9,7 @@ import dbus
 from gabbletest import exec_test, sync_stream
 from servicetest import (
     make_channel_proxy, call_async, EventPattern)
-import jingletest2
+from . import jingletest2
 import gabbletest
 
 import constants as cs
@@ -17,7 +17,7 @@ import constants as cs
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
@@ -45,7 +45,7 @@ def worker(q, bus, conn, stream, peer):
             predicate=lambda e: cs.CHANNEL_TYPE_CONTACT_LIST not in e.args),
         EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values())),
         )
 
     path = ret.value[0]
@@ -146,7 +146,7 @@ def worker(q, bus, conn, stream, peer):
         assert s[5] == 0, s # no pending send
 
     # the streams should all have unique IDs
-    stream_ids = streams_by_id.keys()
+    stream_ids = list(streams_by_id.keys())
     assert len(stream_ids) == 7
 
     # the streams should come out in the same order as the requests
@@ -181,7 +181,7 @@ def worker(q, bus, conn, stream, peer):
     stream_handler_paths = []
 
     # give all 7 streams some candidates
-    for i in xrange(7):
+    for i in range(7):
         e = q.expect('dbus-signal', signal='NewStreamHandler')
         stream_handler_paths.append(e.args[0])
         stream_handler = make_channel_proxy(conn, e.args[0],
diff --git a/tests/twisted/jingle/payload-types.py b/tests/twisted/jingle/payload-types.py
index 64a300ff1..36a997fac 100644
--- a/tests/twisted/jingle/payload-types.py
+++ b/tests/twisted/jingle/payload-types.py
@@ -6,13 +6,13 @@ import dbus
 
 from gabbletest import exec_test
 from servicetest import wrap_channel, make_channel_proxy
-import jingletest2
+from . import jingletest2
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/jingle/preload-caps-crash.py b/tests/twisted/jingle/preload-caps-crash.py
index 8464d48c3..b14e6f60e 100644
--- a/tests/twisted/jingle/preload-caps-crash.py
+++ b/tests/twisted/jingle/preload-caps-crash.py
@@ -9,7 +9,7 @@ import dbus
 from gabbletest import make_result_iq, exec_test, sync_stream
 from servicetest import (
     make_channel_proxy, unwrap, EventPattern, assertEquals, assertLength)
-from jingletest2 import JingleTest2, GtalkProtocol03
+from .jingletest2 import JingleTest2, GtalkProtocol03
 import constants as cs
 import ns
 
diff --git a/tests/twisted/jingle/session-id-collision.py b/tests/twisted/jingle/session-id-collision.py
index 724537fe0..9e23b5822 100644
--- a/tests/twisted/jingle/session-id-collision.py
+++ b/tests/twisted/jingle/session-id-collision.py
@@ -4,13 +4,13 @@ peer, leading to hilarity (and possible DOSing) if two peers picked the same
 sid.
 """
 
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(jp, q, bus, conn, stream):
diff --git a/tests/twisted/jingle/stream-errors-on-content-reject.py b/tests/twisted/jingle/stream-errors-on-content-reject.py
index 404373c72..4d1044ba9 100644
--- a/tests/twisted/jingle/stream-errors-on-content-reject.py
+++ b/tests/twisted/jingle/stream-errors-on-content-reject.py
@@ -7,7 +7,7 @@ import dbus
 from gabbletest import make_result_iq, sync_stream, exec_test
 from servicetest import (
     make_channel_proxy, unwrap, EventPattern, assertEquals, assertLength)
-from jingletest2 import JingleTest2, JingleProtocol031
+from .jingletest2 import JingleTest2, JingleProtocol031
 import constants as cs
 
 from twisted.words.xish import xpath
@@ -15,7 +15,7 @@ from twisted.words.xish import xpath
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def _content_reject_predicate(event):
@@ -82,7 +82,7 @@ def _start_audio_session(jp, q, bus, conn, stream, incoming):
     stream_handler.NewNativeCandidate("fake", jt.get_remote_transports_dbus())
     stream_handler.Ready(jt.dbusify_codecs([("FOO", 5, 8000, {})]))
 
-    msg = u"None of the codecs are good for us, damn!"
+    msg = "None of the codecs are good for us, damn!"
 
     expected_events = []
 
@@ -101,7 +101,7 @@ def _start_audio_session(jp, q, bus, conn, stream, incoming):
 
         memb, acc, _, _, _ = q.expect_many(
             EventPattern('dbus-signal', signal='MembersChanged',
-                         args=[u'', [self_handle], [], [], [], self_handle,
+                         args=['', [self_handle], [], [], [], self_handle,
                                cs.GC_REASON_NONE]),
             EventPattern('stream-iq',
                          predicate=jp.action_predicate('session-accept')),
@@ -180,7 +180,7 @@ def _remote_content_add(jp, q, bus, conn, stream, initiate_call_func):
                                      jt.get_remote_transports_dbus())
     video_handler.Ready(jt.dbusify_codecs([("FOO", 5, 8000, {})]))
 
-    msg = u"None of the codecs are good for us, damn!"
+    msg = "None of the codecs are good for us, damn!"
 
     video_handler.Error(cs.MEDIA_STREAM_ERROR_CODEC_NEGOTIATION_FAILED, msg)
 
diff --git a/tests/twisted/jingle/stream-errors-on-terminate.py b/tests/twisted/jingle/stream-errors-on-terminate.py
index 2fc403cd5..0f2cbc2b3 100644
--- a/tests/twisted/jingle/stream-errors-on-terminate.py
+++ b/tests/twisted/jingle/stream-errors-on-terminate.py
@@ -7,7 +7,7 @@ import dbus
 from gabbletest import make_result_iq, sync_stream, exec_test
 from servicetest import (
     make_channel_proxy, unwrap, EventPattern, assertEquals, assertLength)
-from jingletest2 import JingleTest2, JingleProtocol031
+from .jingletest2 import JingleTest2, JingleProtocol031
 import constants as cs
 
 from twisted.words.xish import xpath
@@ -15,7 +15,7 @@ from twisted.words.xish import xpath
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def _session_terminate_predicate(event, msg):
@@ -84,7 +84,7 @@ def _test_terminate_reason(jp, q, bus, conn, stream, incoming):
     stream_handler.NewNativeCandidate("fake", jt.get_remote_transports_dbus())
     stream_handler.Ready(jt.dbusify_codecs([("FOO", 5, 8000, {})]))
 
-    msg = u"None of the codecs are good for us, damn!"
+    msg = "None of the codecs are good for us, damn!"
 
     expected_events = []
 
diff --git a/tests/twisted/jingle/stream-handler-error.py b/tests/twisted/jingle/stream-handler-error.py
index 5b05f6d15..df119e6a3 100644
--- a/tests/twisted/jingle/stream-handler-error.py
+++ b/tests/twisted/jingle/stream-handler-error.py
@@ -8,14 +8,14 @@ from functools import partial
 
 from gabbletest import exec_test
 from servicetest import make_channel_proxy
-import jingletest2
+from . import jingletest2
 
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream, call_error_on):
@@ -32,11 +32,11 @@ def test(q, bus, conn, stream, call_error_on):
     #        happen before NewChannels.
     # The caller is in members
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [remote_handle], [], [], [], 0, 0])
+             args=['', [remote_handle], [], [], [], 0, 0])
 
     # We're pending because of remote_handle
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [], [], [1L], [], remote_handle, cs.GC_REASON_INVITED])
+             args=['', [], [], [1], [], remote_handle, cs.GC_REASON_INVITED])
 
     media_chan_suffix = e.path
 
diff --git a/tests/twisted/jingle/stun-server.py b/tests/twisted/jingle/stun-server.py
index 1ecb1c738..da4993419 100644
--- a/tests/twisted/jingle/stun-server.py
+++ b/tests/twisted/jingle/stun-server.py
@@ -11,14 +11,14 @@ from servicetest import (
     make_channel_proxy, EventPattern,
     assertEquals, assertLength, assertNotEquals, assertEquals
     )
-from jingletest2 import test_all_dialects, JingleTest2
+from .jingletest2 import test_all_dialects, JingleTest2
 import constants as cs
 import ns
 
 from config import CHANNEL_TYPE_CALL_ENABLED, GOOGLE_RELAY_ENABLED, VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test_stun_server(stun_server_prop, expected_stun_servers=None):
@@ -94,11 +94,11 @@ def test_streamed_media(jp, q, bus, conn, stream,
     #        happen before NewChannels.
     # The caller is in members
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [remote_handle], [], [], [], 0, 0])
+             args=['', [remote_handle], [], [], [], 0, 0])
 
     # We're pending because of remote_handle
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [], [], [1L], [], remote_handle, cs.GC_REASON_INVITED])
+             args=['', [], [], [1], [], remote_handle, cs.GC_REASON_INVITED])
 
     # S-E gets notified about new session handler, and calls Ready on it
     e = q.expect('dbus-signal', signal='NewSessionHandler')
@@ -294,7 +294,7 @@ if __name__ == '__main__':
             expected_stun_servers=[('5.4.3.2', 3838)]),
             protocol=GoogleXmlStream)
     else:
-        print "NOTE: built with --disable-google-relay; omitting StreamedMedia tests with Google relay"
+        print("NOTE: built with --disable-google-relay; omitting StreamedMedia tests with Google relay")
 
     # Call tests
     if CHANNEL_TYPE_CALL_ENABLED:
@@ -308,7 +308,7 @@ if __name__ == '__main__':
             google=False, expected_stun_servers=[('5.4.3.2', 1)]),
             params={'account': 'test@stunning.localhost'})
     else:
-        print "NOTE: built with --disable-channel-type-call; omitting Call tests"
+        print("NOTE: built with --disable-channel-type-call; omitting Call tests")
 
     if CHANNEL_TYPE_CALL_ENABLED and GOOGLE_RELAY_ENABLED:
         test_all_dialects(partial(test_call,
@@ -329,5 +329,5 @@ if __name__ == '__main__':
             expected_stun_servers=[('5.4.3.2', 3838)]),
             protocol=GoogleXmlStream)
     else:
-        print "NOTE: built with --disable-channel-type-call or with --disable-google-relay; omitting Call tests with Google relay"
+        print("NOTE: built with --disable-channel-type-call or with --disable-google-relay; omitting Call tests with Google relay")
 
diff --git a/tests/twisted/jingle/test-content-adding-removal.py b/tests/twisted/jingle/test-content-adding-removal.py
index db33274f7..3e54c7aa4 100644
--- a/tests/twisted/jingle/test-content-adding-removal.py
+++ b/tests/twisted/jingle/test-content-adding-removal.py
@@ -8,7 +8,7 @@ closes the session.
 from gabbletest import make_result_iq, sync_stream
 from servicetest import (
     wrap_channel, make_channel_proxy, assertEquals, EventPattern)
-from jingletest2 import (
+from .jingletest2 import (
     JingleTest2, test_dialects, JingleProtocol031, JingleProtocol015,
     )
 import constants as cs
@@ -16,7 +16,7 @@ import constants as cs
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def gabble_terminates(jp, q, bus, conn, stream):
diff --git a/tests/twisted/jingle/test-content-complex.py b/tests/twisted/jingle/test-content-complex.py
index c23f2c9a0..5bc5a092b 100644
--- a/tests/twisted/jingle/test-content-complex.py
+++ b/tests/twisted/jingle/test-content-complex.py
@@ -6,7 +6,7 @@ from gabbletest import sync_stream
 from servicetest import (
     make_channel_proxy, assertEquals, EventPattern)
 import constants as cs
-from jingletest2 import (
+from .jingletest2 import (
     JingleTest2, JingleProtocol015, JingleProtocol031, test_dialects)
 
 from twisted.words.xish import xpath
@@ -14,7 +14,7 @@ from twisted.words.xish import xpath
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def worker(jp, q, bus, conn, stream):
@@ -46,11 +46,11 @@ def worker(jp, q, bus, conn, stream):
     #        happen before NewChannels.
     # The caller is in members
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [remote_handle], [], [], [], 0, 0])
+             args=['', [remote_handle], [], [], [], 0, 0])
 
     # We're pending because of remote_handle
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [], [], [self_handle], [], remote_handle,
+             args=['', [], [], [self_handle], [], remote_handle,
                    cs.GC_REASON_INVITED])
 
     media_chan = make_channel_proxy(conn, e.path, 'Channel.Interface.Group')
@@ -74,7 +74,7 @@ def worker(jp, q, bus, conn, stream):
 
     # We are now in members too
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [self_handle], [], [], [], self_handle,
+             args=['', [self_handle], [], [], [], self_handle,
                    cs.GC_REASON_NONE])
 
     # we are now both in members
diff --git a/tests/twisted/jingle/test-description-info.py b/tests/twisted/jingle/test-description-info.py
index 1adda17ba..7a5560551 100644
--- a/tests/twisted/jingle/test-description-info.py
+++ b/tests/twisted/jingle/test-description-info.py
@@ -6,7 +6,7 @@ from gabbletest import exec_test, sync_stream
 from servicetest import (
     wrap_channel, assertEquals, make_channel_proxy, unwrap, EventPattern,
     call_async)
-from jingletest2 import JingleTest2, JingleProtocol031
+from .jingletest2 import JingleTest2, JingleProtocol031
 import constants as cs
 
 from twisted.words.xish import xpath
@@ -14,7 +14,7 @@ from twisted.words.xish import xpath
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def extract_params(payload_type):
@@ -42,11 +42,11 @@ def test(q, bus, conn, stream, send_early_description_info=False):
     #        happen before NewChannels.
     # The caller is in members
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [remote_handle], [], [], [], 0, 0])
+             args=['', [remote_handle], [], [], [], 0, 0])
 
     # We're pending because of remote_handle
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [], [], [self_handle], [], remote_handle,
+             args=['', [], [], [self_handle], [], remote_handle,
                    cs.GC_REASON_INVITED])
 
     chan = wrap_channel(bus.get_object(conn.bus_name,  e.path),
@@ -84,7 +84,7 @@ def test(q, bus, conn, stream, send_early_description_info=False):
 
     # We are now in members too
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [self_handle], [], [], [], self_handle,
+             args=['', [self_handle], [], [], [], self_handle,
                    cs.GC_REASON_NONE])
 
     # we are now both in members
diff --git a/tests/twisted/jingle/test-incoming-call-reject.py b/tests/twisted/jingle/test-incoming-call-reject.py
index 581ea7f60..378ed949d 100644
--- a/tests/twisted/jingle/test-incoming-call-reject.py
+++ b/tests/twisted/jingle/test-incoming-call-reject.py
@@ -6,14 +6,14 @@ reason.
 from twisted.words.xish import xpath
 
 from servicetest import make_channel_proxy, EventPattern, call_async
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 import constants as cs
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test_busy(jp, q, bus, conn, stream):
@@ -38,11 +38,11 @@ def test(jp, q, bus, conn, stream, busy):
     #        happen before NewChannels.
     # The caller is in members
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [remote_handle], [], [], [], 0, 0])
+             args=['', [remote_handle], [], [], [], 0, 0])
 
     # We're pending because of remote_handle
     e = q.expect('dbus-signal', signal='MembersChanged',
-             args=[u'', [], [], [self_handle], [], remote_handle,
+             args=['', [], [], [self_handle], [], remote_handle,
                    cs.GC_REASON_INVITED])
 
     # S-E gets notified about new session handler, and calls Ready on it
diff --git a/tests/twisted/jingle/test-incoming-iceudp.py b/tests/twisted/jingle/test-incoming-iceudp.py
index f59e44355..264ea8448 100644
--- a/tests/twisted/jingle/test-incoming-iceudp.py
+++ b/tests/twisted/jingle/test-incoming-iceudp.py
@@ -11,12 +11,12 @@ from servicetest import (
 import ns
 import constants as cs
 
-from jingletest2 import *
+from .jingletest2 import *
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def worker(jp, q, bus, conn, stream):
diff --git a/tests/twisted/jingle/test-outgoing-call-rejected.py b/tests/twisted/jingle/test-outgoing-call-rejected.py
index 819249ee7..b59ce0679 100644
--- a/tests/twisted/jingle/test-outgoing-call-rejected.py
+++ b/tests/twisted/jingle/test-outgoing-call-rejected.py
@@ -6,12 +6,12 @@ remote party rejects our call because they're busy.
 from gabbletest import make_result_iq
 from servicetest import make_channel_proxy, assertEquals
 import constants as cs
-from jingletest2 import JingleTest2, test_all_dialects
+from .jingletest2 import JingleTest2, test_all_dialects
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def _test(jp, q, bus, conn, stream,
@@ -51,7 +51,7 @@ def _test(jp, q, bus, conn, stream,
     e = q.expect('stream-iq', predicate=jp.action_predicate('session-initiate'))
     stream.send(make_result_iq(stream, e.stanza))
 
-    text = u"begone!"
+    text = "begone!"
 
     jt.parse_session_initiate(e.query)
     jt.terminate(reason=jingle_reason, text=text)
diff --git a/tests/twisted/jingle/test-outgoing-iceudp.py b/tests/twisted/jingle/test-outgoing-iceudp.py
index fbdad9472..19a7d5287 100644
--- a/tests/twisted/jingle/test-outgoing-iceudp.py
+++ b/tests/twisted/jingle/test-outgoing-iceudp.py
@@ -13,12 +13,12 @@ from twisted.words.xish import xpath
 import ns
 import constants as cs
 
-from jingletest2 import *
+from .jingletest2 import *
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def worker(jp, q, bus, conn, stream):
@@ -38,7 +38,7 @@ def worker(jp, q, bus, conn, stream):
             predicate=lambda e: cs.CHANNEL_TYPE_CONTACT_LIST not in e.args),
         EventPattern('dbus-signal', signal='NewChannels',
             predicate=lambda e:
-                cs.CHANNEL_TYPE_CONTACT_LIST not in e.args[0][0][1].values()),
+                cs.CHANNEL_TYPE_CONTACT_LIST not in list(e.args[0][0][1].values())),
         )
     path = ret.value[0]
 
@@ -79,7 +79,7 @@ def worker(jp, q, bus, conn, stream):
     # one candidate, so...
     assertEquals('username', node['ufrag'])
     assertEquals('password', node['pwd'])
-    node = [ x for x in node.children if type(x) != unicode ][0]
+    node = [ x for x in node.children if type(x) != str ][0]
     assertEquals('candidate', node.name)
     assert node['foundation'] is not None
 
diff --git a/tests/twisted/jingle/test-wait-for-caps-incomplete.py b/tests/twisted/jingle/test-wait-for-caps-incomplete.py
index e6e97c226..93d45f50b 100644
--- a/tests/twisted/jingle/test-wait-for-caps-incomplete.py
+++ b/tests/twisted/jingle/test-wait-for-caps-incomplete.py
@@ -13,7 +13,7 @@ import constants as cs
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream, channel_type):
diff --git a/tests/twisted/jingle/test-wait-for-caps.py b/tests/twisted/jingle/test-wait-for-caps.py
index 98221ef8e..b277d268d 100644
--- a/tests/twisted/jingle/test-wait-for-caps.py
+++ b/tests/twisted/jingle/test-wait-for-caps.py
@@ -7,7 +7,7 @@ call until caps have arrived.
 from functools import partial
 from gabbletest import exec_test
 from servicetest import make_channel_proxy, call_async, sync_dbus
-import jingletest2
+from . import jingletest2
 
 import dbus
 
@@ -16,7 +16,7 @@ import constants as cs
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream, channel_type):
diff --git a/tests/twisted/jingle/transport-info-parsing.py b/tests/twisted/jingle/transport-info-parsing.py
index b84d84770..11efe3eaf 100644
--- a/tests/twisted/jingle/transport-info-parsing.py
+++ b/tests/twisted/jingle/transport-info-parsing.py
@@ -5,12 +5,12 @@ Test whether we parse the transport info with multiple contents correctly
 from gabbletest import exec_test
 from servicetest import ( make_channel_proxy, EventPattern,
     assertEquals, assertNotEquals )
-from jingletest2 import *
+from .jingletest2 import *
 
 from config import VOIP_ENABLED
 
 if not VOIP_ENABLED:
-    print "NOTE: built with --disable-voip"
+    print("NOTE: built with --disable-voip")
     raise SystemExit(77)
 
 def test(q, bus, conn, stream, peer='foo@bar.com/Foo'):
diff --git a/tests/twisted/jingle/unknown-session.py b/tests/twisted/jingle/unknown-session.py
index 68c97c662..6d996c07d 100644
--- a/tests/twisted/jingle/unknown-session.py
+++ b/tests/twisted/jingle/unknown-session.py
@@ -5,12 +5,12 @@ sessions.
 
 from gabbletest import exec_test
 from servicetest import assertEquals
-from jingletest2 import JingleProtocol031
+from .jingletest2 import JingleProtocol031
 import ns
 
 def assertHasChild(node, uri, name):
     try:
-        node.elements(uri=uri, name=name).next()
+        next(node.elements(uri=uri, name=name))
     except StopIteration:
         raise AssertionError(
             "Expected <%s xmlns='%s'> to be a child of\n    %s" % (
diff --git a/tests/twisted/mail-notification.py b/tests/twisted/mail-notification.py
index ef19c7d79..c858e0e98 100644
--- a/tests/twisted/mail-notification.py
+++ b/tests/twisted/mail-notification.py
@@ -38,8 +38,8 @@ def test_google_featured(q, bus, conn, stream):
     # E-mail thread 1 data
     thread1_id = "1"
     # Dates are 32bit unsigned integers, let's use the biggest possible value
-    thread1_date = (pow(2,32) - 1) * 1000L
-    thread1_url = 'http://mail.google.com/mail/#inbox/%x' % long(thread1_id)
+    thread1_date = (pow(2,32) - 1) * 1000
+    thread1_url = 'http://mail.google.com/mail/#inbox/%x' % int(thread1_id)
     thread1_senders = [('John Smith', 'john@smith.com'),
                        ('Denis Tremblay', 'denis@tremblay.qc.ca')]
     thread1_subject = "subject1"
@@ -47,16 +47,16 @@ def test_google_featured(q, bus, conn, stream):
 
     # Email thread 2 data
     thread2_id = "2"
-    thread2_date = 1234L
-    thread2_url = 'http://mail.google.com/mail/#inbox/%x' % long(thread2_id)
+    thread2_date = 1234
+    thread2_url = 'http://mail.google.com/mail/#inbox/%x' % int(thread2_id)
     thread2_senders = [('Sam Gratte', 'sam@gratte.edu'),]
     thread2_subject = "subject2"
     thread2_snippet = "body2"
 
     # Email thread 3 data
     thread3_id = "3"
-    thread3_date = 1235L
-    thread3_url = 'http://mail.google.com/mail/#inbox/%x' % long(thread3_id)
+    thread3_date = 1235
+    thread3_url = 'http://mail.google.com/mail/#inbox/%x' % int(thread3_id)
     thread3_senders = [('Le Chat', 'le@chat.fr'),]
     thread3_subject = "subject3"
     thread3_snippet = "body3"
@@ -317,12 +317,12 @@ def test_no_google_featured(q, bus, conn, stream):
 
     try:
         conn.MailNotification.RequestInboxURL()
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assert e.get_dbus_name() == cs.NOT_IMPLEMENTED
 
     try:
         conn.MailNotification.RequestMailURL("1", "http://test.com/mail")
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assert e.get_dbus_name() == cs.NOT_IMPLEMENTED
 
     # Make sure all properties return with empty or 0 data including
diff --git a/tests/twisted/muc/banned.py b/tests/twisted/muc/banned.py
index 1d6d8e5e1..9ddfb9821 100644
--- a/tests/twisted/muc/banned.py
+++ b/tests/twisted/muc/banned.py
@@ -20,7 +20,7 @@ def test(q, bus, conn, stream):
           elem('error', code='403', type='auth')(
             elem(ns.STANZA, 'forbidden'),
             elem(ns.STANZA, 'text')(
-              u'Access denied by service policy',
+              'Access denied by service policy',
             )
           )
         ))
diff --git a/tests/twisted/muc/chat-states.py b/tests/twisted/muc/chat-states.py
index 4be5f50b2..fefee1800 100644
--- a/tests/twisted/muc/chat-states.py
+++ b/tests/twisted/muc/chat-states.py
@@ -120,7 +120,7 @@ def test(q, bus, conn, stream):
 
     bodies = list(stanza.elements(uri=ns.CLIENT, name='body'))
     assertLength(1, bodies)
-    assertEquals(u'hi.', bodies[0].children[0])
+    assertEquals('hi.', bodies[0].children[0])
 
     # If we get an error with type='wait', stop sending chat states.
     stanza['type'] = 'error'
diff --git a/tests/twisted/muc/kicked.py b/tests/twisted/muc/kicked.py
index e32648853..956c8cba4 100644
--- a/tests/twisted/muc/kicked.py
+++ b/tests/twisted/muc/kicked.py
@@ -27,7 +27,7 @@ def test(q, bus, conn, stream):
             elem('item', affiliation='none', role='none')(
               elem('actor', jid=bob_jid),
               elem('reason')(
-                u'bye'
+                'bye'
               )
             ),
             elem('status', code='307'),
diff --git a/tests/twisted/muc/only-text-when-needed.py b/tests/twisted/muc/only-text-when-needed.py
index 260d26c8a..2bed3337b 100644
--- a/tests/twisted/muc/only-text-when-needed.py
+++ b/tests/twisted/muc/only-text-when-needed.py
@@ -301,7 +301,7 @@ def test_message(q, bus, conn, stream):
     stream.send(
         elem('message', from_=bob_jid, type='groupchat')(
           elem('body')(
-            u'oh hey i didnt see you there'
+            'oh hey i didnt see you there'
           ),
         )
       )
@@ -354,7 +354,7 @@ def test_requested_message(q, bus, conn, stream):
     stream.send(
         elem('message', from_=bob_jid, type='groupchat')(
           elem('body')(
-            u'hello again'
+            'hello again'
           ),
         )
       )
diff --git a/tests/twisted/muc/password.py b/tests/twisted/muc/password.py
index 7a67d17af..0b514db29 100644
--- a/tests/twisted/muc/password.py
+++ b/tests/twisted/muc/password.py
@@ -5,7 +5,7 @@ import ns
 
 def expect_attempt(q, expected_muc_jid, expected_password):
     e = q.expect('stream-presence', to=expected_muc_jid)
-    x = e.stanza.elements(uri=ns.MUC, name='x').next()
+    x = next(e.stanza.elements(uri=ns.MUC, name='x'))
 
     p = x.firstChildElement()
     assertEquals(expected_password, str(p))
diff --git a/tests/twisted/muc/room-config.py b/tests/twisted/muc/room-config.py
index ef5c78a74..b046d2b2c 100644
--- a/tests/twisted/muc/room-config.py
+++ b/tests/twisted/muc/room-config.py
@@ -59,7 +59,7 @@ def handle_muc_owner_get_iq(stream, stanza):
     x = query.addElement(('jabber:x:data', 'x'))
     x['type'] = 'form'
 
-    for var, values in get_default_form().iteritems():
+    for var, values in get_default_form().items():
         if len(values) > 1:
             field = x.addElement('field')
             field['type'] = 'list-multi'
@@ -143,7 +143,7 @@ def test_some_stuff(q, bus, conn, stream):
     pc = q.expect('dbus-signal', signal='PropertiesChanged',
         predicate=lambda e: e.args[0] == cs.CHANNEL_IFACE_ROOM_CONFIG)
     _, changed, invalidated = pc.args
-    assertEquals(['MutableProperties'], changed.keys())
+    assertEquals(['MutableProperties'], list(changed.keys()))
     assertContains('Description', changed['MutableProperties'])
 
     handle_disco_info_iq(stream, disco_iq.stanza)
diff --git a/tests/twisted/muc/scrollback.py b/tests/twisted/muc/scrollback.py
index 607d3c6f8..23f3b8b9b 100644
--- a/tests/twisted/muc/scrollback.py
+++ b/tests/twisted/muc/scrollback.py
@@ -31,7 +31,7 @@ def test(q, bus, conn, stream):
     stream.send(
         elem('message', from_=our_jid, type='groupchat')(
           elem('body')(
-            u'i really hate the muc xep'
+            'i really hate the muc xep'
           ),
           elem(ns.X_DELAY, 'x', from_=room, stamp='20090910T12:34:56')
         )
@@ -39,7 +39,7 @@ def test(q, bus, conn, stream):
     stream.send(
         elem('message', from_=bob_jid, type='groupchat')(
           elem('body')(
-            u'yeah, it totally sucks'
+            'yeah, it totally sucks'
           ),
           elem(ns.X_DELAY, 'x', from_=room, stamp='20090910T12:45:56')
         )
@@ -47,7 +47,7 @@ def test(q, bus, conn, stream):
     stream.send(
         elem('message', from_=marco_jid, type='groupchat')(
           elem('body')(
-            u'we should start a riot'
+            'we should start a riot'
           ),
           elem(ns.X_DELAY, 'x', from_=room, stamp='20090910T12:56:56')
         )
diff --git a/tests/twisted/muc/send-error.py b/tests/twisted/muc/send-error.py
index 33f376bf5..54b4fbcb9 100644
--- a/tests/twisted/muc/send-error.py
+++ b/tests/twisted/muc/send-error.py
@@ -21,7 +21,7 @@ def test(q, bus, conn, stream):
     # the channel, and have the MUC reject it as unauthorized.
     send_message_and_expect_error(q, stream,
         text_chan, test_handle, bob_handle,
-        u"hi r ther ne warez n this chanel?",
+        "hi r ther ne warez n this chanel?",
         '401', 'auth', 'not-authorized',
         delivery_status=cs.DELIVERY_STATUS_PERMANENTLY_FAILED,
         send_error_value=cs.SendError.PERMISSION_DENIED)
@@ -40,7 +40,7 @@ def test(q, bus, conn, stream):
     # https://bugs.freedesktop.org/show_bug.cgi?id=43166#c9
     send_message_and_expect_error(q, stream,
         text_chan, test_handle, bob_handle,
-        content=u"fair enough",
+        content="fair enough",
         code=None,
         type_='wait',
         element='policy-violation',
diff --git a/tests/twisted/muc/test-muc-alias.py b/tests/twisted/muc/test-muc-alias.py
index edfd78b96..aaa23edf6 100644
--- a/tests/twisted/muc/test-muc-alias.py
+++ b/tests/twisted/muc/test-muc-alias.py
@@ -17,7 +17,7 @@ def test(q, bus, conn, stream):
     expect_and_handle_set_vcard(q, stream)
 
     event = q.expect('dbus-signal', signal='AliasesChanged',
-        args=[[(self_handle, u'lala')]])
+        args=[[(self_handle, 'lala')]])
 
     room_jid = 'chat@conf.localhost'
     room_handle = request_muc_handle(q, conn, stream, room_jid)
@@ -28,7 +28,7 @@ def test(q, bus, conn, stream):
     gfc, _, _ = q.expect_many(
         EventPattern('dbus-signal', signal='GroupFlagsChanged'),
         EventPattern('dbus-signal', signal='MembersChanged',
-            args=[u'', [], [], [], [2], 0, 0]),
+            args=['', [], [], [], [2], 0, 0]),
         EventPattern('stream-presence', to='%s/lala' % room_jid))
     assert gfc.args[1] == 0
 
@@ -39,7 +39,7 @@ def test(q, bus, conn, stream):
     stream.send(make_muc_presence('none', 'participant', room_jid, 'lala'))
 
     event = q.expect('dbus-signal', signal='MembersChanged',
-        args=[u'', [2, 3], [], [], [], 0, 0])
+        args=['', [2, 3], [], [], [], 0, 0])
     assert conn.InspectHandles(1, [2]) == ['chat@conf.localhost/lala']
     assert conn.InspectHandles(1, [3]) == ['chat@conf.localhost/bob']
 
diff --git a/tests/twisted/muc/test-muc-invitation.py b/tests/twisted/muc/test-muc-invitation.py
index e30c68dc2..55ee9f28b 100644
--- a/tests/twisted/muc/test-muc-invitation.py
+++ b/tests/twisted/muc/test-muc-invitation.py
@@ -76,7 +76,7 @@ def test(q, bus, conn, stream):
     assert not show
     status = [e for e in elem.elements() if e.name == 'status'][0]
     assert status
-    assert status.children[0] == u'success'
+    assert status.children[0] == 'success'
 
     # We are added as remote pending while joining the room. The inviter (Bob)
     # is removed for now. It will be re-added with his channel specific handle
diff --git a/tests/twisted/muc/test-muc-ownership.py b/tests/twisted/muc/test-muc-ownership.py
index f0f2d504f..2108e56c8 100644
--- a/tests/twisted/muc/test-muc-ownership.py
+++ b/tests/twisted/muc/test-muc-ownership.py
@@ -28,7 +28,7 @@ def test(q, bus, conn, stream):
         EventPattern('dbus-signal', signal='GroupFlagsChanged',
             predicate=lambda e: e.args[0] != 0),
         EventPattern('dbus-signal', signal='MembersChanged',
-            args=[u'', [], [], [], [2], 0, 0]),
+            args=['', [], [], [], [2], 0, 0]),
         # Removing CAN_ADD
         EventPattern('dbus-signal', signal='GroupFlagsChanged',
           args = [0, cs.GF_CAN_ADD], predicate=lambda e: e.args[0] == 0),
@@ -90,13 +90,13 @@ def test(q, bus, conn, stream):
     # Exercise D-Bus properties
     all = chan.Properties.GetAll(cs.CHANNEL_IFACE_GROUP)
 
-    assert all[u'LocalPendingMembers'] == [], all
-    assert sorted(all[u'Members']) == expected_members, all
-    assert all[u'RemotePendingMembers'] == [], all
-    assert all[u'SelfHandle'] == test, all
-    assert all[u'HandleOwners'] == expected_owners, all
+    assert all['LocalPendingMembers'] == [], all
+    assert sorted(all['Members']) == expected_members, all
+    assert all['RemotePendingMembers'] == [], all
+    assert all['SelfHandle'] == test, all
+    assert all['HandleOwners'] == expected_owners, all
 
-    flags = all[u'GroupFlags']
+    flags = all['GroupFlags']
     assertFlagsSet(cs.GF_PROPERTIES | cs.GF_CHANNEL_SPECIFIC_HANDLES, flags)
     assertFlagsUnset(cs.GF_HANDLE_OWNERS_NOT_AVAILABLE, flags)
 
diff --git a/tests/twisted/muc/test-muc.py b/tests/twisted/muc/test-muc.py
index a254d8ee8..84c3515ae 100644
--- a/tests/twisted/muc/test-muc.py
+++ b/tests/twisted/muc/test-muc.py
@@ -105,7 +105,7 @@ def test(q, bus, conn, stream):
         dbus.Dictionary({ 'message-type': 1, # Action
                         }, signature='sv'),
         { 'content-type': 'text/plain',
-          'content': u"peers through a gap in the curtains",
+          'content': "peers through a gap in the curtains",
         }
     ]
 
@@ -131,7 +131,7 @@ def test(q, bus, conn, stream):
     assertEquals('chat@conf.localhost/test', header['message-sender-id'])
     body = sent_message[1]
     assert body['content-type'] == 'text/plain', body
-    assert body['content'] == u'peers through a gap in the curtains', body
+    assert body['content'] == 'peers through a gap in the curtains', body
 
     # Of the flags passed to SendMessage, Gabble should only report the
     # DELIVERY flag, since the other is not supported.
@@ -139,7 +139,7 @@ def test(q, bus, conn, stream):
     assertEquals(sent_token, token)
 
     assert sent.args[1] == 1, sent.args # Action
-    assert sent.args[2] == u'peers through a gap in the curtains', sent.args
+    assert sent.args[2] == 'peers through a gap in the curtains', sent.args
 
     assert message_sent.args[2] == sent_token
 
@@ -151,7 +151,7 @@ def test(q, bus, conn, stream):
     for sub_elem in stream_message.stanza.elements():
         if sub_elem.name == 'body':
             found_body = True
-            assert sub_elem.children[0] == u'/me peers through a gap in the curtains'
+            assert sub_elem.children[0] == '/me peers through a gap in the curtains'
             break
     assert found_body
 
@@ -214,7 +214,7 @@ def test(q, bus, conn, stream):
     assert 'message-type' not in header, header # Normal
     body = sent_message[1]
     assert body['content-type'] == 'text/plain', body
-    assert body['content'] == u'goodbye', body
+    assert body['content'] == 'goodbye', body
 
     # The caller didn't ask for delivery reports (how could they? they're using
     # the old API), but the server's going to send us an echo anyway, so
@@ -222,7 +222,7 @@ def test(q, bus, conn, stream):
     assert flags in [0, cs.MSG_SENDING_FLAGS_REPORT_DELIVERY], flags
 
     assert sent.args[1] == 0, sent.args # Normal
-    assert sent.args[2] == u'goodbye', sent.args
+    assert sent.args[2] == 'goodbye', sent.args
 
     sent_token = message_sent.args[2]
 
@@ -232,7 +232,7 @@ def test(q, bus, conn, stream):
     assert elem['id'] == message_sent.args[2]
     body = list(event.stanza.elements())[0]
     assert body.name == 'body'
-    assert body.children[0] == u'goodbye'
+    assert body.children[0] == 'goodbye'
 
     # reflect the sent message back to the MUC
     elem['from'] = 'chat@conf.localhost/test'
@@ -248,10 +248,10 @@ def test(q, bus, conn, stream):
     elem = event.stanza
     show = [e for e in elem.elements() if e.name == 'show'][0]
     assert show
-    assert show.children[0] == u'away'
+    assert show.children[0] == 'away'
     status = [e for e in elem.elements() if e.name == 'status'][0]
     assert status
-    assert status.children[0] == u'hurrah'
+    assert status.children[0] == 'hurrah'
 
     # Check that there's no <x xmlns='.../muc'/> element in the <presence>
     # stanza when we're just updating our presence, as opposed to joining the
@@ -272,7 +272,7 @@ def test(q, bus, conn, stream):
     assert elem['type'] == 'unavailable'
     status = [e for e in elem.elements() if e.name == 'status']
     assertLength(1, status)
-    assertEquals(status[0].children[0], u'booo')
+    assertEquals(status[0].children[0], 'booo')
 
 if __name__ == '__main__':
     exec_test(test)
diff --git a/tests/twisted/olpc/util.py b/tests/twisted/olpc/util.py
index 2822a7f20..9b0cc56b5 100644
--- a/tests/twisted/olpc/util.py
+++ b/tests/twisted/olpc/util.py
@@ -10,7 +10,7 @@ import ns
 def properties_to_xml(properties):
     result = []
 
-    for key, (type, value) in properties.iteritems():
+    for key, (type, value) in properties.items():
         property = domish.Element((None, 'property'))
         property['type'] = type
         property['name'] = key
diff --git a/tests/twisted/plugin-channel-managers.py b/tests/twisted/plugin-channel-managers.py
index 320dd7ac7..92a7f86ec 100644
--- a/tests/twisted/plugin-channel-managers.py
+++ b/tests/twisted/plugin-channel-managers.py
@@ -12,7 +12,7 @@ from config import PLUGINS_ENABLED
 TEST_PLUGIN_IFACE = "org.freedesktop.Telepathy.Gabble.Plugin.Test"
 
 if not PLUGINS_ENABLED:
-    print "NOTE: built without --enable-plugins, not testing plugins"
+    print("NOTE: built without --enable-plugins, not testing plugins")
     raise SystemExit(77) # which makes the test show up as skipped
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/power-save.py b/tests/twisted/power-save.py
index 862c709c9..e38c7fb5a 100644
--- a/tests/twisted/power-save.py
+++ b/tests/twisted/power-save.py
@@ -94,7 +94,7 @@ def test_local_queueing(q, bus, conn, stream):
         elem((ns.PUBSUB_EVENT), 'event')(
             elem('items', node=ns.NICK)(
                 elem('item')(
-                    elem(ns.NICK, 'nick')(u'Robert')
+                    elem(ns.NICK, 'nick')('Robert')
                 )
             )
         )
@@ -116,8 +116,8 @@ def test_local_queueing(q, bus, conn, stream):
     p1 = q.expect('dbus-signal', signal='PresencesChanged')
     p2 = q.expect('dbus-signal', signal='PresencesChanged')
 
-    assertEquals('away', p1.args[0].values()[0][1])
-    assertEquals('xa', p2.args[0].values()[0][1])
+    assertEquals('away', list(p1.args[0].values())[0][1])
+    assertEquals('xa', list(p2.args[0].values())[0][1])
 
     # .. followed by the result of PEP notification ..
     event = q.expect('dbus-signal', signal='AliasesChanged')
diff --git a/tests/twisted/presence/error.py b/tests/twisted/presence/error.py
index 53f3703bc..21e79decf 100644
--- a/tests/twisted/presence/error.py
+++ b/tests/twisted/presence/error.py
@@ -32,7 +32,7 @@ def test(q, bus, conn, stream):
     # Our server can't resolve unreachable.example.com so it sends us an error
     # presence for Gregory. (This is what Prosody actually does.)
     presence = make_presence(gregory, type='error')
-    error_text = u'Connection failed: DNS resolution failed'
+    error_text = 'Connection failed: DNS resolution failed'
     presence.addChild(
         elem('error', type='cancel')(
           elem(ns.STANZA, 'remote-server-not-found'),
diff --git a/tests/twisted/presence/initial-contact-presence.py b/tests/twisted/presence/initial-contact-presence.py
index 881316c73..2246d77ab 100644
--- a/tests/twisted/presence/initial-contact-presence.py
+++ b/tests/twisted/presence/initial-contact-presence.py
@@ -16,9 +16,9 @@ import ns
 
 from twisted.words.xish import domish
 
-AVAILABLE = (cs.PRESENCE_AVAILABLE, u'available', u'')
-OFFLINE = (cs.PRESENCE_OFFLINE, u'offline', u'')
-UNKNOWN = (cs.PRESENCE_UNKNOWN, u'unknown', u'')
+AVAILABLE = (cs.PRESENCE_AVAILABLE, 'available', '')
+OFFLINE = (cs.PRESENCE_OFFLINE, 'offline', '')
+UNKNOWN = (cs.PRESENCE_UNKNOWN, 'unknown', '')
 
 def make_roster_item(jid, subscription):
     item = domish.Element((None, 'item'))
@@ -64,7 +64,7 @@ def test(q, bus, conn, stream):
     # to: <https://bugs.freedesktop.org/show_bug.cgi?id=41743>.
     stream.send(
         elem('message', from_='amy@foo.com', type='chat')(
-          elem('body')(u'why are you never online?')
+          elem('body')('why are you never online?')
         ))
     q.expect('dbus-signal', signal='MessageReceived')
 
diff --git a/tests/twisted/presence/initial-presence.py b/tests/twisted/presence/initial-presence.py
index 2164e5938..5f064a853 100644
--- a/tests/twisted/presence/initial-presence.py
+++ b/tests/twisted/presence/initial-presence.py
@@ -9,7 +9,7 @@ from gabbletest import exec_test
 from servicetest import EventPattern, assertEquals, assertNotEquals
 import ns
 import constants as cs
-from invisible_helper import ValidInvisibleListStream, Xep0186Stream, \
+from .invisible_helper import ValidInvisibleListStream, Xep0186Stream, \
     Xep0186AndValidInvisibleListStream
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/presence/invisible_helper.py b/tests/twisted/presence/invisible_helper.py
index 29659b04b..a1ded2c7d 100644
--- a/tests/twisted/presence/invisible_helper.py
+++ b/tests/twisted/presence/invisible_helper.py
@@ -102,13 +102,13 @@ class SharedStatusStream(XmppXmlStream):
         self.addObserver("/iq/query[@xmlns='%s']" % ns.GOOGLE_SHARED_STATUS,
            self.shared_status_iq_cb)
 
-        self.shared_status_lists = {u'default' : [u'Pining away',
-                                                  u'Wherefore indeed',
-                                                  u'Thinking about the sun'],
-                                     u'dnd' : [u'Chilling with Mercutio',
-                                              u'Visiting the monk']}
+        self.shared_status_lists = {'default' : ['Pining away',
+                                                  'Wherefore indeed',
+                                                  'Thinking about the sun'],
+                                     'dnd' : ['Chilling with Mercutio',
+                                              'Visiting the monk']}
 
-        self.shared_status = (u'Pining away', u'default', u'false')
+        self.shared_status = ('Pining away', 'default', 'false')
 
         self.min_version = '2'
 
@@ -136,12 +136,12 @@ class SharedStatusStream(XmppXmlStream):
             iq_type = "result"
         status, show, invisible = self.shared_status
         elems = []
-        elems.append(elem('status')(unicode(status)))
-        elems.append(elem('show')(unicode(show)))
-        for show, statuses in self.shared_status_lists.items():
+        elems.append(elem('status')(str(status)))
+        elems.append(elem('show')(str(show)))
+        for show, statuses in list(self.shared_status_lists.items()):
             lst = []
             for _status in statuses:
-                lst.append(elem('status')(unicode(_status)))
+                lst.append(elem('status')(str(_status)))
             elems.append(elem('status-list', show=show)(*lst))
         elems.append(elem('invisible', value=invisible)())
 
diff --git a/tests/twisted/presence/invisible_xep_0126.py b/tests/twisted/presence/invisible_xep_0126.py
index 7dbfb36b7..c7b3dc6ce 100644
--- a/tests/twisted/presence/invisible_xep_0126.py
+++ b/tests/twisted/presence/invisible_xep_0126.py
@@ -17,7 +17,7 @@ from servicetest import (
 import ns
 import constants as cs
 from twisted.words.xish import xpath, domish
-from invisible_helper import ManualPrivacyListStream
+from .invisible_helper import ManualPrivacyListStream
 from functools import partial
 
 def test_create_invisible_list(q, bus, conn, stream):
@@ -331,9 +331,9 @@ def test_privacy_list_push_valid(q, bus, conn, stream):
         EventPattern('stream-iq', query_ns=ns.PRIVACY, iq_type="get"))
 
     stream.send_privacy_list(req_list.stanza,
-        [elem('item', action='deny', order='1')(elem(u'presence-out')),
+        [elem('item', action='deny', order='1')(elem('presence-out')),
          elem('item', type='jid', value='tybalt@example.com', action='deny',
-              order='2')(elem(u'message'))])
+              order='2')(elem('message'))])
 
     # We redundantly re-activate the 'invisible' list. These lines also
     # check to see that we didn't switch over to 'invisible-gabble'
diff --git a/tests/twisted/presence/invisible_xep_0186.py b/tests/twisted/presence/invisible_xep_0186.py
index a70de53e7..c1f25ea4f 100644
--- a/tests/twisted/presence/invisible_xep_0186.py
+++ b/tests/twisted/presence/invisible_xep_0186.py
@@ -9,7 +9,7 @@ from servicetest import (
 )
 import ns
 import constants as cs
-from invisible_helper import Xep0186AndValidInvisibleListStream, Xep0186Stream
+from .invisible_helper import Xep0186AndValidInvisibleListStream, Xep0186Stream
 
 def test_invisible_on_connect(q, bus, conn, stream):
     props = conn.Properties.GetAll(cs.CONN_IFACE_SIMPLE_PRESENCE)
diff --git a/tests/twisted/presence/plugins.py b/tests/twisted/presence/plugins.py
index 67901142a..418ba37dd 100644
--- a/tests/twisted/presence/plugins.py
+++ b/tests/twisted/presence/plugins.py
@@ -14,7 +14,7 @@ import constants as cs
 
 from twisted.words.xish import xpath, domish
 
-from invisible_helper import Xep0186AndManualPrivacyListStream, \
+from .invisible_helper import Xep0186AndManualPrivacyListStream, \
     ManualPrivacyListStream
 
 def test(q, bus, conn, stream):
@@ -64,7 +64,7 @@ def test(q, bus, conn, stream):
     acknowledge_iq(stream, get_list.stanza)
 
     q.expect('dbus-signal', signal='PresencesChanged',
-        args=[{1L: (cs.PRESENCE_BUSY, u'testbusy', '')}])
+        args=[{1: (cs.PRESENCE_BUSY, 'testbusy', '')}])
     q.expect('dbus-signal', signal='StatusChanged',
         args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED])
 
@@ -100,7 +100,7 @@ def test_with_xep0186(q, bus, conn, stream):
     acknowledge_iq(stream, get_list.stanza)
 
     q.expect('dbus-signal', signal='PresencesChanged',
-        args=[{1L: (cs.PRESENCE_BUSY, u'testbusy', '')}])
+        args=[{1: (cs.PRESENCE_BUSY, 'testbusy', '')}])
     q.expect('dbus-signal', signal='StatusChanged',
         args=[cs.CONN_STATUS_CONNECTED, cs.CSR_REQUESTED])
 
diff --git a/tests/twisted/presence/set-idempotence.py b/tests/twisted/presence/set-idempotence.py
index dc11ceb79..ff2fc1cb5 100644
--- a/tests/twisted/presence/set-idempotence.py
+++ b/tests/twisted/presence/set-idempotence.py
@@ -7,7 +7,7 @@ import dbus
 from servicetest import EventPattern
 from gabbletest import exec_test
 import constants as cs
-from invisible_helper import Xep0186Stream, ValidInvisibleListStream, \
+from .invisible_helper import Xep0186Stream, ValidInvisibleListStream, \
     Xep0186AndValidInvisibleListStream
 
 def run_test(q, bus, conn, stream):
@@ -21,9 +21,9 @@ def run_test(q, bus, conn, stream):
     simple_signal, presence = q.expect_many (
         EventPattern('dbus-signal', signal='PresencesChanged'),
         EventPattern('stream-presence'))
-    assert simple_signal.args == [{1L: (3L, u'away',  u'gone')}]
-    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1L:
-      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (3L, u'away', u'gone'),
+    assert simple_signal.args == [{1: (3, 'away',  'gone')}]
+    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1:
+      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (3, 'away', 'gone'),
         'org.freedesktop.Telepathy.Connection/contact-id':
             'test@localhost'}}
 
@@ -36,8 +36,8 @@ def run_test(q, bus, conn, stream):
     # Set presence a second time. Since this call is redundant, there should
     # be no PresencesChanged or <presence> sent to the server.
     conn.SimplePresence.SetPresence('away', 'gone')
-    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1L:
-      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (3L, u'away', u'gone'),
+    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1:
+      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (3, 'away', 'gone'),
         'org.freedesktop.Telepathy.Connection/contact-id':
             'test@localhost'}}
 
@@ -49,12 +49,12 @@ def run_test(q, bus, conn, stream):
         EventPattern('dbus-signal', signal='PresencesChanged'),
         EventPattern('stream-presence'))
 
-    assert simple_signal.args == [{1L: (2L, u'available',  u'yo')}]
+    assert simple_signal.args == [{1: (2, 'available',  'yo')}]
     children = list(presence.stanza.elements())
     assert children[0].name == 'status'
     assert str(children[0]) == 'yo'
-    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1L:
-      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (2L, u'available', u'yo'),
+    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1:
+      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (2, 'available', 'yo'),
         'org.freedesktop.Telepathy.Connection/contact-id':
             'test@localhost'}}
 
@@ -65,9 +65,9 @@ def run_test(q, bus, conn, stream):
     simple_signal, presence = q.expect_many (
         EventPattern('dbus-signal', signal='PresencesChanged'),
         EventPattern('stream-presence'))
-    assert simple_signal.args == [{1L: (2L, u'available',  u'')}]
-    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1L:
-      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (2L, u'available', u''),
+    assert simple_signal.args == [{1: (2, 'available',  '')}]
+    assert conn.Contacts.GetContactAttributes([1], [cs.CONN_IFACE_SIMPLE_PRESENCE], False) == { 1:
+      { cs.CONN_IFACE_SIMPLE_PRESENCE + "/presence": (2, 'available', ''),
         'org.freedesktop.Telepathy.Connection/contact-id':
             'test@localhost'}}
 
diff --git a/tests/twisted/presence/shared-status.py b/tests/twisted/presence/shared-status.py
index 17945e3e9..8f795474a 100644
--- a/tests/twisted/presence/shared-status.py
+++ b/tests/twisted/presence/shared-status.py
@@ -16,7 +16,7 @@ import copy
 import constants as cs
 import dbus
 from twisted.words.xish import xpath, domish
-from invisible_helper import SharedStatusStream
+from .invisible_helper import SharedStatusStream
 
 presence_types = {'available' : cs.PRESENCE_AVAILABLE,
                   'away'      : cs.PRESENCE_AWAY,
@@ -330,7 +330,7 @@ def test_shared_status_list(q, bus, conn, stream):
                                iq_type='set'),
                   EventPattern('stream-presence'))
 
-    for show, statuses in test_statuses.items():
+    for show, statuses in list(test_statuses.items()):
         shared_show, _ = _show_to_shared_status_show(show)
         expected_list = stream.shared_status_lists[shared_show]
         for status in statuses:
@@ -362,7 +362,7 @@ def test_shared_status_chat(q, bus, conn, stream):
 
     try:
         conn.SimplePresence.SetPresence('chat', 'This is not going to work')
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assert e.get_dbus_name() == cs.NOT_AVAILABLE
     else:
         assert False
diff --git a/tests/twisted/pubsub.py b/tests/twisted/pubsub.py
index 298106d95..0b7a129e8 100644
--- a/tests/twisted/pubsub.py
+++ b/tests/twisted/pubsub.py
@@ -22,7 +22,7 @@ def test(q, bus, conn, stream):
             elem('items', node=ns.GEOLOC)(
                 elem('item', id='12345')(
                     elem(ns.GEOLOC, 'geoloc')(
-                        elem ('country') (u'France'))))))
+                        elem ('country') ('France'))))))
     stream.send(message)
 
     # event node with a wrong NS
@@ -31,7 +31,7 @@ def test(q, bus, conn, stream):
             elem('items', node=ns.GEOLOC)(
                 elem('item', id='12345')(
                     elem(ns.GEOLOC, 'geoloc')(
-                        elem ('country') (u'France'))))))
+                        elem ('country') ('France'))))))
     stream.send(message)
 
     # event node without 'from'
@@ -40,7 +40,7 @@ def test(q, bus, conn, stream):
             elem('items', node=ns.GEOLOC)(
                 elem('item', id='12345')(
                     elem(ns.GEOLOC, 'geoloc')(
-                        elem ('country') (u'France'))))))
+                        elem ('country') ('France'))))))
     stream.send(message)
 
     # event node with an invalid 'from'
@@ -49,7 +49,7 @@ def test(q, bus, conn, stream):
             elem('items', node=ns.GEOLOC)(
                 elem('item', id='12345')(
                     elem(ns.GEOLOC, 'geoloc')(
-                        elem ('country') (u'France'))))))
+                        elem ('country') ('France'))))))
     stream.send(message)
 
     # no items node
@@ -76,7 +76,7 @@ def test(q, bus, conn, stream):
             elem('items', node=ns.GEOLOC)(
                 elem('item', id='12345')(
                     elem('geoloc')(
-                        elem ('country') (u'France'))))))
+                        elem ('country') ('France'))))))
     stream.send(message)
 
     # valid but unknown pubsub notification
@@ -85,7 +85,7 @@ def test(q, bus, conn, stream):
             elem('items', node='http://www.badger.com')(
                 elem('item', id='12345')(
                     elem('http://www.badger.com', 'badger')(
-                        elem ('mushroom') (u'snake'))))))
+                        elem ('mushroom') ('snake'))))))
     stream.send(message)
 
     sync_stream(q, stream)
diff --git a/tests/twisted/roster/test-google-roster.py b/tests/twisted/roster/test-google-roster.py
index 257661b6e..cc7914172 100644
--- a/tests/twisted/roster/test-google-roster.py
+++ b/tests/twisted/roster/test-google-roster.py
@@ -38,7 +38,7 @@ def add_roster_item(query, contact, state, ask, attrs={}):
     if ask:
         item['ask'] = 'subscribe'
 
-    for k, v in attrs.iteritems():
+    for k, v in attrs.items():
         item[k] = v
 
     return item
diff --git a/tests/twisted/roster/test-save-alias-to-roster.py b/tests/twisted/roster/test-save-alias-to-roster.py
index 2164915d5..5ff01717c 100644
--- a/tests/twisted/roster/test-save-alias-to-roster.py
+++ b/tests/twisted/roster/test-save-alias-to-roster.py
@@ -122,7 +122,7 @@ def test(q, bus, conn, stream):
 
     # But if we get a PEP nickname update for this contact, Gabble should use
     # the new nickname, and write it back to the roster.
-    nick = u'The Friendly Faith Plate'
+    nick = 'The Friendly Faith Plate'
     stream.send(make_pubsub_event(jid, ns.NICK, elem(ns.NICK, 'nick')(nick)))
     expect_AliasesChanged_and_roster_write(q, stream, handle, jid, nick)
 
@@ -133,7 +133,7 @@ def test(q, bus, conn, stream):
     #
     # So first up, let's change the Friendly Faith Plate's nickname to
     # something else.
-    custom_nick = u'I saw a deer today'
+    custom_nick = 'I saw a deer today'
     conn.Aliasing.SetAliases({handle: custom_nick})
     expect_AliasesChanged_and_roster_write(q, stream, handle, jid, custom_nick)
 
diff --git a/tests/twisted/search/extended.py b/tests/twisted/search/extended.py
index aeadf1a51..9027406c6 100644
--- a/tests/twisted/search/extended.py
+++ b/tests/twisted/search/extended.py
@@ -115,7 +115,7 @@ def complete_search(q, bus, conn, stream):
     results = { g_jid: g_results, f_jid: f_results }
 
     search_fields, chan, c_search, c_props = do_one_search (q, bus, conn, stream,
-        fields, expected_search_keys, terms, results.values())
+        fields, expected_search_keys, terms, list(results.values()))
 
     assert len(search_fields) == 1
     assert ('last', 'Threepwood') in search_fields, search_fields
@@ -123,9 +123,9 @@ def complete_search(q, bus, conn, stream):
     e = q.expect('dbus-signal', signal='SearchResultReceived')
     infos = e.args[0]
 
-    assertSameSets(results.keys(), infos.keys())
+    assertSameSets(list(results.keys()), list(infos.keys()))
 
-    for id in results.keys():
+    for id in list(results.keys()):
         i = infos[id]
         r = results[id]
         i_ = pformat(unwrap(i))
@@ -158,7 +158,7 @@ def complete_search2(q, bus, conn, stream):
     results = { g_jid: g_results, f_jid: f_results }
 
     search_fields, chan, c_search, c_props = do_one_search (q, bus, conn, stream,
-        fields, expected_search_keys, terms, results.values())
+        fields, expected_search_keys, terms, list(results.values()))
 
     assert len(search_fields) == 1
     assert ('family', 'Threepwood') in search_fields, search_fields
@@ -166,9 +166,9 @@ def complete_search2(q, bus, conn, stream):
     e = q.expect('dbus-signal', signal='SearchResultReceived')
     infos = e.args[0]
 
-    assertSameSets(results.keys(), infos.keys())
+    assertSameSets(list(results.keys()), list(infos.keys()))
 
-    for id in results.keys():
+    for id in list(results.keys()):
         i = infos[id]
         r = results[id]
         i_ = pformat(unwrap(i))
@@ -197,7 +197,7 @@ def openfire_search(q, bus, conn, stream):
     results = {jid : { 'jid': jid, 'Name': 'Badger Badger', 'Email': jid, 'Username': 'badger'}}
 
     search_fields, chan, c_search, c_props = do_one_search (q, bus, conn, stream,
-        fields, expected_search_keys, terms, results.values())
+        fields, expected_search_keys, terms, list(results.values()))
 
     assert len(search_fields) == 4
     assert ('search', '*badger*') in search_fields, search_fields
@@ -208,9 +208,9 @@ def openfire_search(q, bus, conn, stream):
     r = q.expect('dbus-signal', signal='SearchResultReceived')
     infos = r.args[0]
 
-    assertSameSets(results.keys(), infos.keys())
+    assertSameSets(list(results.keys()), list(infos.keys()))
 
-    for id in results.keys():
+    for id in list(results.keys()):
         i = infos[id]
         r = results[id]
         i_ = pformat(unwrap(i))
@@ -233,7 +233,7 @@ def double_nick(q, bus, conn, stream):
     results = { }
 
     search_fields, chan, c_search, c_props = do_one_search (q, bus, conn, stream,
-        fields, expected_search_keys, terms, results.values())
+        fields, expected_search_keys, terms, list(results.values()))
 
 def no_x_in_reply(q, bus, conn, stream):
     fields = [('nickname', 'text-single', 'NickName', []),
diff --git a/tests/twisted/search/search_helper.py b/tests/twisted/search/search_helper.py
index d492d3980..a7c9e48f6 100644
--- a/tests/twisted/search/search_helper.py
+++ b/tests/twisted/search/search_helper.py
@@ -120,7 +120,7 @@ def send_results_extended(stream, iq, results, fields):
     # add results
     for r in results:
         item = x.addElement('item')
-        for var, value in r.items():
+        for var, value in list(r.items()):
             field = item.addElement('field')
             field['var'] = var
             field.addElement('value', content=value)
diff --git a/tests/twisted/search/unextended.py b/tests/twisted/search/unextended.py
index e25f35d96..b34c8d9cd 100644
--- a/tests/twisted/search/unextended.py
+++ b/tests/twisted/search/unextended.py
@@ -67,19 +67,19 @@ def complete_search(q, bus, conn, stream, server):
     i = 0
     for field in query.elements():
         assert field.name == 'last', field.toXml()
-        assert field.children[0] == u'Threepwood', field.children[0]
+        assert field.children[0] == 'Threepwood', field.children[0]
         i += 1
     assert i == 1, query
 
     # Server sends the results of the search.
-    send_results(stream, iq, results.values())
+    send_results(stream, iq, list(results.values()))
 
     r = q.expect('dbus-signal', signal='SearchResultReceived')
     infos = r.args[0]
 
-    assertSameSets(results.keys(), infos.keys())
+    assertSameSets(list(results.keys()), list(infos.keys()))
 
-    for id in results.keys():
+    for id in list(results.keys()):
         i = infos[id]
         r = results[id]
         i_ = pformat(unwrap(i))
@@ -138,7 +138,7 @@ def cancelled_while_in_progress(q, bus, conn, stream, server):
     search_result_received_event = EventPattern('dbus-signal', signal='SearchResultReceived')
     q.forbid_events([search_result_received_event])
 
-    send_results(stream, iq, results.values())
+    send_results(stream, iq, list(results.values()))
 
     # Make sure Gabble's received the results.
     sync_stream(q, stream)
diff --git a/tests/twisted/servicetest.py b/tests/twisted/servicetest.py
index adb303051..acb679de1 100644
--- a/tests/twisted/servicetest.py
+++ b/tests/twisted/servicetest.py
@@ -34,7 +34,7 @@ class DictionarySupersetOf (object):
         but it turns out that this doesn't work if you have another dict
         nested in the values of your dicts"""
         try:
-            for k,v in self._dictionary.items():
+            for k,v in list(self._dictionary.items()):
                 if k not in other or other[k] != v:
                     return False
             return True
@@ -86,7 +86,7 @@ class EventPattern:
         if event.type != self.type:
             return False
 
-        for key, value in self.properties.iteritems():
+        for key, value in self.properties.items():
             try:
                 if getattr(event, key) != value:
                     return False
@@ -128,7 +128,7 @@ class BaseEventQueue:
 
     def log(self, s):
         if self.verbose:
-            print s
+            print(s)
 
     def log_queues(self, queues):
         self.log ("Waiting for event on: %s" % ", ".join(queues))
@@ -137,7 +137,7 @@ class BaseEventQueue:
         self.log('got event:')
 
         if self.verbose:
-            map(self.log, format_event(event))
+            list(map(self.log, format_event(event)))
 
     def forbid_events(self, patterns):
         """
@@ -265,10 +265,10 @@ class BaseEventQueue:
 
     def queues_available(self, queues):
         if queues == None:
-            return self.event_queues.keys()
+            return list(self.event_queues.keys())
         else:
-            available = self.event_queues.keys()
-            return filter(lambda x: x in available, queues)
+            available = list(self.event_queues.keys())
+            return [x for x in queues if x in available]
 
 
     def pop_next(self, queue):
@@ -362,7 +362,7 @@ class EventQueueTest(unittest.TestCase):
         queue.append(Event('baz-test', x=1))
         queue.append(Event('baz-test', x=2))
 
-        for x in xrange(1,2):
+        for x in range(1,2):
             e = queue.expect ('baz-test')
             assertEquals (x, e.x)
 
@@ -390,18 +390,18 @@ def unwrap(x):
     printed."""
 
     if isinstance(x, list):
-        return map(unwrap, x)
+        return list(map(unwrap, x))
 
     if isinstance(x, tuple):
         return tuple(map(unwrap, x))
 
     if isinstance(x, dict):
-        return dict([(unwrap(k), unwrap(v)) for k, v in x.iteritems()])
+        return dict([(unwrap(k), unwrap(v)) for k, v in x.items()])
 
     if isinstance(x, dbus.Boolean):
         return bool(x)
 
-    for t in [unicode, str, long, int, float]:
+    for t in [str, str, int, int, float]:
         if isinstance(x, t):
             return t(x)
 
@@ -446,7 +446,7 @@ class ProxyWrapper:
             dbus.Interface(object, tp_name_prefix + '.Properties')
         self.interfaces = dict([
             (name, dbus.Interface(object, iface))
-            for name, iface in others.iteritems()])
+            for name, iface in others.items()])
 
     def __getattr__(self, name):
         if name in self.interfaces:
@@ -562,7 +562,7 @@ def watch_tube_signals(q, tube):
         q.append(Event('tube-signal',
             path=kwargs['path'],
             signal=kwargs['member'],
-            args=map(unwrap, args),
+            args=list(map(unwrap, args)),
             tube=tube))
 
     tube.add_signal_receiver(got_signal_cb,
@@ -644,7 +644,7 @@ def install_colourer():
             self.patterns = patterns
 
         def write(self, s):
-            for p, f in self.patterns.items():
+            for p, f in list(self.patterns.items()):
                 if s.startswith(p):
                     self.fh.write(f(p) + s[len(p):])
                     return
@@ -658,7 +658,7 @@ def install_colourer():
 class DummyStream(object):
     def write(self, s):
         if 'CHECK_TWISTED_VERBOSE' in os.environ:
-            print s,
+            print(s, end=' ')
 
     def flush(self):
         pass
diff --git a/tests/twisted/sidecar-own-caps.py b/tests/twisted/sidecar-own-caps.py
index 3cbed76fb..c5fe9361b 100644
--- a/tests/twisted/sidecar-own-caps.py
+++ b/tests/twisted/sidecar-own-caps.py
@@ -15,7 +15,7 @@ from config import PLUGINS_ENABLED
 TEST_PLUGIN_IFACE = "org.freedesktop.Telepathy.Gabble.Plugin.Test"
 
 if not PLUGINS_ENABLED:
-    print "NOTE: built without --enable-plugins, skipping"
+    print("NOTE: built without --enable-plugins, skipping")
     raise SystemExit(77) # which makes the test show up as skipped
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/sidecars.py b/tests/twisted/sidecars.py
index caeed8dda..6c866a7b0 100644
--- a/tests/twisted/sidecars.py
+++ b/tests/twisted/sidecars.py
@@ -12,8 +12,8 @@ from config import PLUGINS_ENABLED
 TEST_PLUGIN_IFACE = "org.freedesktop.Telepathy.Gabble.Plugin.Test"
 
 if not PLUGINS_ENABLED:
-    print "NOTE: built without --enable-plugins, not testing plugins"
-    print "      (but still testing failing calls to EnsureSidecar)"
+    print("NOTE: built without --enable-plugins, not testing plugins")
+    print("      (but still testing failing calls to EnsureSidecar)")
 
 def test(q, bus, conn, stream):
     # Request a sidecar thate we support before we're connected; it should just
diff --git a/tests/twisted/test-helper.py b/tests/twisted/test-helper.py
index 5fb5e8e3e..0ae7fa18d 100644
--- a/tests/twisted/test-helper.py
+++ b/tests/twisted/test-helper.py
@@ -40,12 +40,12 @@ class TestShell:
         self.events = []
 
     def expect(self, event, data):
-        print 'event:'
+        print('event:')
         for item in event:
-            print '-', pprint.pformat(item)
+            print('-', pprint.pformat(item))
         db = LoggingPdb()
         ret = db.runcall(expect, event, data)
-        print (ret, db.log)
+        print((ret, db.log))
         self.events.append((event, db.log, ret))
         return False
 
@@ -78,7 +78,7 @@ if __name__ == '__main__':
     except KeyboardInterrupt:
         pass
 
-    print 'writing test to test.dump'
+    print('writing test to test.dump')
     fh = file('test.dump', 'w')
     fh.write(shell.make_script())
 
diff --git a/tests/twisted/test-location.py b/tests/twisted/test-location.py
index cb1817321..a82df658f 100644
--- a/tests/twisted/test-location.py
+++ b/tests/twisted/test-location.py
@@ -69,7 +69,7 @@ def test(q, bus, conn, stream):
     try:
         conn.Set (cs.CONN_IFACE_LOCATION, 'LocationAccessControl', bad_access_control,
             dbus_interface =cs.PROPERTIES_IFACE)
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         pass
     else:
         assert False, "Should have had an error!"
@@ -79,7 +79,7 @@ def test(q, bus, conn, stream):
     try:
         conn.Set (cs.CONN_IFACE_LOCATION, 'LocationAccessControl', bad_access_control,
             dbus_interface =cs.PROPERTIES_IFACE)
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assert e.get_dbus_name() == cs.INVALID_ARGUMENT, e.get_dbus_name()
     else:
         assert False, "Should have had an error!"
@@ -91,7 +91,7 @@ def test(q, bus, conn, stream):
     try:
         conn.Set (cs.CONN_IFACE_LOCATION, 'LocationAccessControl', bad_access_control,
             dbus_interface =cs.PROPERTIES_IFACE)
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assert e.get_dbus_name() == cs.INVALID_ARGUMENT, e.get_dbus_name()
     else:
         assert False, "Should have had an error!"
@@ -106,7 +106,7 @@ def test(q, bus, conn, stream):
         conn.Set (cs.CONN_IFACE_LOCATION, 'LocationAccessControlTypes',
             access_control_types,
             dbus_interface =cs.PROPERTIES_IFACE)
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assert e.get_dbus_name() == cs.PERMISSION_DENIED, e.get_dbus_name()
     else:
         assert False, "Should have had an error!"
@@ -182,13 +182,13 @@ def test(q, bus, conn, stream):
             elem('items', node=ns.GEOLOC)(
                 elem('item', id='12345')(
                     elem(ns.GEOLOC, 'geoloc', attrs={'xml:lang': 'en'})(
-                        elem('lat')(u'1.25'),
-                        elem('lon')(u'5.5'),
-                        elem('country')(u'Belgium'),
-                        elem('accuracy')(u'2.3'),
-                        elem('timestamp')(unicode(date_str)),
+                        elem('lat')('1.25'),
+                        elem('lon')('5.5'),
+                        elem('country')('Belgium'),
+                        elem('accuracy')('2.3'),
+                        elem('timestamp')(str(date_str)),
                         # invalid element, will be ignored by Gabble
-                        elem('badger')(u'mushroom'),
+                        elem('badger')('mushroom'),
                     )
                 )
             )
@@ -239,7 +239,7 @@ def test(q, bus, conn, stream):
 
     try:
         conn.Location.SetLocation({'lat': 'pony'})
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assertEquals(e.get_dbus_name(), cs.INVALID_ARGUMENT)
     else:
         assert False
@@ -250,7 +250,7 @@ def test(q, bus, conn, stream):
             elem('items', node=ns.GEOLOC)(
                 elem('item', id='12345')(
                     elem(ns.GEOLOC, 'geoloc')(
-                        elem ('country') (u'France')
+                        elem ('country') ('France')
                     )
                 )
             )
@@ -280,7 +280,7 @@ def test(q, bus, conn, stream):
       elem('items', node=ns.GEOLOC)(
         elem('item', id='12345')(
           elem(ns.GEOLOC, 'geoloc')(
-            elem ('country') (u'Chad')
+            elem ('country') ('Chad')
           )
         )
       )
diff --git a/tests/twisted/text/destroy.py b/tests/twisted/text/destroy.py
index f51a4c29c..af53c1dae 100644
--- a/tests/twisted/text/destroy.py
+++ b/tests/twisted/text/destroy.py
@@ -71,7 +71,7 @@ def test(q, bus, conn, stream):
     assert elem['type'] == 'chat'
     body = list(event.stanza.elements())[0]
     assert body.name == 'body'
-    assert body.children[0] == u'hey'
+    assert body.children[0] == 'hey'
 
     # <message type="chat"><body>hello</body</message>
     m = domish.Element((None, 'message'))
diff --git a/tests/twisted/text/facebook-own-message.py b/tests/twisted/text/facebook-own-message.py
index a695b3d92..f23a98953 100644
--- a/tests/twisted/text/facebook-own-message.py
+++ b/tests/twisted/text/facebook-own-message.py
@@ -36,7 +36,7 @@ def test(q, bus, conn, stream):
         'Text', ['Messages'])
     handle = props[cs.TARGET_HANDLE]
 
-    text = u'omg omg its ur birthdayy <3 <3 xoxoxoxo'
+    text = 'omg omg its ur birthdayy <3 <3 xoxoxoxo'
     send_own_message(to=jid, text=text)
     e = q.expect('dbus-signal', signal='MessageReceived')
     message, = e.args
@@ -63,7 +63,7 @@ def test(q, bus, conn, stream):
     # is consistent with delivery failure reports.
     q.forbid_events([EventPattern('dbus-signal', signal='MessageReceived')])
     send_own_message(to='-393939@chat.facebook.com',
-        text=u'please ignore this message')
+        text='please ignore this message')
     sync_dbus(bus, q, conn)
 
 if __name__ == '__main__':
diff --git a/tests/twisted/text/initiate.py b/tests/twisted/text/initiate.py
index edf493c1a..384acf9a4 100644
--- a/tests/twisted/text/initiate.py
+++ b/tests/twisted/text/initiate.py
@@ -67,7 +67,7 @@ def test(q, bus, conn, stream):
     assert elem['type'] == 'chat'
     body = list(event.stanza.elements())[0]
     assert body.name == 'body'
-    assert body.children[0] == u'hey'
+    assert body.children[0] == 'hey'
 
     # <message type="chat"><body>hello</body</message>
     m = domish.Element((None, 'message'))
diff --git a/tests/twisted/text/receipts.py b/tests/twisted/text/receipts.py
index 45c7d9f89..d3ebda959 100644
--- a/tests/twisted/text/receipts.py
+++ b/tests/twisted/text/receipts.py
@@ -110,7 +110,7 @@ def replying_to_requests(q, bus, conn, stream):
     stream.send(
         elem('message', from_=jid, type='chat', id='alpha')(
           elem('body')(
-            u"You didn't kill me, you moron!"
+            "You didn't kill me, you moron!"
           ),
           elem(ns.RECEIPTS, 'request')
         ))
@@ -126,13 +126,13 @@ def replying_to_requests(q, bus, conn, stream):
     stream.send(
         elem('message', from_=jid, type='chat', id='beta')(
           elem('body')(
-            u"You've just destroyed my spiritual essences."
+            "You've just destroyed my spiritual essences."
           ),
           elem(ns.RECEIPTS, 'request')
         ))
     q.expect('dbus-signal', signal='MessageReceived')
     e = q.expect('stream-message', to=jid)
-    receipt = e.stanza.elements(uri=ns.RECEIPTS, name='received').next()
+    receipt = next(e.stanza.elements(uri=ns.RECEIPTS, name='received'))
     assertEquals('beta', receipt['id'])
 
     # We would like requests in messages without id=''s not to crash Gabble,
@@ -141,7 +141,7 @@ def replying_to_requests(q, bus, conn, stream):
     stream.send(
         elem('message', from_=jid, type='chat')( # NB. no id='' attribute
           elem('body')(
-            u"A favor that I shall now return!"
+            "A favor that I shall now return!"
           ),
           elem(ns.RECEIPTS, 'request')
         ))
@@ -158,7 +158,7 @@ def replying_to_requests(q, bus, conn, stream):
     stream.send(
         elem('message', from_=jid, type='chat', id='epsilon')(
           elem('body')(
-            u"… but where am I going to find a duck wearing burlap chaps?"
+            "… but where am I going to find a duck wearing burlap chaps?"
           ),
           elem(ns.RECEIPTS, 'request')
         ))
diff --git a/tests/twisted/text/respawn.py b/tests/twisted/text/respawn.py
index 0ba43571f..585cf6009 100644
--- a/tests/twisted/text/respawn.py
+++ b/tests/twisted/text/respawn.py
@@ -67,7 +67,7 @@ def test(q, bus, conn, stream):
     assert elem['type'] == 'chat'
     body = list(event.stanza.elements())[0]
     assert body.name == 'body'
-    assert body.children[0] == u'hey'
+    assert body.children[0] == 'hey'
 
     # <message type="chat"><body>hello</body</message>
     m = domish.Element((None, 'message'))
diff --git a/tests/twisted/text/test-chat-state.py b/tests/twisted/text/test-chat-state.py
index c129fb7a3..b1c635e3e 100644
--- a/tests/twisted/text/test-chat-state.py
+++ b/tests/twisted/text/test-chat-state.py
@@ -159,7 +159,7 @@ def test(q, bus, conn, stream):
 
     def is_body(e):
         if e.name == 'body':
-            assert e.children[0] == u'hi.', e.toXml()
+            assert e.children[0] == 'hi.', e.toXml()
             return True
         return False
 
diff --git a/tests/twisted/text/test-text.py b/tests/twisted/text/test-text.py
index a820e135b..4391d9b47 100644
--- a/tests/twisted/text/test-text.py
+++ b/tests/twisted/text/test-text.py
@@ -108,7 +108,7 @@ def test(q, bus, conn, stream):
         dbus.Dictionary({ 'message-type': 2, # Notice
                         }, signature='sv'),
         { 'content-type': 'text/plain',
-          'content': u"what up",
+          'content': "what up",
         }
     ]
 
@@ -125,7 +125,7 @@ def test(q, bus, conn, stream):
     assert elt['type'] == 'normal'
     body = list(stream_message.stanza.elements())[0]
     assert body.name == 'body'
-    assert body.children[0] == u'what up'
+    assert body.children[0] == 'what up'
 
     sent_message = message_sent.args[0]
     assert len(sent_message) == 2, sent_message
@@ -136,12 +136,12 @@ def test(q, bus, conn, stream):
     assertEquals('test@localhost', header['message-sender-id'])
     body = sent_message[1]
     assert body['content-type'] == 'text/plain', body
-    assert body['content'] == u'what up', body
+    assert body['content'] == 'what up', body
 
     assert message_sent.args[2] == sent_token
 
     assert sent.args[1] == 2, sent.args # Notice
-    assert sent.args[2] == u'what up', sent.args
+    assert sent.args[2] == 'what up', sent.args
 
 
     # Send a message using Channel.Type.Text API
@@ -158,7 +158,7 @@ def test(q, bus, conn, stream):
     assert elt['type'] == 'chat'
     body = list(stream_message.stanza.elements())[0]
     assert body.name == 'body'
-    assert body.children[0] == u'goodbye'
+    assert body.children[0] == 'goodbye'
 
     sent_message = message_sent.args[0]
     assert len(sent_message) == 2, sent_message
@@ -168,17 +168,17 @@ def test(q, bus, conn, stream):
     assert 'message-type' not in header or header['message-type'] == 0, header
     body = sent_message[1]
     assert body['content-type'] == 'text/plain', body
-    assert body['content'] == u'goodbye', body
+    assert body['content'] == 'goodbye', body
 
     assert sent.args[1] == 0, sent.args # message type normal
-    assert sent.args[2] == u'goodbye', sent.args
+    assert sent.args[2] == 'goodbye', sent.args
 
     # And now let's try a message with a malformed type='' attribute.
     malformed = elem(
         'message', from_='foo@bar.com/fubber', type="'")(
-          elem('body')(u'Internettt!'),
-          elem('subject')(u'xyzzy'),
-          elem('thread')(u'6666'),
+          elem('body')('Internettt!'),
+          elem('subject')('xyzzy'),
+          elem('thread')('6666'),
         )
     stream.send(malformed)
 
diff --git a/tests/twisted/tubes/accept-muc-stream-tube.py b/tests/twisted/tubes/accept-muc-stream-tube.py
index 7fc4aa0a6..866d64e3c 100644
--- a/tests/twisted/tubes/accept-muc-stream-tube.py
+++ b/tests/twisted/tubes/accept-muc-stream-tube.py
@@ -28,7 +28,7 @@ def test(q, bus, conn, stream, bytestream_cls,
         return
 
     if access_control == cs.SOCKET_ACCESS_CONTROL_CREDENTIALS:
-        print "Skip Socket_Access_Control_Credentials (fdo #45445)"
+        print("Skip Socket_Access_Control_Credentials (fdo #45445)")
         return
 
     iq_event, disco_event = q.expect_many(
@@ -55,7 +55,7 @@ def test(q, bus, conn, stream, bytestream_cls,
 
     _, stream_event = q.expect_many(
         EventPattern('dbus-signal', signal='MembersChanged',
-            args=[u'', [], [], [], [2], 0, 0]),
+            args=['', [], [], [], [2], 0, 0]),
         EventPattern('stream-presence', to='chat@conf.localhost/test'))
 
     # Send presence for other member of room.
@@ -65,7 +65,7 @@ def test(q, bus, conn, stream, bytestream_cls,
     stream.send(make_muc_presence('none', 'participant', 'chat@conf.localhost', 'test'))
 
     q.expect('dbus-signal', signal='MembersChanged',
-            args=[u'', [2, 3], [], [], [], 0, 0])
+            args=['', [2, 3], [], [], [], 0, 0])
 
     assert conn.InspectHandles(1, [2]) == ['chat@conf.localhost/test']
     assert conn.InspectHandles(1, [3]) == ['chat@conf.localhost/bob']
diff --git a/tests/twisted/tubes/accept-private-dbus-tube.py b/tests/twisted/tubes/accept-private-dbus-tube.py
index dbbeb3bed..c5175e4ab 100644
--- a/tests/twisted/tubes/accept-private-dbus-tube.py
+++ b/tests/twisted/tubes/accept-private-dbus-tube.py
@@ -123,7 +123,7 @@ def test(q, bus, conn, stream, bytestream_cls, access_control):
     # try to accept using a wrong access control
     try:
         dbus_tube_iface.Accept(cs.SOCKET_ACCESS_CONTROL_PORT)
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assertEquals(e.get_dbus_name(), cs.INVALID_ARGUMENT)
     else:
         assert False
diff --git a/tests/twisted/tubes/accept-private-stream-tube.py b/tests/twisted/tubes/accept-private-stream-tube.py
index 37ed1693d..73e13a263 100644
--- a/tests/twisted/tubes/accept-private-stream-tube.py
+++ b/tests/twisted/tubes/accept-private-stream-tube.py
@@ -96,7 +96,7 @@ def expect_tube_activity(q, bus, conn, stream, bytestream_cls, address_type,
 def test(q, bus, conn, stream, bytestream_cls,
         address_type, access_control, access_control_param):
     if access_control == cs.SOCKET_ACCESS_CONTROL_CREDENTIALS:
-        print "Skip Socket_Access_Control_Credentials (fdo #45445)"
+        print("Skip Socket_Access_Control_Credentials (fdo #45445)")
         return
 
     vcard_event, roster_event, disco_event = q.expect_many(
diff --git a/tests/twisted/tubes/close-muc-with-closed-tube.py b/tests/twisted/tubes/close-muc-with-closed-tube.py
index ed08add64..9040d9e45 100644
--- a/tests/twisted/tubes/close-muc-with-closed-tube.py
+++ b/tests/twisted/tubes/close-muc-with-closed-tube.py
@@ -33,7 +33,7 @@ def test(q, bus, conn, stream):
 
     _, stream_event = q.expect_many(
         EventPattern('dbus-signal', signal='MembersChanged',
-            args=[u'', [], [], [], [2], 0, 0]),
+            args=['', [], [], [], [2], 0, 0]),
         EventPattern('stream-presence', to='chat@conf.localhost/test'))
 
     # Send presence for other member of room.
@@ -43,7 +43,7 @@ def test(q, bus, conn, stream):
     stream.send(make_muc_presence('none', 'participant', 'chat@conf.localhost', 'test'))
 
     q.expect('dbus-signal', signal='MembersChanged',
-            args=[u'', [2, 3], [], [], [], 0, 0])
+            args=['', [2, 3], [], [], [], 0, 0])
 
     assert conn.InspectHandles(cs.HT_CONTACT, [2, 3]) == \
         ['chat@conf.localhost/test', 'chat@conf.localhost/bob']
diff --git a/tests/twisted/tubes/create-invalid-tube-channels.py b/tests/twisted/tubes/create-invalid-tube-channels.py
index baa126e96..096f27946 100644
--- a/tests/twisted/tubes/create-invalid-tube-channels.py
+++ b/tests/twisted/tubes/create-invalid-tube-channels.py
@@ -14,7 +14,7 @@ def is_tube(path, props):
 
 def check_no_tubes(conn_props):
     channels = conn_props.Get(cs.CONN_IFACE_REQUESTS, 'Channels')
-    tube_channels = filter(is_tube, channels)
+    tube_channels = list(filter(is_tube, channels))
     assert len(tube_channels) == 0, tube_channels
 
 def test(q, bus, conn, stream):
diff --git a/tests/twisted/tubes/offer-muc-dbus-tube.py b/tests/twisted/tubes/offer-muc-dbus-tube.py
index 06ccc2804..ae85be15b 100644
--- a/tests/twisted/tubes/offer-muc-dbus-tube.py
+++ b/tests/twisted/tubes/offer-muc-dbus-tube.py
@@ -157,7 +157,7 @@ def test(q, bus, conn, stream, access_control):
     # try to offer using a wrong access control
     try:
         dbus_tube_iface.Offer(sample_parameters, cs.SOCKET_ACCESS_CONTROL_PORT)
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assertEquals(e.get_dbus_name(), cs.INVALID_ARGUMENT)
     else:
         assert False
@@ -197,10 +197,10 @@ def test(q, bus, conn, stream, access_control):
                 elem('tube', type='dbus', initiator='chat2@conf.localhost/test',
                     service='com.example.TestCase', id=str(dbus_tube_id))(
                         elem('parameters')(
-                            elem('parameter', name='ay', type='bytes')(u'aGVsbG8='),
-                            elem('parameter', name='s', type='str')(u'hello'),
-                            elem('parameter', name='i', type='int')(u'-123'),
-                            elem('parameter', name='u', type='uint')(u'123')
+                            elem('parameter', name='ay', type='bytes')('aGVsbG8='),
+                            elem('parameter', name='s', type='str')('hello'),
+                            elem('parameter', name='i', type='int')('-123'),
+                            elem('parameter', name='u', type='uint')('123')
                             ))))
 
         # have to add stream-id and dbus-name attributes manually as we can't use
diff --git a/tests/twisted/tubes/offer-private-dbus-tube.py b/tests/twisted/tubes/offer-private-dbus-tube.py
index bb61eb21c..6606f7181 100644
--- a/tests/twisted/tubes/offer-private-dbus-tube.py
+++ b/tests/twisted/tubes/offer-private-dbus-tube.py
@@ -213,7 +213,7 @@ def test(q, bus, conn, stream, bytestream_cls, access_control):
 
     _, disco_event = q.expect_many(
         EventPattern('dbus-signal', signal='PresencesChanged',
-            args = [{alice_handle: (2L, u'available', u'')}]),
+            args = [{alice_handle: (2, 'available', '')}]),
         EventPattern('stream-iq', to='alice@localhost/Test',
             query_ns=ns.DISCO_INFO),
         )
diff --git a/tests/twisted/tubes/offer-private-stream-tube.py b/tests/twisted/tubes/offer-private-stream-tube.py
index de37041c2..fe57adc67 100644
--- a/tests/twisted/tubes/offer-private-stream-tube.py
+++ b/tests/twisted/tubes/offer-private-stream-tube.py
@@ -166,7 +166,7 @@ def test(q, bus, conn, stream, bytestream_cls,
     assert tube['service'] == 'newecho'
     assert tube['type'] == 'stream'
     assert not tube.hasAttribute('initiator')
-    stream_tube_id = long(tube['id'])
+    stream_tube_id = int(tube['id'])
 
     params = {}
     parameter_nodes = xpath.queryForNodes('/tube/parameters/parameter', tube)
@@ -184,7 +184,7 @@ def test(q, bus, conn, stream, bytestream_cls,
     tube_prop_iface = dbus.Interface(new_tube_chan, cs.PROPERTIES_IFACE)
     call_async(q, tube_prop_iface, 'Set', cs.CHANNEL_IFACE_TUBE,
             'Parameters', dbus.Dictionary(
-            {dbus.String(u'foo2'): dbus.String(u'bar2')},
+            {dbus.String('foo2'): dbus.String('bar2')},
             signature=dbus.Signature('sv')),
             dbus_interface=cs.PROPERTIES_IFACE)
     set_error = q.expect('dbus-error')
diff --git a/tests/twisted/tubes/request-invalid-dbus-tube.py b/tests/twisted/tubes/request-invalid-dbus-tube.py
index e03c9a361..5893edda9 100644
--- a/tests/twisted/tubes/request-invalid-dbus-tube.py
+++ b/tests/twisted/tubes/request-invalid-dbus-tube.py
@@ -19,7 +19,7 @@ def test(q, bus, conn, stream):
                      cs.TARGET_ID: 'alice@localhost',
                      cs.DBUS_TUBE_SERVICE_NAME: invalid_service_name
                 })
-        except dbus.DBusException, e:
+        except dbus.DBusException as e:
             assert e.get_dbus_name() == cs.INVALID_ARGUMENT, \
                 (e.get_dbus_name(), invalid_service_name)
         else:
diff --git a/tests/twisted/tubes/test-get-available-tubes.py b/tests/twisted/tubes/test-get-available-tubes.py
index 7b860ebfd..d8d256c14 100644
--- a/tests/twisted/tubes/test-get-available-tubes.py
+++ b/tests/twisted/tubes/test-get-available-tubes.py
@@ -41,7 +41,7 @@ def test(q, bus, conn, stream):
 
     members, event = q.expect_many(
         EventPattern('dbus-signal', signal='MembersChanged',
-            args=[u'', [2, 3], [], [], [], 0, 0]),
+            args=['', [2, 3], [], [], [], 0, 0]),
         EventPattern('dbus-return', method='CreateChannel'))
 
     path = event.value[0]
diff --git a/tests/twisted/tubes/tubetestutil.py b/tests/twisted/tubes/tubetestutil.py
index 3eb86d9d5..9920c2a4b 100644
--- a/tests/twisted/tubes/tubetestutil.py
+++ b/tests/twisted/tubes/tubetestutil.py
@@ -277,7 +277,7 @@ def create_server(q, address_type, factory=None, block_reading=False,
         path = tempfile.mkstemp(suffix=streamfile)[1]
         try:
             os.remove(path)
-        except OSError, e:
+        except OSError as e:
             if e.errno != errno.ENOENT:
                 raise
         reactor.listenUNIX(path, factory)
diff --git a/tests/twisted/vcard/get-contact-info.py b/tests/twisted/vcard/get-contact-info.py
index 6c61ecd24..faab631c4 100644
--- a/tests/twisted/vcard/get-contact-info.py
+++ b/tests/twisted/vcard/get-contact-info.py
@@ -43,17 +43,17 @@ def test(q, bus, conn, stream):
 
     q.expect('dbus-signal', signal='ContactInfoChanged')
 
-    contact_info = [(u'fn', [], [u'Bob']),
-                    (u'n', [], [u'', u'Bob', u'', u'', u'']),
-                    (u'nickname', [], [r'bob,bob1\,,bob2,bob3\,bob4']),
+    contact_info = [('fn', [], ['Bob']),
+                    ('n', [], ['', 'Bob', '', '', '']),
+                    ('nickname', [], [r'bob,bob1\,,bob2,bob3\,bob4']),
                     # LABEL comes out as a single blob of text
-                    (u'label', [], ['42 West Wallaby Street\n'
+                    ('label', [], ['42 West Wallaby Street\n'
                                     "Bishop's Stortford\n"
                                     'Huntingdon\n']),
                     # ORG is a sequence of decreasingly large org.units, starting
                     # with the organisation
-                    (u'org', [], [u'Collabora Ltd.', u'Dept. of Examples',
-                                  u'Exemplary Team']),
+                    ('org', [], ['Collabora Ltd.', 'Dept. of Examples',
+                                  'Exemplary Team']),
                    ]
     # The request should be satisfied from the cache.
     assertEquals(
diff --git a/tests/twisted/vcard/overlapping-sets.py b/tests/twisted/vcard/overlapping-sets.py
index a57ca9cc4..672af8586 100644
--- a/tests/twisted/vcard/overlapping-sets.py
+++ b/tests/twisted/vcard/overlapping-sets.py
@@ -61,9 +61,9 @@ def test(q, bus, conn, stream):
 
     # Before the server replies, the user sets their ContactInfo
     call_async(q, conn.ContactInfo, 'SetContactInfo',
-               [(u'fn', [], [u'King Robert I']),
-                (u'n', [], [u'de Brus', u'Robert', u'', u'King', u'']),
-                (u'nickname', [], [u'Bob'])])
+               [('fn', [], ['King Robert I']),
+                ('n', [], ['de Brus', 'Robert', '', 'King', '']),
+                ('nickname', [], ['Bob'])])
     sync_dbus(bus, q, conn)
     # This acknowledgement is for the avatar; SetAvatar won't happen
     # until this has
diff --git a/tests/twisted/vcard/refresh-contact-info.py b/tests/twisted/vcard/refresh-contact-info.py
index 3fc87d3f0..305ef44bb 100644
--- a/tests/twisted/vcard/refresh-contact-info.py
+++ b/tests/twisted/vcard/refresh-contact-info.py
@@ -40,17 +40,17 @@ def test(q, bus, conn, stream):
     stream.send(result)
 
     q.expect('dbus-signal', signal='ContactInfoChanged',
-             args=[handle, [(u'fn', [], [u'Bob']),
-                            (u'n', [], [u'', u'Bob', u'', u'', u'']),
-                            (u'nickname', [], [r'bob,bob1\,,bob2,bob3\,bob4']),
+             args=[handle, [('fn', [], ['Bob']),
+                            ('n', [], ['', 'Bob', '', '', '']),
+                            ('nickname', [], [r'bob,bob1\,,bob2,bob3\,bob4']),
                             # LABEL comes out as a single blob of text
-                            (u'label', [], ['42 West Wallaby Street\n'
+                            ('label', [], ['42 West Wallaby Street\n'
                             "Bishop's Stortford\n"
                             'Huntingdon\n']),
                             # ORG is a sequence of decreasingly large org.units, starting
                             # with the organisation
-                            (u'org', [], [u'Collabora Ltd.', u'Dept. of Examples',
-                            u'Exemplary Team']),
+                            ('org', [], ['Collabora Ltd.', 'Dept. of Examples',
+                            'Exemplary Team']),
                             ]])
 
     # ContactInfoChanged should not be signalled again
diff --git a/tests/twisted/vcard/set-contact-info.py b/tests/twisted/vcard/set-contact-info.py
index 0035c4c4b..f44b9bda4 100644
--- a/tests/twisted/vcard/set-contact-info.py
+++ b/tests/twisted/vcard/set-contact-info.py
@@ -27,28 +27,28 @@ def test(q, bus, conn, stream):
             query_name='vCard')
 
     call_async(q, conn.ContactInfo, 'SetContactInfo',
-               [(u'fn', [], [u'Wee Ninja']),
-                (u'n', [], [u'Ninja', u'Wee', u'', u'', u'-san']),
-                (u'org', [], ['Collabora, Ltd.']),
-                (u'adr', ['type=work','type=postal','type=parcel'],
+               [('fn', [], ['Wee Ninja']),
+                ('n', [], ['Ninja', 'Wee', '', '', '-san']),
+                ('org', [], ['Collabora, Ltd.']),
+                ('adr', ['type=work','type=postal','type=parcel'],
                     ['', '', '11 Kings Parade', 'Cambridge', 'Cambridgeshire',
                         'CB2 1SJ', 'UK']),
-                (u'label', ['type=work'], [
+                ('label', ['type=work'], [
                     '11 Kings Parade\n'
                     'Cambridge\n'
                     'Cambridgeshire\n'
                     'CB2 1SJ\n'
                     'UK\n']),
-                (u'tel', ['type=voice','type=work'], ['+44 1223 362967']),
-                (u'tel', ['type=voice','type=work'], ['+44 7700 900753']),
-                (u'email', ['type=internet','type=pref'],
+                ('tel', ['type=voice','type=work'], ['+44 1223 362967']),
+                ('tel', ['type=voice','type=work'], ['+44 7700 900753']),
+                ('email', ['type=internet','type=pref'],
                     ['wee.ninja@collabora.co.uk']),
-                (u'email', ['type=internet'], ['wee.ninja@example.com']),
-                (u'x-jabber', [], ['wee.ninja@collabora.co.uk']),
-                (u'x-jabber', [], ['wee.ninja@example.com']),
-                (u'url', [], ['http://www.thinkgeek.com/geektoys/plush/8823/']),
-                (u'nickname', [], [u'HR Ninja']),
-                (u'nickname', [], [u'Enforcement Ninja'])])
+                ('email', ['type=internet'], ['wee.ninja@example.com']),
+                ('x-jabber', [], ['wee.ninja@collabora.co.uk']),
+                ('x-jabber', [], ['wee.ninja@example.com']),
+                ('url', [], ['http://www.thinkgeek.com/geektoys/plush/8823/']),
+                ('nickname', [], ['HR Ninja']),
+                ('nickname', [], ['Enforcement Ninja'])])
 
     # We don't acknowledge the initial vCard get until we're sure that Gabble's
     # received our call to SetContactInfo. This ensures that it will issue a
@@ -162,7 +162,7 @@ def test(q, bus, conn, stream):
 
     # unsupported type-parameter for a structured field
     call_async(q, conn.ContactInfo, 'SetContactInfo',
-            [(u'n', ['language=ja'], [u'Ninja', u'Wee', u'', u'', u'-san'])])
+            [('n', ['language=ja'], ['Ninja', 'Wee', '', '', '-san'])])
     q.expect('dbus-error', method='SetContactInfo', name=cs.INVALID_ARGUMENT)
 
     # unsupported type-parameter for LABEL
@@ -207,20 +207,20 @@ def test(q, bus, conn, stream):
     # a sub-department within Human Resources, and the ninja no longer
     # qualifies for a company phone
 
-    vcard_in = [(u'fn', [], [u'Wee Ninja']),
-                (u'n', [], [u'Ninja', u'Wee', u'', u'', u'-san']),
-                (u'org', [], ['Collabora, Ltd.',
+    vcard_in = [('fn', [], ['Wee Ninja']),
+                ('n', [], ['Ninja', 'Wee', '', '', '-san']),
+                ('org', [], ['Collabora, Ltd.',
                     'Human Resources', 'Company Policy Enforcement']),
-                (u'adr', ['type=work','type=postal','type=parcel'],
+                ('adr', ['type=work','type=postal','type=parcel'],
                     ['', '', '11 Kings Parade', 'Cambridge', 'Cambridgeshire',
                         'CB2 1SJ', 'UK']),
-                (u'tel', ['type=voice','type=work'], ['+44 1223 362967']),
-                (u'email', ['type=internet','type=pref'],
+                ('tel', ['type=voice','type=work'], ['+44 1223 362967']),
+                ('email', ['type=internet','type=pref'],
                     ['wee.ninja@collabora.co.uk']),
-                (u'email', ['type=internet'], ['wee.ninja@example.com']),
-                (u'url', [], ['http://www.thinkgeek.com/geektoys/plush/8823/']),
-                (u'nickname', [], [u'HR Ninja']),
-                (u'nickname', [], [u'Enforcement Ninja'])]
+                ('email', ['type=internet'], ['wee.ninja@example.com']),
+                ('url', [], ['http://www.thinkgeek.com/geektoys/plush/8823/']),
+                ('nickname', [], ['HR Ninja']),
+                ('nickname', [], ['Enforcement Ninja'])]
 
     call_async(q, conn.ContactInfo, 'SetContactInfo', vcard_in)
 
diff --git a/tests/twisted/vcard/supported-fields.py b/tests/twisted/vcard/supported-fields.py
index 7a7860ce1..06d8a07a4 100644
--- a/tests/twisted/vcard/supported-fields.py
+++ b/tests/twisted/vcard/supported-fields.py
@@ -25,7 +25,7 @@ import constants as cs
 
 PARAMS_EXACT = cs.CONTACT_INFO_FIELD_FLAG_PARAMETERS_EXACT
 OVERWRITTEN_BY_NICKNAME = cs.CONTACT_INFO_FIELD_FLAG_OVERWRITTEN_BY_NICKNAME
-UNLIMITED = 0xffffffffL
+UNLIMITED = 0xffffffff
 
 def types(s):
     ret = ['type=%s' % t for t in s.split()]
diff --git a/tests/twisted/vcard/test-alias-empty-vcard.py b/tests/twisted/vcard/test-alias-empty-vcard.py
index 8a03737f3..aeb68e54d 100644
--- a/tests/twisted/vcard/test-alias-empty-vcard.py
+++ b/tests/twisted/vcard/test-alias-empty-vcard.py
@@ -35,7 +35,7 @@ def test(q, bus, conn, stream):
     acknowledge_iq(stream, event.stanza)
 
     q.expect('dbus-return', method='RequestAliases',
-        value=([u'bob@foo.com'],))
+        value=(['bob@foo.com'],))
 
     # A second request should be satisfied from the cache.
     assert conn.Aliasing.RequestAliases([handle]) == ['bob@foo.com']
diff --git a/tests/twisted/vcard/test-alias-message.py b/tests/twisted/vcard/test-alias-message.py
index 362036a0e..afaedefaf 100644
--- a/tests/twisted/vcard/test-alias-message.py
+++ b/tests/twisted/vcard/test-alias-message.py
@@ -17,8 +17,8 @@ import ns
 def test(q, bus, conn, stream):
     expect_and_handle_get_vcard(q, stream)
 
-    jid = u'bora.horza.gobuchul@culture.lit'
-    alias = u'Horza'
+    jid = 'bora.horza.gobuchul@culture.lit'
+    alias = 'Horza'
     handle = conn.RequestHandles(cs.HT_CONTACT, [jid])[0]
 
     # We don't have an interesting alias for Horza
@@ -27,7 +27,7 @@ def test(q, bus, conn, stream):
     # Horza sends us a message containing his preferred nickname.
     stream.send(
         elem('message', from_=jid, type='chat')(
-          elem('body')(u"It's a long story."),
+          elem('body')("It's a long story."),
           elem(ns.NICK, 'nick')(alias)
         ))
     _, mr = q.expect_many(
@@ -77,7 +77,7 @@ def test(q, bus, conn, stream):
 
     stream.send(
         elem('message', from_=bob_jid, type='groupchat')(
-          elem('body')(u'My religion dies with me.'),
+          elem('body')('My religion dies with me.'),
           elem(ns.NICK, 'nick')(alias),
         ))
 
diff --git a/tests/twisted/vcard/test-alias-pep.py b/tests/twisted/vcard/test-alias-pep.py
index 0adc2b9e6..fda4ad7da 100644
--- a/tests/twisted/vcard/test-alias-pep.py
+++ b/tests/twisted/vcard/test-alias-pep.py
@@ -32,7 +32,7 @@ def test(q, bus, conn, stream):
     stream.send(result)
 
     q.expect('dbus-signal', signal='AliasesChanged',
-        args=[[(handle, u'Bobby')]])
+        args=[[(handle, 'Bobby')]])
     q.expect('dbus-return', method='RequestAliases',
         value=(['Bobby'],))
 
diff --git a/tests/twisted/vcard/test-alias.py b/tests/twisted/vcard/test-alias.py
index 7e8dff2ec..8e08d4519 100644
--- a/tests/twisted/vcard/test-alias.py
+++ b/tests/twisted/vcard/test-alias.py
@@ -37,7 +37,7 @@ def test(q, bus, conn, stream):
     stream.send(result)
 
     q.expect('dbus-signal', signal='AliasesChanged',
-        args=[[(handle, u'Bobby')]])
+        args=[[(handle, 'Bobby')]])
     q.expect('dbus-return', method='RequestAliases',
         value=(['Bobby'],))
 
diff --git a/tests/twisted/vcard/test-avatar-async.py b/tests/twisted/vcard/test-avatar-async.py
index 423e9ff8d..8aba56b5f 100644
--- a/tests/twisted/vcard/test-avatar-async.py
+++ b/tests/twisted/vcard/test-avatar-async.py
@@ -196,7 +196,7 @@ def test(q, bus, conn, stream):
     # than the error returned when the service crashes).
     try:
         conn.Avatars.RequestAvatar(handles[-1])
-    except dbus.DBusException, e:
+    except dbus.DBusException as e:
         assertEquals(cs.NOT_AVAILABLE, e.get_dbus_name())
     else:
         assert False
diff --git a/tests/twisted/vcard/test-avatar-tokens.py b/tests/twisted/vcard/test-avatar-tokens.py
index 59f01c092..ea09d6d02 100644
--- a/tests/twisted/vcard/test-avatar-tokens.py
+++ b/tests/twisted/vcard/test-avatar-tokens.py
@@ -49,7 +49,7 @@ def test(q, bus, conn, stream):
 
     tokens = unwrap(conn.Avatars.GetKnownAvatarTokens(handles))
     tokens = sorted(tokens.items())
-    assert tokens == [(2, 'SHA1SUM-FOR-AMY'), (3, 'SHA1SUM-FOR-BOB'), (4, u'')]
+    assert tokens == [(2, 'SHA1SUM-FOR-AMY'), (3, 'SHA1SUM-FOR-BOB'), (4, '')]
 
 if __name__ == '__main__':
     exec_test(test)
diff --git a/tests/twisted/vcard/test-set-alias.py b/tests/twisted/vcard/test-set-alias.py
index 9545ef90c..0567ef176 100644
--- a/tests/twisted/vcard/test-set-alias.py
+++ b/tests/twisted/vcard/test-set-alias.py
@@ -11,10 +11,10 @@ import constants as cs
 import ns
 
 def validate_pep_update(pep_update, expected_nickname):
-    publish = pep_update.query.elements(uri=ns.PUBSUB, name='publish').next()
+    publish = next(pep_update.query.elements(uri=ns.PUBSUB, name='publish'))
     assertEquals(ns.NICK, publish['node'])
-    item = publish.elements(uri=ns.PUBSUB, name='item').next()
-    nick = item.elements(uri=ns.NICK, name='nick').next()
+    item = next(publish.elements(uri=ns.PUBSUB, name='item'))
+    nick = next(item.elements(uri=ns.NICK, name='nick'))
 
     if expected_nickname is not None:
         assertEquals(expected_nickname, nick.children[0])
@@ -31,12 +31,12 @@ def test(q, bus, conn, stream):
     acknowledge_iq(stream, pep_update.stanza)
 
     def check(vCard):
-        nickname = vCard.elements(uri=ns.VCARD_TEMP, name='NICKNAME').next()
+        nickname = next(vCard.elements(uri=ns.VCARD_TEMP, name='NICKNAME'))
         assertEquals('lala', nickname.children[0])
     expect_and_handle_set_vcard(q, stream, check=check)
 
     event = q.expect('dbus-signal', signal='AliasesChanged',
-        args=[[(self_handle, u'lala')]])
+        args=[[(self_handle, 'lala')]])
 
     conn.Aliasing.SetAliases({self_handle: ''})
     pep_update = q.expect('stream-iq', iq_type='set', query_ns=ns.PUBSUB, query_name='pubsub')
@@ -50,7 +50,7 @@ def test(q, bus, conn, stream):
     expect_and_handle_set_vcard(q, stream, check=check)
 
     event = q.expect('dbus-signal', signal='AliasesChanged',
-        args=[[(self_handle, u'test@localhost')]])
+        args=[[(self_handle, 'test@localhost')]])
 
 if __name__ == '__main__':
     exec_test(test)
diff --git a/tests/twisted/vcard/update-get-failed.py b/tests/twisted/vcard/update-get-failed.py
index 225b70ecf..bffa518ce 100644
--- a/tests/twisted/vcard/update-get-failed.py
+++ b/tests/twisted/vcard/update-get-failed.py
@@ -27,7 +27,7 @@ def test(q, bus, conn, stream):
     reply['type'] = 'error'
     reply.addChild(elem('error')(
         elem(ns.STANZA, 'forbidden')(),
-        elem(ns.STANZA, 'text')(u'zomg whoops')))
+        elem(ns.STANZA, 'text')('zomg whoops')))
     stream.send(reply)
 
     event = q.expect('dbus-error', method='SetAvatar', name=cs.NOT_AVAILABLE)
-- 
2.30.2

